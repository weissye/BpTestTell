{
  "gold": [
    {
      "path": "/rest/api/3/issue/properties",
      "method": "POST",
      "operationId": "bulkSetIssuesPropertiesList",
      "summary": "",
      "user": "As a project manager, I want to set multiple properties for a list of issues at once to streamline the process of updating issue metadata.",
      "ideal": "The API should accept a list of issue IDs and their corresponding properties, and return a success response for each issue updated."
    },
    {
      "path": "/rest/api/3/issue/properties/multi",
      "method": "POST",
      "operationId": "bulkSetIssuePropertiesByIssue",
      "summary": "",
      "user": "As a developer, I need to update properties for several issues in one request to save time and reduce the number of API calls.",
      "ideal": "The API should allow me to send a batch of issue IDs with their properties and return a confirmation of the updates made."
    },
    {
      "path": "/rest/api/3/issue/properties/{propertyKey}",
      "method": "DELETE",
      "operationId": "bulkDeleteIssueProperty",
      "summary": "",
      "user": "As a team lead, I want to remove a specific property from all issues to ensure consistency in our project management practices.",
      "ideal": "The API should delete the specified property from all issues and return a success message indicating the number of issues updated."
    },
    {
      "path": "/rest/api/3/issue/properties/{propertyKey}",
      "method": "PUT",
      "operationId": "bulkSetIssueProperty",
      "summary": "",
      "user": "As a product owner, I want to set a specific property for all issues in a project to reflect a new requirement.",
      "ideal": "The API should update the specified property for all issues and return a summary of the changes made."
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties",
      "method": "GET",
      "operationId": "getIssuePropertyKeys",
      "summary": "",
      "user": "As a QA engineer, I want to retrieve all property keys for a specific issue to understand its metadata and ensure it meets our standards.",
      "ideal": "The API should return a list of all property keys associated with the specified issue."
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}",
      "method": "DELETE",
      "operationId": "deleteIssueProperty",
      "summary": "",
      "user": "As a scrum master, I need to delete a specific property from an issue to clean up unnecessary metadata.",
      "ideal": "The API should successfully remove the specified property from the issue and confirm the deletion."
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}",
      "method": "GET",
      "operationId": "getIssueProperty",
      "summary": "",
      "user": "As a business analyst, I want to fetch the value of a specific property for an issue to analyze its current state.",
      "ideal": "The API should return the value of the specified property for the given issue."
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}",
      "method": "PUT",
      "operationId": "setIssueProperty",
      "summary": "",
      "user": "As a developer, I want to set a specific property for an issue to reflect the latest changes in our development process.",
      "ideal": "The API should update the property with the new value and return a confirmation of the update."
    }
  ]
}