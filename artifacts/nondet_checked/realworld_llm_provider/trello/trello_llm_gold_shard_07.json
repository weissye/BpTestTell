{
  "gold": [
    {
      "path": "/lists",
      "method": "POST",
      "operationId": "addLists",
      "summary": "",
      "user": "User wants to create a new list in Trello.",
      "ideal": "A new list is created successfully with a unique ID."
    },
    {
      "path": "/lists/{idList}",
      "method": "GET",
      "operationId": "getListsByIdList",
      "summary": "",
      "user": "User wants to retrieve details of a specific list by its ID.",
      "ideal": "Returns the details of the list including its name and cards."
    },
    {
      "path": "/lists/{idList}",
      "method": "PUT",
      "operationId": "updateListsByIdList",
      "summary": "",
      "user": "User wants to update the name of an existing list.",
      "ideal": "The list is updated successfully with the new name."
    },
    {
      "path": "/lists/{idList}/actions",
      "method": "GET",
      "operationId": "getListsActionsByIdList",
      "summary": "",
      "user": "User wants to see the actions performed on a specific list.",
      "ideal": "Returns a list of actions related to the specified list."
    },
    {
      "path": "/lists/{idList}/archiveAllCards",
      "method": "POST",
      "operationId": "addListsArchiveAllCardsByIdList",
      "summary": "",
      "user": "User wants to archive all cards in a specific list.",
      "ideal": "All cards in the list are archived successfully."
    },
    {
      "path": "/lists/{idList}/board",
      "method": "GET",
      "operationId": "getListsBoardByIdList",
      "summary": "",
      "user": "User wants to get the board associated with a specific list.",
      "ideal": "Returns the board details linked to the specified list."
    },
    {
      "path": "/lists/{idList}/board/{field}",
      "method": "GET",
      "operationId": "getListsBoardByIdListByField",
      "summary": "",
      "user": "User wants to retrieve a specific field from the board of a list.",
      "ideal": "Returns the requested field from the board of the specified list."
    },
    {
      "path": "/lists/{idList}/cards",
      "method": "GET",
      "operationId": "getListsCardsByIdList",
      "summary": "",
      "user": "User wants to get all cards in a specific list.",
      "ideal": "Returns a list of all cards contained in the specified list."
    },
    {
      "path": "/lists/{idList}/cards",
      "method": "POST",
      "operationId": "addListsCardsByIdList",
      "summary": "",
      "user": "User wants to add a new card to a specific list.",
      "ideal": "The new card is added to the list successfully."
    },
    {
      "path": "/lists/{idList}/cards/{filter}",
      "method": "GET",
      "operationId": "getListsCardsByIdListByFilter",
      "summary": "",
      "user": "User wants to filter cards in a list based on a specific criterion.",
      "ideal": "Returns the cards that match the specified filter."
    },
    {
      "path": "/lists/{idList}/closed",
      "method": "PUT",
      "operationId": "updateListsClosedByIdList",
      "summary": "",
      "user": "User wants to close a specific list.",
      "ideal": "The list is closed successfully."
    },
    {
      "path": "/lists/{idList}/idBoard",
      "method": "PUT",
      "operationId": "updateListsIdBoardByIdList",
      "summary": "",
      "user": "User wants to change the board associated with a specific list.",
      "ideal": "The list is successfully moved to the new board."
    },
    {
      "path": "/lists/{idList}/moveAllCards",
      "method": "POST",
      "operationId": "addListsMoveAllCardsByIdList",
      "summary": "",
      "user": "User wants to move all cards from one list to another.",
      "ideal": "All cards are moved to the specified list successfully."
    },
    {
      "path": "/lists/{idList}/name",
      "method": "PUT",
      "operationId": "updateListsNameByIdList",
      "summary": "",
      "user": "User wants to rename a specific list.",
      "ideal": "The list is renamed successfully."
    },
    {
      "path": "/lists/{idList}/pos",
      "method": "PUT",
      "operationId": "updateListsPosByIdList",
      "summary": "",
      "user": "User wants to change the position of a specific list.",
      "ideal": "The position of the list is updated successfully."
    },
    {
      "path": "/lists/{idList}/subscribed",
      "method": "PUT",
      "operationId": "updateListsSubscribedByIdList",
      "summary": "",
      "user": "User wants to subscribe or unsubscribe from a specific list.",
      "ideal": "The subscription status of the list is updated successfully."
    },
    {
      "path": "/lists/{idList}/{field}",
      "method": "GET",
      "operationId": "getListsByIdListByField",
      "summary": "",
      "user": "User wants to retrieve a specific field from a list by its ID.",
      "ideal": "Returns the requested field from the specified list."
    }
  ]
}