{
  "gold": [
    {
      "path": "/fetch_api_key",
      "method": "POST",
      "operationId": "fetch-api-key",
      "summary": "",
      "user": "{\"email\":\"user@example.com\",\"password\":\"securepassword123\"}",
      "ideal": "{\"api_key\":\"abcdef1234567890\"}"
    },
    {
      "path": "/dev_fetch_api_key",
      "method": "POST",
      "operationId": "dev-fetch-api-key",
      "summary": "",
      "user": "{\"email\":\"dev@example.com\",\"password\":\"devpassword456\"}",
      "ideal": "{\"api_key\":\"devkey0987654321\"}"
    },
    {
      "path": "/get_stream_id",
      "method": "GET",
      "operationId": "get-stream-id",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the unique identifier for a specific stream."
    },
    {
      "path": "/default_streams",
      "method": "POST",
      "operationId": "add-default-stream",
      "summary": "",
      "user": "user456",
      "ideal": "Add a stream to the user's default streams list."
    },
    {
      "path": "/default_streams",
      "method": "DELETE",
      "operationId": "remove-default-stream",
      "summary": "",
      "user": "user789",
      "ideal": "Remove a stream from the user's default streams list."
    },
    {
      "path": "/users/me/{stream_id}/topics",
      "method": "GET",
      "operationId": "get-stream-topics",
      "summary": "",
      "user": "user101",
      "ideal": "Fetch all topics from a specific stream."
    },
    {
      "path": "/users/me/subscriptions",
      "method": "GET",
      "operationId": "get-subscriptions",
      "summary": "",
      "user": "user202",
      "ideal": "Get a list of all subscriptions for the user."
    },
    {
      "path": "/users/me/subscriptions",
      "method": "POST",
      "operationId": "subscribe",
      "summary": "",
      "user": "user303",
      "ideal": "Subscribe the user to a new stream."
    },
    {
      "path": "/users/me/subscriptions",
      "method": "PATCH",
      "operationId": "update-subscriptions",
      "summary": "",
      "user": "user404",
      "ideal": "Update the user's existing subscriptions."
    },
    {
      "path": "/users/me/subscriptions",
      "method": "DELETE",
      "operationId": "unsubscribe",
      "summary": "",
      "user": "user505",
      "ideal": "Unsubscribe the user from a specific stream."
    },
    {
      "path": "/users/me/subscriptions/muted_topics",
      "method": "PATCH",
      "operationId": "mute-topic",
      "summary": "",
      "user": "user606",
      "ideal": "Mute a specific topic in a subscription."
    },
    {
      "path": "/user_topics",
      "method": "POST",
      "operationId": "update-user-topic",
      "summary": "",
      "user": "user707",
      "ideal": "Update the topic for a specific user."
    },
    {
      "path": "/users/{user_id}/subscriptions/{stream_id}",
      "method": "GET",
      "operationId": "get-subscription-status",
      "summary": "",
      "user": "user808",
      "ideal": "Check the subscription status of a user for a specific stream."
    },
    {
      "path": "/users/me/subscriptions/properties",
      "method": "POST",
      "operationId": "update-subscription-settings",
      "summary": "",
      "user": "user909",
      "ideal": "Update settings for the user's subscriptions."
    },
    {
      "path": "/streams/{stream_id}/members",
      "method": "GET",
      "operationId": "get-subscribers",
      "summary": "",
      "user": "user1010",
      "ideal": "Retrieve a list of members subscribed to a specific stream."
    },
    {
      "path": "/streams",
      "method": "GET",
      "operationId": "get-streams",
      "summary": "",
      "user": "user1111",
      "ideal": "Get a list of all available streams."
    },
    {
      "path": "/streams/{stream_id}",
      "method": "GET",
      "operationId": "get-stream-by-id",
      "summary": "",
      "user": "user1212",
      "ideal": "Fetch details of a specific stream by its ID."
    },
    {
      "path": "/streams/{stream_id}",
      "method": "DELETE",
      "operationId": "archive-stream",
      "summary": "",
      "user": "user1313",
      "ideal": "Archive a specific stream."
    },
    {
      "path": "/streams/{stream_id}",
      "method": "PATCH",
      "operationId": "update-stream",
      "summary": "",
      "user": "user1414",
      "ideal": "Update the details of a specific stream."
    },
    {
      "path": "/streams/{stream_id}/email_address",
      "method": "GET",
      "operationId": "get-stream-email-address",
      "summary": "",
      "user": "user1515",
      "ideal": "Retrieve the email address associated with a specific stream."
    },
    {
      "path": "/streams/{stream_id}/delete_topic",
      "method": "POST",
      "operationId": "delete-topic",
      "summary": "",
      "user": "user1616",
      "ideal": "Delete a specific topic from a stream."
    },
    {
      "path": "/channels/create",
      "method": "POST",
      "operationId": "create-channel",
      "summary": "",
      "user": "user1717",
      "ideal": "Create a new channel for communication."
    },
    {
      "path": "/channel_folders/create",
      "method": "POST",
      "operationId": "create-channel-folder",
      "summary": "",
      "user": "user1818",
      "ideal": "Create a new folder for organizing channels."
    },
    {
      "path": "/channel_folders",
      "method": "GET",
      "operationId": "get-channel-folders",
      "summary": "",
      "user": "user1919",
      "ideal": "Retrieve a list of all channel folders."
    },
    {
      "path": "/channel_folders",
      "method": "PATCH",
      "operationId": "patch-channel-folders",
      "summary": "",
      "user": "user2020",
      "ideal": "Update properties of existing channel folders."
    },
    {
      "path": "/channel_folders/{channel_folder_id}",
      "method": "PATCH",
      "operationId": "update-channel-folder",
      "summary": "",
      "user": "user2121",
      "ideal": "Update a specific channel folder."
    },
    {
      "path": "/calls/bigbluebutton/create",
      "method": "GET",
      "operationId": "create-big-blue-button-video-call",
      "summary": "",
      "user": "user2222",
      "ideal": "Create a new Big Blue Button video call."
    },
    {
      "path": "/drafts",
      "method": "GET",
      "operationId": "get-drafts",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve all drafts created by the user."
    },
    {
      "path": "/drafts",
      "method": "POST",
      "operationId": "create-drafts",
      "summary": "",
      "user": "user456",
      "ideal": "Create a new draft with the provided content."
    },
    {
      "path": "/drafts/1",
      "method": "PATCH",
      "operationId": "edit-draft",
      "summary": "",
      "user": "user789",
      "ideal": "Edit the draft with ID 1 to update its content."
    },
    {
      "path": "/drafts/2",
      "method": "DELETE",
      "operationId": "delete-draft",
      "summary": "",
      "user": "user321",
      "ideal": "Delete the draft with ID 2."
    },
    {
      "path": "/saved_snippets",
      "method": "GET",
      "operationId": "get-saved-snippets",
      "summary": "",
      "user": "user654",
      "ideal": "Retrieve all saved snippets for the user."
    },
    {
      "path": "/saved_snippets",
      "method": "POST",
      "operationId": "create-saved-snippet",
      "summary": "",
      "user": "user987",
      "ideal": "Create a new saved snippet with the provided text."
    },
    {
      "path": "/saved_snippets/3",
      "method": "PATCH",
      "operationId": "edit-saved-snippet",
      "summary": "",
      "user": "user159",
      "ideal": "Edit the saved snippet with ID 3 to update its content."
    },
    {
      "path": "/saved_snippets/4",
      "method": "DELETE",
      "operationId": "delete-saved-snippet",
      "summary": "",
      "user": "user753",
      "ideal": "Delete the saved snippet with ID 4."
    },
    {
      "path": "/invites",
      "method": "GET",
      "operationId": "get-invites",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all current invites."
    },
    {
      "path": "/invites",
      "method": "POST",
      "operationId": "send-invites",
      "summary": "",
      "user": "user456",
      "ideal": "Send an invite to a specified email address."
    },
    {
      "path": "/invites/multiuse",
      "method": "POST",
      "operationId": "create-invite-link",
      "summary": "",
      "user": "user789",
      "ideal": "Create a multi-use invite link for new users."
    },
    {
      "path": "/invites/{invite_id}",
      "method": "DELETE",
      "operationId": "revoke-email-invite",
      "summary": "",
      "user": "user101",
      "ideal": "Revoke a specific email invite using its ID."
    },
    {
      "path": "/invites/multiuse/{invite_id}",
      "method": "DELETE",
      "operationId": "revoke-invite-link",
      "summary": "",
      "user": "user202",
      "ideal": "Revoke a specific multi-use invite link."
    },
    {
      "path": "/invites/{invite_id}/resend",
      "method": "POST",
      "operationId": "resend-email-invite",
      "summary": "",
      "user": "user303",
      "ideal": "Resend an email invite to the user associated with the invite ID."
    },
    {
      "path": "/mark_all_as_read",
      "method": "POST",
      "operationId": "mark-all-as-read",
      "summary": "",
      "user": "User123",
      "ideal": "Marks all messages as read in the user's account."
    },
    {
      "path": "/mark_stream_as_read",
      "method": "POST",
      "operationId": "mark-stream-as-read",
      "summary": "",
      "user": "User456",
      "ideal": "Marks all messages in a specific stream as read."
    },
    {
      "path": "/mark_topic_as_read",
      "method": "POST",
      "operationId": "mark-topic-as-read",
      "summary": "",
      "user": "User789",
      "ideal": "Marks all messages in a specific topic as read."
    },
    {
      "path": "/messages",
      "method": "GET",
      "operationId": "get-messages",
      "summary": "",
      "user": "User101",
      "ideal": "Retrieves a list of messages from the user's streams."
    },
    {
      "path": "/messages",
      "method": "POST",
      "operationId": "send-message",
      "summary": "",
      "user": "User202",
      "ideal": "Sends a new message to a specified stream or topic."
    },
    {
      "path": "/messages/{message_id}/history",
      "method": "GET",
      "operationId": "get-message-history",
      "summary": "",
      "user": "User303",
      "ideal": "Fetches the edit history of a specific message."
    },
    {
      "path": "/messages/flags",
      "method": "POST",
      "operationId": "update-message-flags",
      "summary": "",
      "user": "User404",
      "ideal": "Updates flags for specified messages."
    },
    {
      "path": "/messages/flags/narrow",
      "method": "POST",
      "operationId": "update-message-flags-for-narrow",
      "summary": "",
      "user": "User505",
      "ideal": "Updates flags for messages in a narrowed view."
    },
    {
      "path": "/messages/render",
      "method": "POST",
      "operationId": "render-message",
      "summary": "",
      "user": "User606",
      "ideal": "Renders a message's content for display."
    },
    {
      "path": "/messages/{message_id}/reactions",
      "method": "POST",
      "operationId": "add-reaction",
      "summary": "",
      "user": "User707",
      "ideal": "Adds a reaction to a specific message."
    },
    {
      "path": "/messages/{message_id}/reactions",
      "method": "DELETE",
      "operationId": "remove-reaction",
      "summary": "",
      "user": "User808",
      "ideal": "Removes a reaction from a specific message."
    },
    {
      "path": "/messages/{message_id}/read_receipts",
      "method": "GET",
      "operationId": "get-read-receipts",
      "summary": "",
      "user": "User909",
      "ideal": "Retrieves read receipts for a specific message."
    },
    {
      "path": "/messages/matches_narrow",
      "method": "GET",
      "operationId": "check-messages-match-narrow",
      "summary": "",
      "user": "User010",
      "ideal": "Checks if messages match the specified narrow criteria."
    },
    {
      "path": "/messages/{message_id}",
      "method": "GET",
      "operationId": "get-message",
      "summary": "",
      "user": "User111",
      "ideal": "Retrieves a specific message by its ID."
    },
    {
      "path": "/messages/{message_id}",
      "method": "PATCH",
      "operationId": "update-message",
      "summary": "",
      "user": "User222",
      "ideal": "Updates the content of a specific message."
    },
    {
      "path": "/messages/{message_id}",
      "method": "DELETE",
      "operationId": "delete-message",
      "summary": "",
      "user": "User333",
      "ideal": "Deletes a specific message by its ID."
    },
    {
      "path": "/messages/{message_id}/report",
      "method": "POST",
      "operationId": "report-message",
      "summary": "",
      "user": "User444",
      "ideal": "Reports a specific message for inappropriate content."
    },
    {
      "path": "/user_uploads",
      "method": "POST",
      "operationId": "upload-file",
      "summary": "",
      "user": "User555",
      "ideal": "Uploads a file to the user's account."
    },
    {
      "path": "/user_uploads/{realm_id_str}/{filename}",
      "method": "GET",
      "operationId": "get-file-temporary-url",
      "summary": "",
      "user": "User666",
      "ideal": "Retrieves a temporary URL for a specific uploaded file."
    },
    {
      "path": "/mobile_push/test_notification",
      "method": "POST",
      "operationId": "test-notify",
      "summary": "",
      "user": "user123",
      "ideal": "Send a test notification to verify mobile push setup."
    },
    {
      "path": "/mobile_push/e2ee/test_notification",
      "method": "POST",
      "operationId": "e2ee-test-notify",
      "summary": "",
      "user": "user456",
      "ideal": "Send a test end-to-end encrypted notification to ensure security."
    },
    {
      "path": "/mobile_push/register",
      "method": "POST",
      "operationId": "register-push-device",
      "summary": "",
      "user": "user789",
      "ideal": "Register a mobile device for push notifications."
    },
    {
      "path": "/remotes/push/e2ee/register",
      "method": "POST",
      "operationId": "register-remote-push-device",
      "summary": "",
      "user": "user101112",
      "ideal": "Register a remote device for end-to-end encrypted push notifications."
    },
    {
      "path": "/navigation_views",
      "method": "GET",
      "operationId": "get-navigation-views",
      "summary": "",
      "user": "As a user, I want to retrieve the list of all navigation views available in the Zulip application so that I can understand the different navigation options.",
      "ideal": "The response should return a JSON array of navigation views, each containing an id, name, and description."
    },
    {
      "path": "/navigation_views",
      "method": "POST",
      "operationId": "add-navigation-view",
      "summary": "",
      "user": "As an admin, I want to add a new navigation view to the Zulip application so that users can access new features easily.",
      "ideal": "The response should confirm the successful creation of the navigation view and return the created view's details."
    },
    {
      "path": "/navigation_views/{fragment}",
      "method": "PATCH",
      "operationId": "edit-navigation-view",
      "summary": "",
      "user": "As a user, I want to edit an existing navigation view to update its name or description to better reflect its purpose.",
      "ideal": "The response should indicate success and return the updated navigation view details."
    },
    {
      "path": "/navigation_views/{fragment}",
      "method": "DELETE",
      "operationId": "remove-navigation-view",
      "summary": "",
      "user": "As a user, I want to remove a navigation view that is no longer relevant to keep the interface clean and user-friendly.",
      "ideal": "The response should confirm the successful deletion of the navigation view."
    },
    {
      "path": "/events",
      "method": "GET",
      "operationId": "get-events",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of events from the Zulip server."
    },
    {
      "path": "/events",
      "method": "DELETE",
      "operationId": "delete-queue",
      "summary": "",
      "user": "user456",
      "ideal": "Delete the event queue for the user."
    },
    {
      "path": "/register",
      "method": "POST",
      "operationId": "register-queue",
      "summary": "",
      "user": "user789",
      "ideal": "Register a new user for the Zulip service."
    },
    {
      "path": "/real-time",
      "method": "POST",
      "operationId": "real-time",
      "summary": "",
      "user": "user101",
      "ideal": "Establish a real-time connection to receive events."
    },
    {
      "path": "/rest-error-handling",
      "method": "POST",
      "operationId": "rest-error-handling",
      "summary": "",
      "user": "user202",
      "ideal": "Handle REST API errors gracefully."
    },
    {
      "path": "/reminders",
      "method": "GET",
      "operationId": "get-reminders",
      "summary": "",
      "user": "User wants to retrieve a list of all reminders they have set in Zulip to manage their tasks effectively.",
      "ideal": "A successful response containing an array of reminders with details such as reminder ID, content, and due date."
    },
    {
      "path": "/reminders",
      "method": "POST",
      "operationId": "create-message-reminder",
      "summary": "",
      "user": "User needs to create a reminder for an important meeting scheduled for next week, ensuring they don't forget it.",
      "ideal": "A successful response confirming the creation of the reminder, including the reminder ID and the details of the reminder."
    },
    {
      "path": "/reminders/{reminder_id}",
      "method": "DELETE",
      "operationId": "delete-reminder",
      "summary": "",
      "user": "User wants to delete a reminder that is no longer needed, as the meeting has been canceled.",
      "ideal": "A successful response indicating that the reminder has been deleted, with a confirmation message."
    },
    {
      "path": "/scheduled_messages",
      "method": "GET",
      "operationId": "get-scheduled-messages",
      "summary": "",
      "user": "Alice wants to retrieve all scheduled messages to check their status before the upcoming meeting.",
      "ideal": "Retrieve a list of all scheduled messages with their details."
    },
    {
      "path": "/scheduled_messages",
      "method": "POST",
      "operationId": "create-scheduled-message",
      "summary": "",
      "user": "Bob needs to schedule a message to remind the team about the project deadline tomorrow.",
      "ideal": "Create a new scheduled message for the team reminder."
    },
    {
      "path": "/scheduled_messages/{scheduled_message_id}",
      "method": "PATCH",
      "operationId": "update-scheduled-message",
      "summary": "",
      "user": "Charlie realized he made a mistake in the scheduled message and wants to update the content.",
      "ideal": "Update the content of the existing scheduled message with the correct information."
    },
    {
      "path": "/scheduled_messages/{scheduled_message_id}",
      "method": "DELETE",
      "operationId": "delete-scheduled-message",
      "summary": "",
      "user": "Dana wants to delete a scheduled message that is no longer relevant to the team.",
      "ideal": "Remove the specified scheduled message from the system."
    },
    {
      "path": "/realm/emoji/custom_emoji",
      "method": "POST",
      "operationId": "upload-custom-emoji",
      "summary": "",
      "user": "User123 uploaded a new custom emoji named 'custom_emoji' for the team.",
      "ideal": "Successfully uploaded the custom emoji."
    },
    {
      "path": "/realm/emoji/custom_emoji",
      "method": "DELETE",
      "operationId": "deactivate-custom-emoji",
      "summary": "",
      "user": "User123 deactivated the custom emoji 'custom_emoji' as it was no longer needed.",
      "ideal": "Successfully deactivated the custom emoji."
    },
    {
      "path": "/realm/emoji",
      "method": "GET",
      "operationId": "get-custom-emoji",
      "summary": "",
      "user": "User123 requested the list of all custom emojis in the realm.",
      "ideal": "Returned a list of custom emojis."
    },
    {
      "path": "/realm/presence",
      "method": "GET",
      "operationId": "get-presence",
      "summary": "",
      "user": "User123 checked the presence status of all users in the realm.",
      "ideal": "Returned the presence status of users."
    },
    {
      "path": "/realm/profile_fields",
      "method": "GET",
      "operationId": "get-custom-profile-fields",
      "summary": "",
      "user": "User123 retrieved the custom profile fields for user profiles.",
      "ideal": "Returned a list of custom profile fields."
    },
    {
      "path": "/realm/profile_fields",
      "method": "PATCH",
      "operationId": "reorder-custom-profile-fields",
      "summary": "",
      "user": "User123 reordered the custom profile fields to prioritize important information.",
      "ideal": "Successfully reordered the custom profile fields."
    },
    {
      "path": "/realm/profile_fields",
      "method": "POST",
      "operationId": "create-custom-profile-field",
      "summary": "",
      "user": "User123 created a new custom profile field for 'Favorite Color'.",
      "ideal": "Successfully created the custom profile field."
    },
    {
      "path": "/realm/user_settings_defaults",
      "method": "PATCH",
      "operationId": "update-realm-user-settings-defaults",
      "summary": "",
      "user": "User123 updated the default user settings for the realm.",
      "ideal": "Successfully updated the user settings defaults."
    },
    {
      "path": "/realm/linkifiers",
      "method": "GET",
      "operationId": "get-linkifiers",
      "summary": "",
      "user": "User123 fetched the current linkifiers set up in the realm.",
      "ideal": "Returned a list of linkifiers."
    },
    {
      "path": "/realm/linkifiers",
      "method": "PATCH",
      "operationId": "reorder-linkifiers",
      "summary": "",
      "user": "User123 reordered the linkifiers to improve usability.",
      "ideal": "Successfully reordered the linkifiers."
    },
    {
      "path": "/realm/filters",
      "method": "POST",
      "operationId": "add-linkifier",
      "summary": "",
      "user": "User123 added a new linkifier for URLs containing 'example.com'.",
      "ideal": "Successfully added the linkifier."
    },
    {
      "path": "/realm/filters/1",
      "method": "DELETE",
      "operationId": "remove-linkifier",
      "summary": "",
      "user": "User123 removed the linkifier with ID 1 as it was outdated.",
      "ideal": "Successfully removed the linkifier."
    },
    {
      "path": "/realm/filters/1",
      "method": "PATCH",
      "operationId": "update-linkifier",
      "summary": "",
      "user": "User123 updated the linkifier with ID 1 to change its pattern.",
      "ideal": "Successfully updated the linkifier."
    },
    {
      "path": "/realm/playgrounds",
      "method": "POST",
      "operationId": "add-code-playground",
      "summary": "",
      "user": "User123 created a new code playground for testing JavaScript snippets.",
      "ideal": "Successfully added the code playground."
    },
    {
      "path": "/realm/playgrounds/1",
      "method": "DELETE",
      "operationId": "remove-code-playground",
      "summary": "",
      "user": "User123 removed the code playground with ID 1 as it was no longer needed.",
      "ideal": "Successfully removed the code playground."
    },
    {
      "path": "/export/realm",
      "method": "GET",
      "operationId": "get-realm-exports",
      "summary": "",
      "user": "User123 requested the current export status of the realm.",
      "ideal": "Returned the export status."
    },
    {
      "path": "/export/realm",
      "method": "POST",
      "operationId": "export-realm",
      "summary": "",
      "user": "User123 initiated a realm export for backup purposes.",
      "ideal": "Successfully initiated the realm export."
    },
    {
      "path": "/export/realm/consents",
      "method": "GET",
      "operationId": "get-realm-export-consents",
      "summary": "",
      "user": "User123 checked the consents for realm exports.",
      "ideal": "Returned the export consents."
    },
    {
      "path": "/realm/test_welcome_bot_custom_message",
      "method": "POST",
      "operationId": "test-welcome-bot-custom-message",
      "summary": "",
      "user": "User123 tested the welcome bot's custom message to ensure it displays correctly.",
      "ideal": "Successfully tested the welcome bot custom message."
    },
    {
      "path": "/server_settings",
      "method": "GET",
      "operationId": "get-server-settings",
      "summary": "",
      "user": "User123 retrieved the current server settings for review.",
      "ideal": "Returned the server settings."
    },
    {
      "path": "/users",
      "method": "GET",
      "operationId": "get-users",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all users in the organization."
    },
    {
      "path": "/users",
      "method": "POST",
      "operationId": "create-user",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new user with the provided details."
    },
    {
      "path": "/users/{user_id}/status",
      "method": "POST",
      "operationId": "update-status-for-user",
      "summary": "",
      "user": "admin",
      "ideal": "Update the status of a specific user."
    },
    {
      "path": "/users/me",
      "method": "GET",
      "operationId": "get-own-user",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the details of the currently authenticated user."
    },
    {
      "path": "/users/me/alert_words",
      "method": "POST",
      "operationId": "add-alert-words",
      "summary": "",
      "user": "user123",
      "ideal": "Add new alert words for the current user."
    },
    {
      "path": "/users/me/presence",
      "method": "POST",
      "operationId": "update-presence",
      "summary": "",
      "user": "user123",
      "ideal": "Update the presence status of the current user."
    },
    {
      "path": "/users/{user_id}",
      "method": "PATCH",
      "operationId": "update-user",
      "summary": "",
      "user": "admin",
      "ideal": "Update the details of a specific user."
    },
    {
      "path": "/user_groups",
      "method": "GET",
      "operationId": "get-user-groups",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all user groups in the organization."
    },
    {
      "path": "/user_groups/{user_group_id}/members",
      "method": "GET",
      "operationId": "get-user-group-members",
      "summary": "",
      "user": "admin",
      "ideal": "Get the members of a specific user group."
    },
    {
      "path": "/user_groups/{user_group_id}/members",
      "method": "POST",
      "operationId": "update-user-group-members",
      "summary": "",
      "user": "admin",
      "ideal": "Update the members of a specific user group."
    },
    {
      "path": "/zulip-outgoing-webhook",
      "method": "POST",
      "operationId": "zulip-outgoing-webhooks",
      "summary": "",
      "user": "user@example.com",
      "ideal": "This endpoint allows you to send outgoing webhooks from Zulip to your specified URL. You need to provide the necessary payload in the request body, including the content of the message and the stream or topic it belongs to."
    }
  ]
}