{
  "gold": [
    {
      "path": "/orgs/my-org/actions/cache/usage",
      "method": "GET",
      "operationId": "actions/get-actions-cache-usage-for-org",
      "summary": "",
      "user": "User requests the cache usage statistics for their organization to monitor resource consumption.",
      "ideal": "Returns the cache usage details including total size and number of caches."
    },
    {
      "path": "/repos/my-user/my-repo/actions/artifacts",
      "method": "GET",
      "operationId": "actions/list-artifacts-for-repo",
      "summary": "",
      "user": "User wants to retrieve a list of artifacts generated by the workflows in their repository.",
      "ideal": "Returns a list of artifacts with details such as name, size, and creation date."
    },
    {
      "path": "/orgs/my-org/actions/permissions",
      "method": "GET",
      "operationId": "actions/get-github-actions-permissions-organization",
      "summary": "",
      "user": "User checks the GitHub Actions permissions set for their organization to ensure compliance.",
      "ideal": "Returns the current permissions settings for GitHub Actions in the organization."
    },
    {
      "path": "/repos/my-user/my-repo/actions/runs",
      "method": "GET",
      "operationId": "actions/list-workflow-runs-for-repo",
      "summary": "",
      "user": "User wants to see the history of workflow runs for their repository to track CI/CD progress.",
      "ideal": "Returns a list of workflow runs with their statuses and timestamps."
    },
    {
      "path": "/orgs/my-org/actions/secrets",
      "method": "GET",
      "operationId": "actions/list-org-secrets",
      "summary": "",
      "user": "User retrieves the list of organization secrets to manage sensitive information used in workflows.",
      "ideal": "Returns a list of secrets with their names and creation dates."
    },
    {
      "path": "/repos/my-user/my-repo/actions/secrets/my-secret",
      "method": "GET",
      "operationId": "actions/get-repo-secret",
      "summary": "",
      "user": "User wants to access a specific secret in their repository to verify its value.",
      "ideal": "Returns the details of the specified secret, including its name and value."
    },
    {
      "path": "/orgs/my-org/actions/runner-groups",
      "method": "GET",
      "operationId": "actions/list-self-hosted-runner-groups-for-org",
      "summary": "",
      "user": "User checks the self-hosted runner groups in their organization to manage CI/CD resources.",
      "ideal": "Returns a list of runner groups with their configurations and associated runners."
    },
    {
      "path": "/repos/my-user/my-repo/actions/variables",
      "method": "GET",
      "operationId": "actions/list-repo-variables",
      "summary": "",
      "user": "User wants to see the repository variables to ensure they are set correctly for workflows.",
      "ideal": "Returns a list of variables with their names and values."
    },
    {
      "path": "/repos/my-user/my-repo/actions/workflows",
      "method": "GET",
      "operationId": "actions/list-repo-workflows",
      "summary": "",
      "user": "User retrieves the list of workflows defined in their repository to check for updates.",
      "ideal": "Returns a list of workflows with their IDs, names, and statuses."
    },
    {
      "path": "/repos/my-user/my-repo/actions/runs/12345/artifacts",
      "method": "GET",
      "operationId": "actions/list-workflow-run-artifacts",
      "summary": "",
      "user": "User wants to download artifacts from a specific workflow run to analyze the results.",
      "ideal": "Returns a list of artifacts generated by the specified workflow run."
    },
    {
      "path": "/orgs/my-org/actions/permissions/self-hosted-runners",
      "method": "GET",
      "operationId": "actions/get-self-hosted-runners-permissions-organization",
      "summary": "",
      "user": "User checks the permissions for self-hosted runners in their organization to ensure proper access.",
      "ideal": "Returns the current permissions settings for self-hosted runners in the organization."
    },
    {
      "path": "/events",
      "method": "GET",
      "operationId": "activity/list-public-events",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of public events from GitHub."
    },
    {
      "path": "/repos/octocat/Hello-World/events",
      "method": "GET",
      "operationId": "activity/list-repo-events",
      "summary": "",
      "user": "user456",
      "ideal": "Fetch events for the specified repository."
    },
    {
      "path": "/user/starred",
      "method": "GET",
      "operationId": "activity/list-repos-starred-by-authenticated-user",
      "summary": "",
      "user": "user789",
      "ideal": "Get a list of repositories starred by the authenticated user."
    },
    {
      "path": "/users/octocat/starred",
      "method": "GET",
      "operationId": "activity/list-repos-starred-by-user",
      "summary": "",
      "user": "user101",
      "ideal": "List all repositories starred by the user 'octocat'."
    },
    {
      "path": "/notifications",
      "method": "GET",
      "operationId": "activity/list-notifications-for-authenticated-user",
      "summary": "",
      "user": "user202",
      "ideal": "Retrieve notifications for the authenticated user."
    },
    {
      "path": "/repos/octocat/Hello-World/subscription",
      "method": "GET",
      "operationId": "activity/get-repo-subscription",
      "summary": "",
      "user": "user303",
      "ideal": "Get the subscription status for the repository 'Hello-World'."
    },
    {
      "path": "/users/user123/events/public",
      "method": "GET",
      "operationId": "activity/list-public-events-for-user",
      "summary": "",
      "user": "user404",
      "ideal": "List all public events for the user 'user123'."
    },
    {
      "path": "/notifications/threads/12345",
      "method": "GET",
      "operationId": "activity/get-thread",
      "summary": "",
      "user": "user505",
      "ideal": "Retrieve a specific notification thread."
    },
    {
      "path": "/user/subscriptions",
      "method": "GET",
      "operationId": "activity/list-watched-repos-for-authenticated-user",
      "summary": "",
      "user": "user606",
      "ideal": "Get a list of repositories watched by the authenticated user."
    },
    {
      "path": "/repos/octocat/Hello-World/stargazers",
      "method": "GET",
      "operationId": "activity/list-stargazers-for-repo",
      "summary": "",
      "user": "user707",
      "ideal": "Fetch a list of users who have starred the repository 'Hello-World'."
    },
    {
      "path": "/app",
      "method": "GET",
      "operationId": "apps/get-authenticated",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the authenticated app's details."
    },
    {
      "path": "/app-manifests/abc123/conversions",
      "method": "POST",
      "operationId": "apps/create-from-manifest",
      "summary": "",
      "user": "user456",
      "ideal": "Convert the app manifest with code 'abc123' into an app installation."
    },
    {
      "path": "/app/hook/config",
      "method": "GET",
      "operationId": "apps/get-webhook-config-for-app",
      "summary": "",
      "user": "user789",
      "ideal": "Fetch the current webhook configuration for the app."
    },
    {
      "path": "/app/hook/config",
      "method": "PATCH",
      "operationId": "apps/update-webhook-config-for-app",
      "summary": "",
      "user": "user101",
      "ideal": "Update the webhook configuration for the app."
    },
    {
      "path": "/app/hook/deliveries",
      "method": "GET",
      "operationId": "apps/list-webhook-deliveries",
      "summary": "",
      "user": "user112",
      "ideal": "List all webhook deliveries for the app."
    },
    {
      "path": "/app/hook/deliveries/12345",
      "method": "GET",
      "operationId": "apps/get-webhook-delivery",
      "summary": "",
      "user": "user131",
      "ideal": "Get details of a specific webhook delivery with ID '12345'."
    },
    {
      "path": "/app/hook/deliveries/12345/attempts",
      "method": "POST",
      "operationId": "apps/redeliver-webhook-delivery",
      "summary": "",
      "user": "user415",
      "ideal": "Redeliver the webhook delivery with ID '12345'."
    },
    {
      "path": "/app/installation-requests",
      "method": "GET",
      "operationId": "apps/list-installation-requests-for-authenticated-app",
      "summary": "",
      "user": "user161",
      "ideal": "List all installation requests for the authenticated app."
    },
    {
      "path": "/app/installations",
      "method": "GET",
      "operationId": "apps/list-installations",
      "summary": "",
      "user": "user718",
      "ideal": "Retrieve a list of installations for the app."
    },
    {
      "path": "/app/installations/123",
      "method": "GET",
      "operationId": "apps/get-installation",
      "summary": "",
      "user": "user192",
      "ideal": "Get details of the installation with ID '123'."
    },
    {
      "path": "/app/installations/123",
      "method": "DELETE",
      "operationId": "apps/delete-installation",
      "summary": "",
      "user": "user202",
      "ideal": "Delete the installation with ID '123'."
    },
    {
      "path": "/app/installations/123/access_tokens",
      "method": "POST",
      "operationId": "apps/create-installation-access-token",
      "summary": "",
      "user": "user212",
      "ideal": "Create an access token for the installation with ID '123'."
    },
    {
      "path": "/app/installations/123/suspended",
      "method": "PUT",
      "operationId": "apps/suspend-installation",
      "summary": "",
      "user": "user222",
      "ideal": "Suspend the installation with ID '123'."
    },
    {
      "path": "/app/installations/123/suspended",
      "method": "DELETE",
      "operationId": "apps/unsuspend-installation",
      "summary": "",
      "user": "user232",
      "ideal": "Unsuspend the installation with ID '123'."
    },
    {
      "path": "/applications/client_id/grant",
      "method": "DELETE",
      "operationId": "apps/delete-authorization",
      "summary": "",
      "user": "user242",
      "ideal": "Delete the authorization for the application with client ID 'client_id'."
    },
    {
      "path": "/applications/client_id/token",
      "method": "POST",
      "operationId": "apps/check-token",
      "summary": "",
      "user": "user252",
      "ideal": "Check the validity of the token for the application with client ID 'client_id'."
    },
    {
      "path": "/applications/client_id/token",
      "method": "PATCH",
      "operationId": "apps/reset-token",
      "summary": "",
      "user": "user262",
      "ideal": "Reset the token for the application with client ID 'client_id'."
    },
    {
      "path": "/applications/client_id/token",
      "method": "DELETE",
      "operationId": "apps/delete-token",
      "summary": "",
      "user": "user272",
      "ideal": "Delete the token for the application with client ID 'client_id'."
    },
    {
      "path": "/applications/client_id/token/scoped",
      "method": "POST",
      "operationId": "apps/scope-token",
      "summary": "",
      "user": "user282",
      "ideal": "Scope the token for the application with client ID 'client_id'."
    },
    {
      "path": "/apps/app_slug",
      "method": "GET",
      "operationId": "apps/get-by-slug",
      "summary": "",
      "user": "user292",
      "ideal": "Retrieve app details by slug 'app_slug'."
    },
    {
      "path": "/installation/repositories",
      "method": "GET",
      "operationId": "apps/list-repos-accessible-to-installation",
      "summary": "",
      "user": "user302",
      "ideal": "List repositories accessible to the installation."
    },
    {
      "path": "/installation/token",
      "method": "DELETE",
      "operationId": "apps/revoke-installation-access-token",
      "summary": "",
      "user": "user312",
      "ideal": "Revoke the access token for the installation."
    },
    {
      "path": "/marketplace_listing/accounts/account_id",
      "method": "GET",
      "operationId": "apps/get-subscription-plan-for-account",
      "summary": "",
      "user": "user322",
      "ideal": "Get the subscription plan for account ID 'account_id'."
    },
    {
      "path": "/marketplace_listing/plans",
      "method": "GET",
      "operationId": "apps/list-plans",
      "summary": "",
      "user": "user332",
      "ideal": "List all available subscription plans."
    },
    {
      "path": "/marketplace_listing/plans/plan_id/accounts",
      "method": "GET",
      "operationId": "apps/list-accounts-for-plan",
      "summary": "",
      "user": "user342",
      "ideal": "List accounts subscribed to the plan with ID 'plan_id'."
    },
    {
      "path": "/marketplace_listing/stubbed/accounts/account_id",
      "method": "GET",
      "operationId": "apps/get-subscription-plan-for-account-stubbed",
      "summary": "",
      "user": "user352",
      "ideal": "Get the stubbed subscription plan for account ID 'account_id'."
    },
    {
      "path": "/marketplace_listing/stubbed/plans",
      "method": "GET",
      "operationId": "apps/list-plans-stubbed",
      "summary": "",
      "user": "user362",
      "ideal": "List all stubbed subscription plans."
    },
    {
      "path": "/marketplace_listing/stubbed/plans/plan_id/accounts",
      "method": "GET",
      "operationId": "apps/list-accounts-for-plan-stubbed",
      "summary": "",
      "user": "user372",
      "ideal": "List accounts for the stubbed plan with ID 'plan_id'."
    },
    {
      "path": "/orgs/org/installation",
      "method": "GET",
      "operationId": "apps/get-org-installation",
      "summary": "",
      "user": "user382",
      "ideal": "Get the installation details for organization 'org'."
    },
    {
      "path": "/repos/owner/repo/installation",
      "method": "GET",
      "operationId": "apps/get-repo-installation",
      "summary": "",
      "user": "user392",
      "ideal": "Get the installation details for the repository 'repo' owned by 'owner'."
    },
    {
      "path": "/user/installations",
      "method": "GET",
      "operationId": "apps/list-installations-for-authenticated-user",
      "summary": "",
      "user": "user402",
      "ideal": "List all installations for the authenticated user."
    },
    {
      "path": "/user/installations/123/repositories",
      "method": "GET",
      "operationId": "apps/list-installation-repos-for-authenticated-user",
      "summary": "",
      "user": "user412",
      "ideal": "List repositories for the installation with ID '123' for the authenticated user."
    },
    {
      "path": "/user/installations/123/repositories/repo_id",
      "method": "PUT",
      "operationId": "apps/add-repo-to-installation-for-authenticated-user",
      "summary": "",
      "user": "user422",
      "ideal": "Add repository with ID 'repo_id' to the installation with ID '123'."
    },
    {
      "path": "/user/installations/123/repositories/repo_id",
      "method": "DELETE",
      "operationId": "apps/remove-repo-from-installation-for-authenticated-user",
      "summary": "",
      "user": "user432",
      "ideal": "Remove repository with ID 'repo_id' from the installation with ID '123'."
    },
    {
      "path": "/user/marketplace_purchases",
      "method": "GET",
      "operationId": "apps/list-subscriptions-for-authenticated-user",
      "summary": "",
      "user": "user442",
      "ideal": "List all subscriptions for the authenticated user."
    },
    {
      "path": "/user/marketplace_purchases/stubbed",
      "method": "GET",
      "operationId": "apps/list-subscriptions-for-authenticated-user-stubbed",
      "summary": "",
      "user": "user452",
      "ideal": "List stubbed subscriptions for the authenticated user."
    },
    {
      "path": "/users/username/installation",
      "method": "GET",
      "operationId": "apps/get-user-installation",
      "summary": "",
      "user": "user462",
      "ideal": "Get the installation details for user 'username'."
    },
    {
      "path": "/organizations/my-org/settings/billing/premium_request/usage",
      "method": "GET",
      "operationId": "billing/get-github-billing-premium-request-usage-report-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the premium request usage report for the organization 'my-org'."
    },
    {
      "path": "/organizations/my-org/settings/billing/usage",
      "method": "GET",
      "operationId": "billing/get-github-billing-usage-report-org",
      "summary": "",
      "user": "user123",
      "ideal": "Fetch the billing usage report for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/settings/billing/actions",
      "method": "GET",
      "operationId": "billing/get-github-actions-billing-org",
      "summary": "",
      "user": "user123",
      "ideal": "Get the billing information for GitHub Actions used by the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/settings/billing/packages",
      "method": "GET",
      "operationId": "billing/get-github-packages-billing-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the billing details for packages used by the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/settings/billing/shared-storage",
      "method": "GET",
      "operationId": "billing/get-shared-storage-billing-org",
      "summary": "",
      "user": "user123",
      "ideal": "Access the shared storage billing information for the organization 'my-org'."
    },
    {
      "path": "/users/johndoe/settings/billing/actions",
      "method": "GET",
      "operationId": "billing/get-github-actions-billing-user",
      "summary": "",
      "user": "johndoe",
      "ideal": "Get the billing details for GitHub Actions used by the user 'johndoe'."
    },
    {
      "path": "/users/johndoe/settings/billing/packages",
      "method": "GET",
      "operationId": "billing/get-github-packages-billing-user",
      "summary": "",
      "user": "johndoe",
      "ideal": "Retrieve the billing information for packages used by the user 'johndoe'."
    },
    {
      "path": "/users/johndoe/settings/billing/premium_request/usage",
      "method": "GET",
      "operationId": "billing/get-github-billing-premium-request-usage-report-user",
      "summary": "",
      "user": "johndoe",
      "ideal": "Fetch the premium request usage report for the user 'johndoe'."
    },
    {
      "path": "/users/johndoe/settings/billing/shared-storage",
      "method": "GET",
      "operationId": "billing/get-shared-storage-billing-user",
      "summary": "",
      "user": "johndoe",
      "ideal": "Access the shared storage billing information for the user 'johndoe'."
    },
    {
      "path": "/users/johndoe/settings/billing/usage",
      "method": "GET",
      "operationId": "billing/get-github-billing-usage-report-user",
      "summary": "",
      "user": "johndoe",
      "ideal": "Retrieve the billing usage report for the user 'johndoe'."
    },
    {
      "path": "/orgs/my-org/campaigns",
      "method": "GET",
      "operationId": "campaigns/list-org-campaigns",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all campaigns for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/campaigns",
      "method": "POST",
      "operationId": "campaigns/create-campaign",
      "summary": "",
      "user": "user456",
      "ideal": "Create a new campaign for the organization 'my-org' with the specified details."
    },
    {
      "path": "/orgs/my-org/campaigns/1",
      "method": "GET",
      "operationId": "campaigns/get-campaign-summary",
      "summary": "",
      "user": "user789",
      "ideal": "Get the summary of the campaign with number 1 for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/campaigns/1",
      "method": "PATCH",
      "operationId": "campaigns/update-campaign",
      "summary": "",
      "user": "user101",
      "ideal": "Update the details of the campaign with number 1 for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/campaigns/1",
      "method": "DELETE",
      "operationId": "campaigns/delete-campaign",
      "summary": "",
      "user": "user202",
      "ideal": "Delete the campaign with number 1 for the organization 'my-org'."
    },
    {
      "path": "/repos/octocat/Hello-World/check-runs",
      "method": "POST",
      "operationId": "checks/create",
      "summary": "",
      "user": "User wants to create a new check run for the repository 'Hello-World' owned by 'octocat'.",
      "ideal": "The API should return a success response with the details of the created check run."
    },
    {
      "path": "/repos/octocat/Hello-World/check-runs/123456",
      "method": "GET",
      "operationId": "checks/get",
      "summary": "",
      "user": "User wants to retrieve details of a specific check run with ID '123456' for the repository 'Hello-World'.",
      "ideal": "The API should return the details of the check run including its status and conclusion."
    },
    {
      "path": "/repos/octocat/Hello-World/check-runs/123456",
      "method": "PATCH",
      "operationId": "checks/update",
      "summary": "",
      "user": "User wants to update the check run with ID '123456' to change its status to 'completed'.",
      "ideal": "The API should return the updated check run details confirming the status change."
    },
    {
      "path": "/repos/octocat/Hello-World/check-runs/123456/annotations",
      "method": "GET",
      "operationId": "checks/list-annotations",
      "summary": "",
      "user": "User wants to list all annotations for the check run with ID '123456'.",
      "ideal": "The API should return a list of annotations associated with the specified check run."
    },
    {
      "path": "/repos/octocat/Hello-World/check-runs/123456/rerequest",
      "method": "POST",
      "operationId": "checks/rerequest-run",
      "summary": "",
      "user": "User wants to rerequest the check run with ID '123456' to run it again.",
      "ideal": "The API should return a success response indicating that the check run has been rerequested."
    },
    {
      "path": "/repos/octocat/Hello-World/check-suites",
      "method": "POST",
      "operationId": "checks/create-suite",
      "summary": "",
      "user": "User wants to create a new check suite for the repository 'Hello-World'.",
      "ideal": "The API should return the details of the newly created check suite."
    },
    {
      "path": "/repos/octocat/Hello-World/check-suites/preferences",
      "method": "PATCH",
      "operationId": "checks/set-suites-preferences",
      "summary": "",
      "user": "User wants to update the preferences for check suites in the repository 'Hello-World'.",
      "ideal": "The API should return the updated preferences confirming the changes."
    },
    {
      "path": "/repos/octocat/Hello-World/check-suites/789012",
      "method": "GET",
      "operationId": "checks/get-suite",
      "summary": "",
      "user": "User wants to retrieve details of the check suite with ID '789012' for the repository 'Hello-World'.",
      "ideal": "The API should return the details of the specified check suite."
    },
    {
      "path": "/repos/octocat/Hello-World/check-suites/789012/check-runs",
      "method": "GET",
      "operationId": "checks/list-for-suite",
      "summary": "",
      "user": "User wants to list all check runs associated with the check suite ID '789012'.",
      "ideal": "The API should return a list of check runs linked to the specified check suite."
    },
    {
      "path": "/repos/octocat/Hello-World/check-suites/789012/rerequest",
      "method": "POST",
      "operationId": "checks/rerequest-suite",
      "summary": "",
      "user": "User wants to rerequest the check suite with ID '789012' to run it again.",
      "ideal": "The API should return a success response indicating that the check suite has been rerequested."
    },
    {
      "path": "/repos/octocat/Hello-World/commits/main/check-runs",
      "method": "GET",
      "operationId": "checks/list-for-ref",
      "summary": "",
      "user": "User wants to list all check runs for the commit referenced by 'main' in the repository 'Hello-World'.",
      "ideal": "The API should return a list of check runs associated with the specified commit reference."
    },
    {
      "path": "/repos/octocat/Hello-World/commits/main/check-suites",
      "method": "GET",
      "operationId": "checks/list-suites-for-ref",
      "summary": "",
      "user": "User wants to list all check suites for the commit referenced by 'main' in the repository 'Hello-World'.",
      "ideal": "The API should return a list of check suites linked to the specified commit reference."
    },
    {
      "path": "/assignments/12345",
      "method": "GET",
      "operationId": "classroom/get-an-assignment",
      "summary": "",
      "user": "teacher123",
      "ideal": "Retrieve the details of the assignment with ID 12345."
    },
    {
      "path": "/assignments/12345/accepted_assignments",
      "method": "GET",
      "operationId": "classroom/list-accepted-assignments-for-an-assignment",
      "summary": "",
      "user": "teacher123",
      "ideal": "List all accepted assignments for the assignment with ID 12345."
    },
    {
      "path": "/assignments/12345/grades",
      "method": "GET",
      "operationId": "classroom/get-assignment-grades",
      "summary": "",
      "user": "teacher123",
      "ideal": "Get the grades for the assignment with ID 12345."
    },
    {
      "path": "/classrooms",
      "method": "GET",
      "operationId": "classroom/list-classrooms",
      "summary": "",
      "user": "admin456",
      "ideal": "Retrieve a list of all classrooms."
    },
    {
      "path": "/classrooms/67890",
      "method": "GET",
      "operationId": "classroom/get-a-classroom",
      "summary": "",
      "user": "admin456",
      "ideal": "Get details of the classroom with ID 67890."
    },
    {
      "path": "/classrooms/67890/assignments",
      "method": "GET",
      "operationId": "classroom/list-assignments-for-a-classroom",
      "summary": "",
      "user": "admin456",
      "ideal": "List all assignments for the classroom with ID 67890."
    },
    {
      "path": "/orgs/{org}/code-scanning/alerts",
      "method": "GET",
      "operationId": "code-scanning/list-alerts-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve all code scanning alerts for the specified organization."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts",
      "method": "GET",
      "operationId": "code-scanning/list-alerts-for-repo",
      "summary": "",
      "user": "user456",
      "ideal": "Get a list of code scanning alerts for a specific repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      "method": "GET",
      "operationId": "code-scanning/get-alert",
      "summary": "",
      "user": "user789",
      "ideal": "Fetch details of a specific code scanning alert by its number."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      "method": "PATCH",
      "operationId": "code-scanning/update-alert",
      "summary": "",
      "user": "user101",
      "ideal": "Update the status or details of a specific code scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix",
      "method": "GET",
      "operationId": "code-scanning/get-autofix",
      "summary": "",
      "user": "user202",
      "ideal": "Retrieve autofix suggestions for a specific code scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix",
      "method": "POST",
      "operationId": "code-scanning/create-autofix",
      "summary": "",
      "user": "user303",
      "ideal": "Create an autofix for a specific code scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits",
      "method": "POST",
      "operationId": "code-scanning/commit-autofix",
      "summary": "",
      "user": "user404",
      "ideal": "Commit the changes made by the autofix for a specific alert."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      "method": "GET",
      "operationId": "code-scanning/list-alert-instances",
      "summary": "",
      "user": "user505",
      "ideal": "List all instances related to a specific code scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/analyses",
      "method": "GET",
      "operationId": "code-scanning/list-recent-analyses",
      "summary": "",
      "user": "user606",
      "ideal": "Get a list of recent code scanning analyses for a repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}",
      "method": "GET",
      "operationId": "code-scanning/get-analysis",
      "summary": "",
      "user": "user707",
      "ideal": "Fetch details of a specific code scanning analysis by its ID."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}",
      "method": "DELETE",
      "operationId": "code-scanning/delete-analysis",
      "summary": "",
      "user": "user808",
      "ideal": "Delete a specific code scanning analysis by its ID."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/databases",
      "method": "GET",
      "operationId": "code-scanning/list-codeql-databases",
      "summary": "",
      "user": "user909",
      "ideal": "List all CodeQL databases available for a repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}",
      "method": "GET",
      "operationId": "code-scanning/get-codeql-database",
      "summary": "",
      "user": "user1010",
      "ideal": "Retrieve a specific CodeQL database for a given programming language."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}",
      "method": "DELETE",
      "operationId": "code-scanning/delete-codeql-database",
      "summary": "",
      "user": "user1111",
      "ideal": "Delete a specific CodeQL database for a given programming language."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses",
      "method": "POST",
      "operationId": "code-scanning/create-variant-analysis",
      "summary": "",
      "user": "user1212",
      "ideal": "Create a new variant analysis for the repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}",
      "method": "GET",
      "operationId": "code-scanning/get-variant-analysis",
      "summary": "",
      "user": "user1313",
      "ideal": "Retrieve details of a specific variant analysis by its ID."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}",
      "method": "GET",
      "operationId": "code-scanning/get-variant-analysis-repo-task",
      "summary": "",
      "user": "user1414",
      "ideal": "Get the repository task associated with a specific variant analysis."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/default-setup",
      "method": "GET",
      "operationId": "code-scanning/get-default-setup",
      "summary": "",
      "user": "user1515",
      "ideal": "Retrieve the default setup for code scanning in a repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/default-setup",
      "method": "PATCH",
      "operationId": "code-scanning/update-default-setup",
      "summary": "",
      "user": "user1616",
      "ideal": "Update the default setup for code scanning in a repository."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/sarifs",
      "method": "POST",
      "operationId": "code-scanning/upload-sarif",
      "summary": "",
      "user": "user1717",
      "ideal": "Upload a SARIF file for code scanning results."
    },
    {
      "path": "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}",
      "method": "GET",
      "operationId": "code-scanning/get-sarif",
      "summary": "",
      "user": "user1818",
      "ideal": "Fetch details of a specific SARIF file by its ID."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations",
      "method": "GET",
      "operationId": "code-security/get-configurations-for-enterprise",
      "summary": "",
      "user": "Admin user requesting all code security configurations for the enterprise.",
      "ideal": "Returns a list of all code security configurations associated with the specified enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations",
      "method": "POST",
      "operationId": "code-security/create-configuration-for-enterprise",
      "summary": "",
      "user": "Security officer creating a new code security configuration for the enterprise.",
      "ideal": "Creates a new code security configuration and returns the details of the created configuration."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/defaults",
      "method": "GET",
      "operationId": "code-security/get-default-configurations-for-enterprise",
      "summary": "",
      "user": "Compliance manager checking the default code security configurations for the enterprise.",
      "ideal": "Returns the default code security configurations set for the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345",
      "method": "GET",
      "operationId": "code-security/get-single-configuration-for-enterprise",
      "summary": "",
      "user": "Developer retrieving details of a specific code security configuration.",
      "ideal": "Returns the details of the specified code security configuration."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345",
      "method": "PATCH",
      "operationId": "code-security/update-enterprise-configuration",
      "summary": "",
      "user": "Admin updating the existing code security configuration.",
      "ideal": "Updates the specified code security configuration and returns the updated configuration."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345",
      "method": "DELETE",
      "operationId": "code-security/delete-configuration-for-enterprise",
      "summary": "",
      "user": "Admin deleting an obsolete code security configuration.",
      "ideal": "Deletes the specified code security configuration and confirms deletion."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345/attach",
      "method": "POST",
      "operationId": "code-security/attach-enterprise-configuration",
      "summary": "",
      "user": "Security officer attaching a configuration to a repository.",
      "ideal": "Attaches the specified configuration to the repository and returns the status."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345/defaults",
      "method": "PUT",
      "operationId": "code-security/set-configuration-as-default-for-enterprise",
      "summary": "",
      "user": "Admin setting a configuration as the default for the enterprise.",
      "ideal": "Sets the specified configuration as the default and returns the updated default configuration."
    },
    {
      "path": "/enterprises/my-enterprise/code-security/configurations/12345/repositories",
      "method": "GET",
      "operationId": "code-security/get-repositories-for-enterprise-configuration",
      "summary": "",
      "user": "Developer checking which repositories are using a specific configuration.",
      "ideal": "Returns a list of repositories associated with the specified code security configuration."
    },
    {
      "path": "/orgs/my-org/code-security/configurations",
      "method": "GET",
      "operationId": "code-security/get-configurations-for-org",
      "summary": "",
      "user": "Org admin retrieving all code security configurations for the organization.",
      "ideal": "Returns a list of all code security configurations associated with the specified organization."
    },
    {
      "path": "/orgs/my-org/code-security/configurations",
      "method": "POST",
      "operationId": "code-security/create-configuration",
      "summary": "",
      "user": "Security officer creating a new code security configuration for the organization.",
      "ideal": "Creates a new code security configuration and returns the details of the created configuration."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/defaults",
      "method": "GET",
      "operationId": "code-security/get-default-configurations",
      "summary": "",
      "user": "Compliance manager checking the default code security configurations for the organization.",
      "ideal": "Returns the default code security configurations set for the organization."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/detach",
      "method": "DELETE",
      "operationId": "code-security/detach-configuration",
      "summary": "",
      "user": "Admin detaching a configuration from a repository.",
      "ideal": "Detaches the specified configuration from the repository and confirms detachment."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345",
      "method": "GET",
      "operationId": "code-security/get-configuration",
      "summary": "",
      "user": "Developer retrieving details of a specific code security configuration.",
      "ideal": "Returns the details of the specified code security configuration."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345",
      "method": "PATCH",
      "operationId": "code-security/update-configuration",
      "summary": "",
      "user": "Admin updating the existing code security configuration.",
      "ideal": "Updates the specified code security configuration and returns the updated configuration."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345",
      "method": "DELETE",
      "operationId": "code-security/delete-configuration",
      "summary": "",
      "user": "Admin deleting an obsolete code security configuration.",
      "ideal": "Deletes the specified code security configuration and confirms deletion."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345/attach",
      "method": "POST",
      "operationId": "code-security/attach-configuration",
      "summary": "",
      "user": "Security officer attaching a configuration to a repository.",
      "ideal": "Attaches the specified configuration to the repository and returns the status."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345/defaults",
      "method": "PUT",
      "operationId": "code-security/set-configuration-as-default",
      "summary": "",
      "user": "Admin setting a configuration as the default for the organization.",
      "ideal": "Sets the specified configuration as the default and returns the updated default configuration."
    },
    {
      "path": "/orgs/my-org/code-security/configurations/12345/repositories",
      "method": "GET",
      "operationId": "code-security/get-repositories-for-configuration",
      "summary": "",
      "user": "Developer checking which repositories are using a specific configuration.",
      "ideal": "Returns a list of repositories associated with the specified code security configuration."
    },
    {
      "path": "/repos/my-owner/my-repo/code-security-configuration",
      "method": "GET",
      "operationId": "code-security/get-configuration-for-repository",
      "summary": "",
      "user": "Developer retrieving the code security configuration for a specific repository.",
      "ideal": "Returns the code security configuration associated with the specified repository."
    },
    {
      "path": "/codes_of_conduct",
      "method": "GET",
      "operationId": "codes-of-conduct/get-all-codes-of-conduct",
      "summary": "",
      "user": "john_doe",
      "ideal": "Retrieve a list of all available codes of conduct from the GitHub API."
    },
    {
      "path": "/codes_of_conduct/{key}",
      "method": "GET",
      "operationId": "codes-of-conduct/get-conduct-code",
      "summary": "",
      "user": "jane_smith",
      "ideal": "Fetch the specific code of conduct associated with the provided key."
    },
    {
      "path": "/orgs/my-org/codespaces",
      "method": "GET",
      "operationId": "codespaces/list-in-organization",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all codespaces in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/codespaces/access",
      "method": "PUT",
      "operationId": "codespaces/set-codespaces-access",
      "summary": "",
      "user": "user123",
      "ideal": "Update access settings for codespaces in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/codespaces/secrets",
      "method": "GET",
      "operationId": "codespaces/list-org-secrets",
      "summary": "",
      "user": "user123",
      "ideal": "List all organization secrets for 'my-org'."
    },
    {
      "path": "/repos/my-user/my-repo/codespaces",
      "method": "POST",
      "operationId": "codespaces/create-with-repo-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new codespace for the repository 'my-repo'."
    },
    {
      "path": "/user/codespaces",
      "method": "GET",
      "operationId": "codespaces/list-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Get a list of all codespaces for the authenticated user."
    },
    {
      "path": "/user/codespaces/{codespace_name}",
      "method": "DELETE",
      "operationId": "codespaces/delete-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Delete the codespace named 'my-codespace' for the authenticated user."
    },
    {
      "path": "/user/codespaces/{codespace_name}/start",
      "method": "POST",
      "operationId": "codespaces/start-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Start the codespace named 'my-codespace' for the authenticated user."
    },
    {
      "path": "/orgs/my-org/members/user456/codespaces",
      "method": "GET",
      "operationId": "codespaces/get-codespaces-for-user-in-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve codespaces for the user 'user456' in the organization 'my-org'."
    },
    {
      "path": "/repos/my-user/my-repo/codespaces/secrets",
      "method": "GET",
      "operationId": "codespaces/list-repo-secrets",
      "summary": "",
      "user": "user123",
      "ideal": "List all secrets for the repository 'my-repo'."
    },
    {
      "path": "/user/codespaces/secrets/{secret_name}",
      "method": "GET",
      "operationId": "codespaces/get-secret-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the secret named 'my-secret' for the authenticated user."
    },
    {
      "path": "/orgs/my-org/copilot/billing",
      "method": "GET",
      "operationId": "copilot/get-copilot-organization-details",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve billing details for the organization 'my-org' regarding GitHub Copilot."
    },
    {
      "path": "/orgs/my-org/copilot/billing/seats",
      "method": "GET",
      "operationId": "copilot/list-copilot-seats",
      "summary": "",
      "user": "admin_user",
      "ideal": "List all Copilot seats assigned to the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/copilot/billing/selected_teams",
      "method": "POST",
      "operationId": "copilot/add-copilot-seats-for-teams",
      "summary": "",
      "user": "admin_user",
      "ideal": "Add Copilot seats for specified teams in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/copilot/billing/selected_teams",
      "method": "DELETE",
      "operationId": "copilot/cancel-copilot-seat-assignment-for-teams",
      "summary": "",
      "user": "admin_user",
      "ideal": "Cancel Copilot seat assignments for specified teams in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/copilot/billing/selected_users",
      "method": "POST",
      "operationId": "copilot/add-copilot-seats-for-users",
      "summary": "",
      "user": "admin_user",
      "ideal": "Add Copilot seats for specified users in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/copilot/billing/selected_users",
      "method": "DELETE",
      "operationId": "copilot/cancel-copilot-seat-assignment-for-users",
      "summary": "",
      "user": "admin_user",
      "ideal": "Cancel Copilot seat assignments for specified users in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/copilot/metrics",
      "method": "GET",
      "operationId": "copilot/copilot-metrics-for-organization",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve metrics related to GitHub Copilot usage for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/members/john_doe/copilot",
      "method": "GET",
      "operationId": "copilot/get-copilot-seat-details-for-user",
      "summary": "",
      "user": "admin_user",
      "ideal": "Get Copilot seat details for user 'john_doe' in the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/team/my-team/copilot/metrics",
      "method": "GET",
      "operationId": "copilot/copilot-metrics-for-team",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve metrics related to GitHub Copilot usage for the team 'my-team' in the organization 'my-org'."
    },
    {
      "path": "/credentials/revoke",
      "method": "POST",
      "operationId": "credentials/revoke",
      "summary": "",
      "user": "user123",
      "ideal": "Revokes the specified credentials for the authenticated user."
    },
    {
      "path": "/enterprises/my-enterprise/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-enterprise",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve all Dependabot alerts for the specified enterprise."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access",
      "method": "GET",
      "operationId": "dependabot/repository-access-for-org",
      "summary": "",
      "user": "org_admin",
      "ideal": "Get the repository access settings for the organization."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access",
      "method": "PATCH",
      "operationId": "dependabot/update-repository-access-for-org",
      "summary": "",
      "user": "org_admin",
      "ideal": "Update the repository access settings for the organization."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access/default-level",
      "method": "PUT",
      "operationId": "dependabot/set-repository-access-default-level",
      "summary": "",
      "user": "org_admin",
      "ideal": "Set the default repository access level for the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-org",
      "summary": "",
      "user": "dev_user",
      "ideal": "List all Dependabot alerts for the specified organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets",
      "method": "GET",
      "operationId": "dependabot/list-org-secrets",
      "summary": "",
      "user": "org_admin",
      "ideal": "Retrieve all secrets for the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/public-key",
      "method": "GET",
      "operationId": "dependabot/get-org-public-key",
      "summary": "",
      "user": "org_admin",
      "ideal": "Get the public key for encrypting secrets in the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "GET",
      "operationId": "dependabot/get-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Retrieve the specified secret for the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "PUT",
      "operationId": "dependabot/create-or-update-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Create or update the specified secret for the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "DELETE",
      "operationId": "dependabot/delete-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Delete the specified secret from the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories",
      "method": "GET",
      "operationId": "dependabot/list-selected-repos-for-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "List repositories that have access to the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories",
      "method": "PUT",
      "operationId": "dependabot/set-selected-repos-for-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Set the repositories that can access the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories/my-repo-id",
      "method": "PUT",
      "operationId": "dependabot/add-selected-repo-to-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Add a repository to the list of those that can access the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories/my-repo-id",
      "method": "DELETE",
      "operationId": "dependabot/remove-selected-repo-from-org-secret",
      "summary": "",
      "user": "org_admin",
      "ideal": "Remove a repository from the list of those that can access the specified secret."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-repo",
      "summary": "",
      "user": "repo_admin",
      "ideal": "List all Dependabot alerts for the specified repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts/1",
      "method": "GET",
      "operationId": "dependabot/get-alert",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Retrieve details of a specific Dependabot alert."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts/1",
      "method": "PATCH",
      "operationId": "dependabot/update-alert",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Update the specified Dependabot alert."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets",
      "method": "GET",
      "operationId": "dependabot/list-repo-secrets",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Retrieve all secrets for the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/public-key",
      "method": "GET",
      "operationId": "dependabot/get-repo-public-key",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Get the public key for encrypting secrets in the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "GET",
      "operationId": "dependabot/get-repo-secret",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Retrieve the specified secret for the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "PUT",
      "operationId": "dependabot/create-or-update-repo-secret",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Create or update the specified secret for the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "DELETE",
      "operationId": "dependabot/delete-repo-secret",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Delete the specified secret from the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/dependency-graph/compare/main...feature",
      "method": "GET",
      "operationId": "dependency-graph/diff-range",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the differences in dependencies between the main branch and the feature branch."
    },
    {
      "path": "/repos/octocat/Hello-World/dependency-graph/sbom",
      "method": "GET",
      "operationId": "dependency-graph/export-sbom",
      "summary": "",
      "user": "octocat",
      "ideal": "Export the Software Bill of Materials (SBOM) for the repository to understand all dependencies."
    },
    {
      "path": "/repos/octocat/Hello-World/dependency-graph/snapshots",
      "method": "POST",
      "operationId": "dependency-graph/create-repository-snapshot",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a snapshot of the current state of dependencies in the repository for future reference."
    },
    {
      "path": "/emojis",
      "method": "GET",
      "operationId": "getEmojis",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve a list of all available emojis on GitHub."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships",
      "method": "GET",
      "operationId": "enterprise-team-memberships/list",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all team memberships for the specified team in the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships/add",
      "method": "POST",
      "operationId": "enterprise-team-memberships/bulk-add",
      "summary": "",
      "user": "user456",
      "ideal": "Add multiple users to the specified team in the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships/remove",
      "method": "POST",
      "operationId": "enterprise-team-memberships/bulk-remove",
      "summary": "",
      "user": "user789",
      "ideal": "Remove multiple users from the specified team in the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships/user123",
      "method": "GET",
      "operationId": "enterprise-team-memberships/get",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the membership details for user123 in the specified team."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships/user456",
      "method": "PUT",
      "operationId": "enterprise-team-memberships/add",
      "summary": "",
      "user": "user456",
      "ideal": "Add user456 to the specified team in the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team/memberships/user789",
      "method": "DELETE",
      "operationId": "enterprise-team-memberships/remove",
      "summary": "",
      "user": "user789",
      "ideal": "Remove user789 from the specified team in the enterprise."
    },
    {
      "path": "/enterprises/my-enterprise/teams",
      "method": "GET",
      "operationId": "enterprise-teams/list",
      "summary": "",
      "user": "As an enterprise admin, I want to retrieve a list of all teams in my enterprise to manage team permissions and access.",
      "ideal": "A successful response with a list of teams, including their names, slugs, and IDs."
    },
    {
      "path": "/enterprises/my-enterprise/teams",
      "method": "POST",
      "operationId": "enterprise-teams/create",
      "summary": "",
      "user": "As an enterprise admin, I want to create a new team in my enterprise so that I can organize members by projects.",
      "ideal": "A successful response with the details of the newly created team, including its ID and slug."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team",
      "method": "GET",
      "operationId": "enterprise-teams/get",
      "summary": "",
      "user": "As a team member, I want to view the details of my team to understand its purpose and members.",
      "ideal": "A successful response with the team's details, including its name, members, and permissions."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team",
      "method": "PATCH",
      "operationId": "enterprise-teams/update",
      "summary": "",
      "user": "As a team maintainer, I want to update my team's name and description to reflect our current focus.",
      "ideal": "A successful response confirming the update with the new team details."
    },
    {
      "path": "/enterprises/my-enterprise/teams/my-team",
      "method": "DELETE",
      "operationId": "enterprise-teams/delete",
      "summary": "",
      "user": "As an enterprise admin, I want to delete a team that is no longer needed to keep the organization clean.",
      "ideal": "A successful response confirming the deletion of the team."
    },
    {
      "path": "/gists",
      "method": "GET",
      "operationId": "gists/list",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all gists for the authenticated user."
    },
    {
      "path": "/gists",
      "method": "POST",
      "operationId": "gists/create",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new gist with the provided content."
    },
    {
      "path": "/gists/public",
      "method": "GET",
      "operationId": "gists/list-public",
      "summary": "",
      "user": "user456",
      "ideal": "Fetch a list of public gists."
    },
    {
      "path": "/gists/starred",
      "method": "GET",
      "operationId": "gists/list-starred",
      "summary": "",
      "user": "user789",
      "ideal": "Get a list of gists that the authenticated user has starred."
    },
    {
      "path": "/gists/{gist_id}",
      "method": "GET",
      "operationId": "gists/get",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a specific gist by its ID."
    },
    {
      "path": "/gists/{gist_id}",
      "method": "PATCH",
      "operationId": "gists/update",
      "summary": "",
      "user": "user123",
      "ideal": "Update the content of an existing gist."
    },
    {
      "path": "/gists/{gist_id}",
      "method": "DELETE",
      "operationId": "gists/delete",
      "summary": "",
      "user": "user123",
      "ideal": "Delete a specific gist."
    },
    {
      "path": "/gists/{gist_id}/comments",
      "method": "GET",
      "operationId": "gists/list-comments",
      "summary": "",
      "user": "user123",
      "ideal": "List all comments for a specific gist."
    },
    {
      "path": "/gists/{gist_id}/comments",
      "method": "POST",
      "operationId": "gists/create-comment",
      "summary": "",
      "user": "user123",
      "ideal": "Add a comment to a specific gist."
    },
    {
      "path": "/gists/{gist_id}/comments/{comment_id}",
      "method": "GET",
      "operationId": "gists/get-comment",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a specific comment by its ID."
    },
    {
      "path": "/gists/{gist_id}/comments/{comment_id}",
      "method": "PATCH",
      "operationId": "gists/update-comment",
      "summary": "",
      "user": "user123",
      "ideal": "Update a specific comment."
    },
    {
      "path": "/gists/{gist_id}/comments/{comment_id}",
      "method": "DELETE",
      "operationId": "gists/delete-comment",
      "summary": "",
      "user": "user123",
      "ideal": "Delete a specific comment."
    },
    {
      "path": "/gists/{gist_id}/commits",
      "method": "GET",
      "operationId": "gists/list-commits",
      "summary": "",
      "user": "user123",
      "ideal": "List all commits for a specific gist."
    },
    {
      "path": "/gists/{gist_id}/forks",
      "method": "GET",
      "operationId": "gists/list-forks",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of forks for a specific gist."
    },
    {
      "path": "/gists/{gist_id}/forks",
      "method": "POST",
      "operationId": "gists/fork",
      "summary": "",
      "user": "user456",
      "ideal": "Create a fork of a specific gist."
    },
    {
      "path": "/gists/{gist_id}/star",
      "method": "GET",
      "operationId": "gists/check-is-starred",
      "summary": "",
      "user": "user123",
      "ideal": "Check if a specific gist is starred by the authenticated user."
    },
    {
      "path": "/gists/{gist_id}/star",
      "method": "PUT",
      "operationId": "gists/star",
      "summary": "",
      "user": "user123",
      "ideal": "Star a specific gist."
    },
    {
      "path": "/gists/{gist_id}/star",
      "method": "DELETE",
      "operationId": "gists/unstar",
      "summary": "",
      "user": "user123",
      "ideal": "Unstar a specific gist."
    },
    {
      "path": "/gists/{gist_id}/{sha}",
      "method": "GET",
      "operationId": "gists/get-revision",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a specific revision of a gist."
    },
    {
      "path": "/users/{username}/gists",
      "method": "GET",
      "operationId": "gists/list-for-user",
      "summary": "",
      "user": "user456",
      "ideal": "List all gists for a specific user."
    },
    {
      "path": "/repos/octocat/Hello-World/git/blobs",
      "method": "POST",
      "operationId": "git/create-blob",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new blob in the repository with the specified content."
    },
    {
      "path": "/repos/octocat/Hello-World/git/blobs/abc123",
      "method": "GET",
      "operationId": "git/get-blob",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the blob data for the specified SHA."
    },
    {
      "path": "/repos/octocat/Hello-World/git/commits",
      "method": "POST",
      "operationId": "git/create-commit",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new commit in the repository with the specified tree and parents."
    },
    {
      "path": "/repos/octocat/Hello-World/git/commits/def456",
      "method": "GET",
      "operationId": "git/get-commit",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the commit data for the specified SHA."
    },
    {
      "path": "/repos/octocat/Hello-World/git/matching-refs/heads",
      "method": "GET",
      "operationId": "git/list-matching-refs",
      "summary": "",
      "user": "octocat",
      "ideal": "List all references that match the specified pattern."
    },
    {
      "path": "/repos/octocat/Hello-World/git/ref/heads/main",
      "method": "GET",
      "operationId": "git/get-ref",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the reference data for the specified ref."
    },
    {
      "path": "/repos/octocat/Hello-World/git/refs",
      "method": "POST",
      "operationId": "git/create-ref",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new reference in the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/git/refs/heads/main",
      "method": "PATCH",
      "operationId": "git/update-ref",
      "summary": "",
      "user": "octocat",
      "ideal": "Update the specified reference to point to a new SHA."
    },
    {
      "path": "/repos/octocat/Hello-World/git/refs/heads/old-branch",
      "method": "DELETE",
      "operationId": "git/delete-ref",
      "summary": "",
      "user": "octocat",
      "ideal": "Delete the specified reference from the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/git/tags",
      "method": "POST",
      "operationId": "git/create-tag",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new tag in the repository with the specified commit."
    },
    {
      "path": "/repos/octocat/Hello-World/git/tags/ghi789",
      "method": "GET",
      "operationId": "git/get-tag",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the tag data for the specified SHA."
    },
    {
      "path": "/repos/octocat/Hello-World/git/trees",
      "method": "POST",
      "operationId": "git/create-tree",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new tree in the repository with the specified entries."
    },
    {
      "path": "/repos/octocat/Hello-World/git/trees/jkl012",
      "method": "GET",
      "operationId": "git/get-tree",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve the tree data for the specified SHA."
    },
    {
      "path": "/gitignore/templates",
      "method": "GET",
      "operationId": "gitignore/get-all-templates",
      "summary": "",
      "user": "Alice is a software developer who frequently works on various projects. She often needs to create .gitignore files to exclude unnecessary files from her Git repositories. By using this API, she can quickly retrieve a list of available gitignore templates for different programming languages and frameworks, saving her time and ensuring she uses the correct templates.",
      "ideal": "Retrieve a list of all available gitignore templates."
    },
    {
      "path": "/gitignore/templates/Python",
      "method": "GET",
      "operationId": "gitignore/get-template",
      "summary": "",
      "user": "Bob is a data scientist who primarily uses Python for his projects. He wants to create a .gitignore file that excludes common Python files and directories that should not be tracked by Git. By calling this API, he can get the specific gitignore template for Python, ensuring his repository remains clean and organized.",
      "ideal": "Retrieve the gitignore template for Python."
    },
    {
      "path": "/orgs/my-org/settings/network-configurations",
      "method": "GET",
      "operationId": "hosted-compute/list-network-configurations-for-org",
      "summary": "",
      "user": "User wants to retrieve all network configurations for their organization to review current settings and ensure compliance with security policies.",
      "ideal": "Returns a list of network configurations with details such as ID, name, and status."
    },
    {
      "path": "/orgs/my-org/settings/network-configurations",
      "method": "POST",
      "operationId": "hosted-compute/create-network-configuration-for-org",
      "summary": "",
      "user": "User needs to create a new network configuration for their organization to support a new project that requires specific network settings.",
      "ideal": "Successfully creates a new network configuration and returns the created configuration's details including ID and status."
    },
    {
      "path": "/orgs/my-org/settings/network-configurations/12345",
      "method": "GET",
      "operationId": "hosted-compute/get-network-configuration-for-org",
      "summary": "",
      "user": "User wants to get details of a specific network configuration to troubleshoot an issue related to network connectivity.",
      "ideal": "Returns the details of the specified network configuration including settings and status."
    },
    {
      "path": "/orgs/my-org/settings/network-configurations/12345",
      "method": "PATCH",
      "operationId": "hosted-compute/update-network-configuration-for-org",
      "summary": "",
      "user": "User needs to update an existing network configuration to change the IP range to accommodate new devices in the network.",
      "ideal": "Successfully updates the network configuration and returns the updated configuration details."
    },
    {
      "path": "/orgs/my-org/settings/network-configurations/12345",
      "method": "DELETE",
      "operationId": "hosted-compute/delete-network-configuration-from-org",
      "summary": "",
      "user": "User wants to delete an obsolete network configuration that is no longer in use to clean up the organization's settings.",
      "ideal": "Successfully deletes the specified network configuration and confirms the deletion."
    },
    {
      "path": "/orgs/my-org/settings/network-settings/67890",
      "method": "GET",
      "operationId": "hosted-compute/get-network-settings-for-org",
      "summary": "",
      "user": "User is looking to retrieve the network settings for their organization to ensure they align with the latest compliance requirements.",
      "ideal": "Returns the current network settings including DNS, gateway, and other relevant configurations."
    },
    {
      "path": "/orgs/example-org/interaction-limits",
      "method": "GET",
      "operationId": "interactions/get-restrictions-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the interaction limits set for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/interaction-limits",
      "method": "PUT",
      "operationId": "interactions/set-restrictions-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Set new interaction limits for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/interaction-limits",
      "method": "DELETE",
      "operationId": "interactions/remove-restrictions-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Remove all interaction limits for the organization 'example-org'."
    },
    {
      "path": "/repos/example-owner/example-repo/interaction-limits",
      "method": "GET",
      "operationId": "interactions/get-restrictions-for-repo",
      "summary": "",
      "user": "user456",
      "ideal": "Get the interaction limits for the repository 'example-repo' owned by 'example-owner'."
    },
    {
      "path": "/repos/example-owner/example-repo/interaction-limits",
      "method": "PUT",
      "operationId": "interactions/set-restrictions-for-repo",
      "summary": "",
      "user": "user456",
      "ideal": "Set interaction limits for the repository 'example-repo' owned by 'example-owner'."
    },
    {
      "path": "/repos/example-owner/example-repo/interaction-limits",
      "method": "DELETE",
      "operationId": "interactions/remove-restrictions-for-repo",
      "summary": "",
      "user": "user456",
      "ideal": "Remove interaction limits for the repository 'example-repo' owned by 'example-owner'."
    },
    {
      "path": "/user/interaction-limits",
      "method": "GET",
      "operationId": "interactions/get-restrictions-for-authenticated-user",
      "summary": "",
      "user": "user789",
      "ideal": "Retrieve the interaction limits set for the authenticated user."
    },
    {
      "path": "/user/interaction-limits",
      "method": "PUT",
      "operationId": "interactions/set-restrictions-for-authenticated-user",
      "summary": "",
      "user": "user789",
      "ideal": "Set new interaction limits for the authenticated user."
    },
    {
      "path": "/user/interaction-limits",
      "method": "DELETE",
      "operationId": "interactions/remove-restrictions-for-authenticated-user",
      "summary": "",
      "user": "user789",
      "ideal": "Remove all interaction limits for the authenticated user."
    },
    {
      "path": "/repos/octocat/Hello-World/issues",
      "method": "GET",
      "operationId": "issues/list-for-repo",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of issues for the specified repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/comments",
      "method": "GET",
      "operationId": "issues/list-comments",
      "summary": "",
      "user": "user456",
      "ideal": "Get all comments for issue number 42 in the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/assignees",
      "method": "GET",
      "operationId": "issues/list-assignees",
      "summary": "",
      "user": "user789",
      "ideal": "List all assignees for issue number 42 in the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42",
      "method": "GET",
      "operationId": "issues/get",
      "summary": "",
      "user": "user101",
      "ideal": "Retrieve details of issue number 42 in the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues",
      "method": "POST",
      "operationId": "issues/create",
      "summary": "",
      "user": "user202",
      "ideal": "Create a new issue in the specified repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/labels",
      "method": "POST",
      "operationId": "issues/add-labels",
      "summary": "",
      "user": "user303",
      "ideal": "Add labels to issue number 42 in the repository."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/lock",
      "method": "PUT",
      "operationId": "issues/lock",
      "summary": "",
      "user": "user404",
      "ideal": "Lock issue number 42 to prevent further comments."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/comments/1",
      "method": "PATCH",
      "operationId": "issues/update-comment",
      "summary": "",
      "user": "user505",
      "ideal": "Update comment with ID 1 on issue number 42."
    },
    {
      "path": "/repos/octocat/Hello-World/issues/42/assignees/user456",
      "method": "DELETE",
      "operationId": "issues/remove-assignees",
      "summary": "",
      "user": "user606",
      "ideal": "Remove user456 from the assignees of issue number 42."
    },
    {
      "path": "/repos/octocat/Hello-World/milestones",
      "method": "GET",
      "operationId": "issues/list-milestones",
      "summary": "",
      "user": "user707",
      "ideal": "Retrieve a list of milestones for the specified repository."
    },
    {
      "path": "/licenses",
      "method": "GET",
      "operationId": "licenses/get-all-commonly-used",
      "summary": "",
      "user": "A developer looking to find commonly used open-source licenses for their project. They want to ensure compliance and choose a license that aligns with their project's goals.",
      "ideal": "Returns a list of commonly used open-source licenses with their details."
    },
    {
      "path": "/licenses/mit",
      "method": "GET",
      "operationId": "licenses/get",
      "summary": "",
      "user": "A software engineer who needs to retrieve the details of the MIT license to include it in their project documentation. They want to understand the terms and conditions of the license.",
      "ideal": "Returns the details of the MIT license including its full text and permissions."
    },
    {
      "path": "/repos/octocat/Hello-World/license",
      "method": "GET",
      "operationId": "licenses/get-for-repo",
      "summary": "",
      "user": "A contributor who wants to check the license of the 'Hello-World' repository owned by 'octocat' before making contributions. They need to ensure that their contributions are compatible with the repository's license.",
      "ideal": "Returns the license information for the specified repository, including the type of license and any relevant details."
    },
    {
      "path": "/markdown",
      "method": "POST",
      "operationId": "markdown/render",
      "summary": "",
      "user": "User wants to convert Markdown text into HTML format for a README file on their GitHub repository. They provide a simple Markdown string that includes headers, lists, and links.",
      "ideal": "{\"text\":\"# Hello World\\nThis is a list:\\n- Item 1\\n- Item 2\\n[GitHub](https://github.com)\"}"
    },
    {
      "path": "/markdown/raw",
      "method": "POST",
      "operationId": "markdown/render-raw",
      "summary": "",
      "user": "User needs to render raw Markdown content directly without any additional processing. They are sending a Markdown string that includes code blocks and inline code for documentation purposes.",
      "ideal": "{\"text\":\"# Sample Code\\nHere is some inline code: `print('Hello, World!')`\\n\\nAnd a code block:\\n\\n```python\\ndef hello():\\n    print('Hello, World!')\\n```\"}"
    },
    {
      "path": "/",
      "method": "GET",
      "operationId": "meta/root",
      "summary": "",
      "user": "User requests the root endpoint to check the API's availability and get basic information.",
      "ideal": "Returns a JSON object with information about the API."
    },
    {
      "path": "/meta",
      "method": "GET",
      "operationId": "meta/get",
      "summary": "",
      "user": "User wants to retrieve metadata about the API, such as its version and available endpoints.",
      "ideal": "Returns a JSON object containing metadata about the API."
    },
    {
      "path": "/octocat",
      "method": "GET",
      "operationId": "meta/get-octocat",
      "summary": "",
      "user": "User is curious about the Octocat character, a mascot of GitHub, and wants to see its details.",
      "ideal": "Returns a JSON object with details about Octocat."
    },
    {
      "path": "/versions",
      "method": "GET",
      "operationId": "meta/get-all-versions",
      "summary": "",
      "user": "User wants to see all the available versions of the GitHub API to ensure compatibility with their application.",
      "ideal": "Returns a JSON array listing all available API versions."
    },
    {
      "path": "/zen",
      "method": "GET",
      "operationId": "meta/get-zen",
      "summary": "",
      "user": "User is looking for a motivational quote from the GitHub Zen philosophy to inspire their coding session.",
      "ideal": "Returns a JSON object containing a random Zen quote."
    },
    {
      "path": "/orgs/my-org/migrations",
      "method": "GET",
      "operationId": "migrations/list-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of migrations for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations",
      "method": "POST",
      "operationId": "migrations/start-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Start a new migration for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations/12345",
      "method": "GET",
      "operationId": "migrations/get-status-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Get the status of the migration with ID '12345' for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations/12345/archive",
      "method": "GET",
      "operationId": "migrations/download-archive-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Download the archive of the migration with ID '12345' for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations/12345/archive",
      "method": "DELETE",
      "operationId": "migrations/delete-archive-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Delete the archive of the migration with ID '12345' for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations/12345/repos/my-repo/lock",
      "method": "DELETE",
      "operationId": "migrations/unlock-repo-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Unlock the repository 'my-repo' for the migration with ID '12345' for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/migrations/12345/repositories",
      "method": "GET",
      "operationId": "migrations/list-repos-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "List all repositories involved in the migration with ID '12345' for the organization 'my-org'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import",
      "method": "GET",
      "operationId": "migrations/get-import-status",
      "summary": "",
      "user": "user123",
      "ideal": "Get the import status for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import",
      "method": "PUT",
      "operationId": "migrations/start-import",
      "summary": "",
      "user": "user123",
      "ideal": "Start the import process for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import",
      "method": "PATCH",
      "operationId": "migrations/update-import",
      "summary": "",
      "user": "user123",
      "ideal": "Update the import settings for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import",
      "method": "DELETE",
      "operationId": "migrations/cancel-import",
      "summary": "",
      "user": "user123",
      "ideal": "Cancel the import process for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import/authors",
      "method": "GET",
      "operationId": "migrations/get-commit-authors",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the commit authors for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import/authors/author_id",
      "method": "PATCH",
      "operationId": "migrations/map-commit-author",
      "summary": "",
      "user": "user123",
      "ideal": "Map the commit author with ID 'author_id' for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import/large_files",
      "method": "GET",
      "operationId": "migrations/get-large-files",
      "summary": "",
      "user": "user123",
      "ideal": "Get a list of large files for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/repos/my-repo-owner/my-repo/import/lfs",
      "method": "PATCH",
      "operationId": "migrations/set-lfs-preference",
      "summary": "",
      "user": "user123",
      "ideal": "Set the LFS preference for the repository 'my-repo' owned by 'my-repo-owner'."
    },
    {
      "path": "/user/migrations",
      "method": "GET",
      "operationId": "migrations/list-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of migrations for the authenticated user."
    },
    {
      "path": "/user/migrations",
      "method": "POST",
      "operationId": "migrations/start-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Start a new migration for the authenticated user."
    },
    {
      "path": "/user/migrations/12345",
      "method": "GET",
      "operationId": "migrations/get-status-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Get the status of the migration with ID '12345' for the authenticated user."
    },
    {
      "path": "/user/migrations/12345/archive",
      "method": "GET",
      "operationId": "migrations/get-archive-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Get the archive of the migration with ID '12345' for the authenticated user."
    },
    {
      "path": "/user/migrations/12345/archive",
      "method": "DELETE",
      "operationId": "migrations/delete-archive-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Delete the archive of the migration with ID '12345' for the authenticated user."
    },
    {
      "path": "/user/migrations/12345/repos/my-repo/lock",
      "method": "DELETE",
      "operationId": "migrations/unlock-repo-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Unlock the repository 'my-repo' for the migration with ID '12345' for the authenticated user."
    },
    {
      "path": "/user/migrations/12345/repositories",
      "method": "GET",
      "operationId": "migrations/list-repos-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "List all repositories involved in the migration with ID '12345' for the authenticated user."
    },
    {
      "path": "/orgs/{org}/actions/oidc/customization/sub",
      "method": "GET",
      "operationId": "oidc/get-oidc-custom-sub-template-for-org",
      "summary": "",
      "user": "A developer wants to retrieve the OpenID Connect (OIDC) custom subject template for their organization to understand how it is configured and ensure it meets their security requirements.",
      "ideal": "The response should include the current OIDC custom subject template for the specified organization."
    },
    {
      "path": "/orgs/{org}/actions/oidc/customization/sub",
      "method": "PUT",
      "operationId": "oidc/update-oidc-custom-sub-template-for-org",
      "summary": "",
      "user": "An admin needs to update the OIDC custom subject template for their organization to include additional claims that are necessary for their application to function correctly.",
      "ideal": "The response should confirm that the OIDC custom subject template has been successfully updated for the specified organization."
    },
    {
      "path": "/orgs/example-org/members",
      "method": "GET",
      "operationId": "orgs/list-members",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all members in the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/hooks",
      "method": "POST",
      "operationId": "orgs/create-webhook",
      "summary": "",
      "user": "user456",
      "ideal": "Create a new webhook for the organization 'example-org' with specified configuration."
    },
    {
      "path": "/orgs/example-org/invitations",
      "method": "GET",
      "operationId": "orgs/list-pending-invitations",
      "summary": "",
      "user": "user789",
      "ideal": "List all pending invitations for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/blocks/johndoe",
      "method": "PUT",
      "operationId": "orgs/block-user",
      "summary": "",
      "user": "user123",
      "ideal": "Block the user 'johndoe' from the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/attestations/bulk-list",
      "method": "POST",
      "operationId": "orgs/list-attestations-bulk",
      "summary": "",
      "user": "user456",
      "ideal": "Retrieve a bulk list of attestations for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/settings/immutable-releases",
      "method": "PUT",
      "operationId": "orgs/set-immutable-releases-settings",
      "summary": "",
      "user": "user789",
      "ideal": "Set the immutable releases settings for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/memberships/johndoe",
      "method": "DELETE",
      "operationId": "orgs/remove-membership-for-user",
      "summary": "",
      "user": "user123",
      "ideal": "Remove the membership of user 'johndoe' from the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/rulesets/123/history",
      "method": "GET",
      "operationId": "orgs/get-org-ruleset-history",
      "summary": "",
      "user": "user456",
      "ideal": "Get the history of ruleset with ID '123' for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/personal-access-tokens",
      "method": "GET",
      "operationId": "orgs/list-pat-grants",
      "summary": "",
      "user": "user789",
      "ideal": "List all personal access tokens for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/issue-types",
      "method": "POST",
      "operationId": "orgs/create-issue-type",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new issue type for the organization 'example-org'."
    },
    {
      "path": "/orgs/my-org/packages",
      "method": "GET",
      "operationId": "packages/list-packages-for-organization",
      "summary": "",
      "user": "orgUser123",
      "ideal": "Retrieve a list of all packages for the organization 'my-org'."
    },
    {
      "path": "/user/packages",
      "method": "GET",
      "operationId": "packages/list-packages-for-authenticated-user",
      "summary": "",
      "user": "authUser456",
      "ideal": "Get a list of all packages owned by the authenticated user."
    },
    {
      "path": "/users/johnDoe/packages/npm/my-package",
      "method": "GET",
      "operationId": "packages/get-package-for-user",
      "summary": "",
      "user": "johnDoe",
      "ideal": "Fetch details of the 'my-package' npm package owned by user 'johnDoe'."
    },
    {
      "path": "/orgs/my-org/packages/npm/my-package",
      "method": "DELETE",
      "operationId": "packages/delete-package-for-org",
      "summary": "",
      "user": "orgAdmin789",
      "ideal": "Delete the 'my-package' npm package from the organization 'my-org'."
    },
    {
      "path": "/user/packages/npm/my-package/versions",
      "method": "GET",
      "operationId": "packages/get-all-package-versions-for-package-owned-by-authenticated-user",
      "summary": "",
      "user": "authUser456",
      "ideal": "List all versions of the 'my-package' npm package owned by the authenticated user."
    },
    {
      "path": "/users/janeDoe/packages/docker/my-docker-image/versions/1.0.0",
      "method": "GET",
      "operationId": "packages/get-package-version-for-user",
      "summary": "",
      "user": "janeDoe",
      "ideal": "Retrieve details of version '1.0.0' of the 'my-docker-image' package owned by user 'janeDoe'."
    },
    {
      "path": "/orgs/my-org/packages/npm/my-package/versions/1.0.0",
      "method": "DELETE",
      "operationId": "packages/delete-package-version-for-org",
      "summary": "",
      "user": "orgAdmin789",
      "ideal": "Delete version '1.0.0' of the 'my-package' npm package from the organization 'my-org'."
    },
    {
      "path": "/users/johnDoe/packages/npm/my-package/versions/1.0.0/restore",
      "method": "POST",
      "operationId": "packages/restore-package-version-for-user",
      "summary": "",
      "user": "johnDoe",
      "ideal": "Restore version '1.0.0' of the 'my-package' npm package owned by user 'johnDoe'."
    },
    {
      "path": "/user/packages/docker/my-docker-image/restore",
      "method": "POST",
      "operationId": "packages/restore-package-for-authenticated-user",
      "summary": "",
      "user": "authUser456",
      "ideal": "Restore the 'my-docker-image' Docker package owned by the authenticated user."
    },
    {
      "path": "/users/janeDoe/packages/npm/my-package/docker/conflicts",
      "method": "GET",
      "operationId": "packages/list-docker-migration-conflicting-packages-for-user",
      "summary": "",
      "user": "janeDoe",
      "ideal": "List any Docker migration conflicts for the 'my-package' npm package owned by user 'janeDoe'."
    },
    {
      "path": "/orgs/my-org/private-registries",
      "method": "GET",
      "operationId": "private-registries/list-org-private-registries",
      "summary": "",
      "user": "As a developer, I want to retrieve a list of all private registries associated with my organization so that I can manage them effectively.",
      "ideal": "The response should include an array of private registries with their names and details."
    },
    {
      "path": "/orgs/my-org/private-registries",
      "method": "POST",
      "operationId": "private-registries/create-org-private-registry",
      "summary": "",
      "user": "As an admin, I want to create a new private registry for my organization to store sensitive packages securely.",
      "ideal": "The response should confirm the creation of the private registry and return its details."
    },
    {
      "path": "/orgs/my-org/private-registries/public-key",
      "method": "GET",
      "operationId": "private-registries/get-org-public-key",
      "summary": "",
      "user": "As a security officer, I need to retrieve the public key for my organization's private registries to ensure secure access.",
      "ideal": "The response should return the public key in a format that can be used for encryption."
    },
    {
      "path": "/orgs/my-org/private-registries/my-secret",
      "method": "GET",
      "operationId": "private-registries/get-org-private-registry",
      "summary": "",
      "user": "As a developer, I want to access the details of a specific private registry to understand its configuration.",
      "ideal": "The response should provide detailed information about the specified private registry."
    },
    {
      "path": "/orgs/my-org/private-registries/my-secret",
      "method": "PATCH",
      "operationId": "private-registries/update-org-private-registry",
      "summary": "",
      "user": "As an admin, I want to update the configuration of an existing private registry to improve its settings.",
      "ideal": "The response should confirm the update and return the updated details of the private registry."
    },
    {
      "path": "/orgs/my-org/private-registries/my-secret",
      "method": "DELETE",
      "operationId": "private-registries/delete-org-private-registry",
      "summary": "",
      "user": "As an admin, I want to delete a private registry that is no longer needed to keep our organization clean and organized.",
      "ideal": "The response should confirm the deletion of the private registry."
    },
    {
      "path": "/orgs/my-org/projectsV2",
      "method": "GET",
      "operationId": "projects/list-for-org",
      "summary": "",
      "user": "Retrieve a list of all projects in the organization 'my-org'.",
      "ideal": "A successful response should return a JSON array of project objects."
    },
    {
      "path": "/orgs/my-org/projectsV2/123",
      "method": "GET",
      "operationId": "projects/get-for-org",
      "summary": "",
      "user": "Get details for the project with number 123 in the organization 'my-org'.",
      "ideal": "The response should include the project's details such as name, description, and status."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/fields",
      "method": "GET",
      "operationId": "projects/list-fields-for-org",
      "summary": "",
      "user": "List all fields for the project with number 123 in 'my-org'.",
      "ideal": "The response should return an array of field objects associated with the project."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/fields/456",
      "method": "GET",
      "operationId": "projects/get-field-for-org",
      "summary": "",
      "user": "Retrieve details of the field with ID 456 for project 123 in 'my-org'.",
      "ideal": "The response should provide details about the specific field."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/items",
      "method": "GET",
      "operationId": "projects/list-items-for-org",
      "summary": "",
      "user": "Get a list of all items in the project with number 123 in 'my-org'.",
      "ideal": "The response should return an array of item objects."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/items",
      "method": "POST",
      "operationId": "projects/add-item-for-org",
      "summary": "",
      "user": "Add a new item to the project with number 123 in 'my-org'.",
      "ideal": "The response should confirm the item was added and return the new item object."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/items/789",
      "method": "GET",
      "operationId": "projects/get-org-item",
      "summary": "",
      "user": "Retrieve details of the item with ID 789 in project 123 of 'my-org'.",
      "ideal": "The response should include the item's details such as title and status."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/items/789",
      "method": "PATCH",
      "operationId": "projects/update-item-for-org",
      "summary": "",
      "user": "Update the item with ID 789 in project 123 of 'my-org'.",
      "ideal": "The response should confirm the item was updated and return the updated item object."
    },
    {
      "path": "/orgs/my-org/projectsV2/123/items/789",
      "method": "DELETE",
      "operationId": "projects/delete-item-for-org",
      "summary": "",
      "user": "Delete the item with ID 789 from project 123 in 'my-org'.",
      "ideal": "The response should confirm that the item was successfully deleted."
    },
    {
      "path": "/users/johndoe/projectsV2",
      "method": "GET",
      "operationId": "projects/list-for-user",
      "summary": "",
      "user": "List all projects for the user 'johndoe'.",
      "ideal": "The response should return an array of project objects associated with the user."
    },
    {
      "path": "/users/johndoe/projectsV2/456",
      "method": "GET",
      "operationId": "projects/get-for-user",
      "summary": "",
      "user": "Get details for the project with number 456 for user 'johndoe'.",
      "ideal": "The response should include the project's details such as name and description."
    },
    {
      "path": "/users/johndoe/projectsV2/456/fields",
      "method": "GET",
      "operationId": "projects/list-fields-for-user",
      "summary": "",
      "user": "List all fields for the project with number 456 for user 'johndoe'.",
      "ideal": "The response should return an array of field objects associated with the project."
    },
    {
      "path": "/users/johndoe/projectsV2/456/fields/101",
      "method": "GET",
      "operationId": "projects/get-field-for-user",
      "summary": "",
      "user": "Retrieve details of the field with ID 101 for project 456 of user 'johndoe'.",
      "ideal": "The response should provide details about the specific field."
    },
    {
      "path": "/users/johndoe/projectsV2/456/items",
      "method": "GET",
      "operationId": "projects/list-items-for-user",
      "summary": "",
      "user": "Get a list of all items in the project with number 456 for user 'johndoe'.",
      "ideal": "The response should return an array of item objects."
    },
    {
      "path": "/users/johndoe/projectsV2/456/items",
      "method": "POST",
      "operationId": "projects/add-item-for-user",
      "summary": "",
      "user": "Add a new item to the project with number 456 for user 'johndoe'.",
      "ideal": "The response should confirm the item was added and return the new item object."
    },
    {
      "path": "/users/johndoe/projectsV2/456/items/202",
      "method": "GET",
      "operationId": "projects/get-user-item",
      "summary": "",
      "user": "Retrieve details of the item with ID 202 in project 456 for user 'johndoe'.",
      "ideal": "The response should include the item's details such as title and status."
    },
    {
      "path": "/users/johndoe/projectsV2/456/items/202",
      "method": "PATCH",
      "operationId": "projects/update-item-for-user",
      "summary": "",
      "user": "Update the item with ID 202 in project 456 for user 'johndoe'.",
      "ideal": "The response should confirm the item was updated and return the updated item object."
    },
    {
      "path": "/users/johndoe/projectsV2/456/items/202",
      "method": "DELETE",
      "operationId": "projects/delete-item-for-user",
      "summary": "",
      "user": "Delete the item with ID 202 from project 456 for user 'johndoe'.",
      "ideal": "The response should confirm that the item was successfully deleted."
    },
    {
      "path": "/orgs/my-org/projects",
      "method": "GET",
      "operationId": "projects-classic/list-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of projects for the organization 'my-org'."
    },
    {
      "path": "/orgs/my-org/projects",
      "method": "POST",
      "operationId": "projects-classic/create-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new project for the organization 'my-org'."
    },
    {
      "path": "/projects/columns/12345",
      "method": "GET",
      "operationId": "projects-classic/get-column",
      "summary": "",
      "user": "user123",
      "ideal": "Get details of the column with ID '12345'."
    },
    {
      "path": "/projects/columns/12345",
      "method": "PATCH",
      "operationId": "projects-classic/update-column",
      "summary": "",
      "user": "user123",
      "ideal": "Update the column with ID '12345'."
    },
    {
      "path": "/projects/columns/12345",
      "method": "DELETE",
      "operationId": "projects-classic/delete-column",
      "summary": "",
      "user": "user123",
      "ideal": "Delete the column with ID '12345'."
    },
    {
      "path": "/projects/columns/12345/moves",
      "method": "POST",
      "operationId": "projects-classic/move-column",
      "summary": "",
      "user": "user123",
      "ideal": "Move the column with ID '12345' to a new position."
    },
    {
      "path": "/projects/67890",
      "method": "GET",
      "operationId": "projects-classic/get",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve details of the project with ID '67890'."
    },
    {
      "path": "/projects/67890",
      "method": "PATCH",
      "operationId": "projects-classic/update",
      "summary": "",
      "user": "user123",
      "ideal": "Update the project with ID '67890'."
    },
    {
      "path": "/projects/67890",
      "method": "DELETE",
      "operationId": "projects-classic/delete",
      "summary": "",
      "user": "user123",
      "ideal": "Delete the project with ID '67890'."
    },
    {
      "path": "/projects/67890/collaborators",
      "method": "GET",
      "operationId": "projects-classic/list-collaborators",
      "summary": "",
      "user": "user123",
      "ideal": "List all collaborators for the project with ID '67890'."
    },
    {
      "path": "/projects/67890/collaborators/user456",
      "method": "PUT",
      "operationId": "projects-classic/add-collaborator",
      "summary": "",
      "user": "user123",
      "ideal": "Add 'user456' as a collaborator to the project with ID '67890'."
    },
    {
      "path": "/projects/67890/collaborators/user456",
      "method": "DELETE",
      "operationId": "projects-classic/remove-collaborator",
      "summary": "",
      "user": "user123",
      "ideal": "Remove 'user456' from the collaborators of the project with ID '67890'."
    },
    {
      "path": "/projects/67890/collaborators/user456/permission",
      "method": "GET",
      "operationId": "projects-classic/get-permission-for-user",
      "summary": "",
      "user": "user123",
      "ideal": "Get permission level for 'user456' on the project with ID '67890'."
    },
    {
      "path": "/projects/67890/columns",
      "method": "GET",
      "operationId": "projects-classic/list-columns",
      "summary": "",
      "user": "user123",
      "ideal": "List all columns for the project with ID '67890'."
    },
    {
      "path": "/projects/67890/columns",
      "method": "POST",
      "operationId": "projects-classic/create-column",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new column for the project with ID '67890'."
    },
    {
      "path": "/repos/my-user/my-repo/projects",
      "method": "GET",
      "operationId": "projects-classic/list-for-repo",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of projects for the repository 'my-repo'."
    },
    {
      "path": "/repos/my-user/my-repo/projects",
      "method": "POST",
      "operationId": "projects-classic/create-for-repo",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new project for the repository 'my-repo'."
    },
    {
      "path": "/user/projects",
      "method": "POST",
      "operationId": "projects-classic/create-for-authenticated-user",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new project for the authenticated user."
    },
    {
      "path": "/users/user456/projects",
      "method": "GET",
      "operationId": "projects-classic/list-for-user",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of projects for the user 'user456'."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls",
      "method": "GET",
      "operationId": "pulls/list",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve a list of pull requests for the specified repository."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls",
      "method": "POST",
      "operationId": "pulls/create",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new pull request for the specified repository."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/comments",
      "method": "GET",
      "operationId": "pulls/list-review-comments-for-repo",
      "summary": "",
      "user": "octocat",
      "ideal": "List all review comments for the specified repository."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/comments/1",
      "method": "GET",
      "operationId": "pulls/get-review-comment",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve a specific review comment by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/comments/1",
      "method": "PATCH",
      "operationId": "pulls/update-review-comment",
      "summary": "",
      "user": "octocat",
      "ideal": "Update a specific review comment by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/comments/1",
      "method": "DELETE",
      "operationId": "pulls/delete-review-comment",
      "summary": "",
      "user": "octocat",
      "ideal": "Delete a specific review comment by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42",
      "method": "GET",
      "operationId": "pulls/get",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve details about a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42",
      "method": "PATCH",
      "operationId": "pulls/update",
      "summary": "",
      "user": "octocat",
      "ideal": "Update a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/comments",
      "method": "GET",
      "operationId": "pulls/list-review-comments",
      "summary": "",
      "user": "octocat",
      "ideal": "List all review comments for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/comments",
      "method": "POST",
      "operationId": "pulls/create-review-comment",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new review comment for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/comments/1/replies",
      "method": "POST",
      "operationId": "pulls/create-reply-for-review-comment",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a reply to a specific review comment."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/commits",
      "method": "GET",
      "operationId": "pulls/list-commits",
      "summary": "",
      "user": "octocat",
      "ideal": "List all commits associated with a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/files",
      "method": "GET",
      "operationId": "pulls/list-files",
      "summary": "",
      "user": "octocat",
      "ideal": "List all files changed in a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/merge",
      "method": "GET",
      "operationId": "pulls/check-if-merged",
      "summary": "",
      "user": "octocat",
      "ideal": "Check if a specific pull request has been merged."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/merge",
      "method": "PUT",
      "operationId": "pulls/merge",
      "summary": "",
      "user": "octocat",
      "ideal": "Merge a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/requested_reviewers",
      "method": "GET",
      "operationId": "pulls/list-requested-reviewers",
      "summary": "",
      "user": "octocat",
      "ideal": "List all reviewers requested for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/requested_reviewers",
      "method": "POST",
      "operationId": "pulls/request-reviewers",
      "summary": "",
      "user": "octocat",
      "ideal": "Request reviewers for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/requested_reviewers",
      "method": "DELETE",
      "operationId": "pulls/remove-requested-reviewers",
      "summary": "",
      "user": "octocat",
      "ideal": "Remove requested reviewers from a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews",
      "method": "GET",
      "operationId": "pulls/list-reviews",
      "summary": "",
      "user": "octocat",
      "ideal": "List all reviews for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews",
      "method": "POST",
      "operationId": "pulls/create-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Create a new review for a specific pull request."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1",
      "method": "GET",
      "operationId": "pulls/get-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Retrieve a specific review by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1",
      "method": "PUT",
      "operationId": "pulls/update-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Update a specific review by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1",
      "method": "DELETE",
      "operationId": "pulls/delete-pending-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Delete a pending review by its ID."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1/comments",
      "method": "GET",
      "operationId": "pulls/list-comments-for-review",
      "summary": "",
      "user": "octocat",
      "ideal": "List all comments for a specific review."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1/dismissals",
      "method": "PUT",
      "operationId": "pulls/dismiss-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Dismiss a specific review."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/reviews/1/events",
      "method": "POST",
      "operationId": "pulls/submit-review",
      "summary": "",
      "user": "octocat",
      "ideal": "Submit a specific review."
    },
    {
      "path": "/repos/octocat/Hello-World/pulls/42/update-branch",
      "method": "PUT",
      "operationId": "pulls/update-branch",
      "summary": "",
      "user": "octocat",
      "ideal": "Update the branch for a specific pull request."
    },
    {
      "path": "/rate_limit",
      "method": "GET",
      "operationId": "getRateLimit",
      "summary": "",
      "user": "user123",
      "ideal": "Returns the current rate limit status for the authenticated user."
    },
    {
      "path": "/orgs/my-org/teams/my-team/discussions/1/comments/2/reactions",
      "method": "GET",
      "operationId": "reactions/list-for-team-discussion-comment-in-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve all reactions for a specific comment in a team discussion within an organization."
    },
    {
      "path": "/orgs/my-org/teams/my-team/discussions/1/comments/2/reactions",
      "method": "POST",
      "operationId": "reactions/create-for-team-discussion-comment-in-org",
      "summary": "",
      "user": "user123",
      "ideal": "Add a new reaction to a specific comment in a team discussion within an organization."
    },
    {
      "path": "/orgs/my-org/teams/my-team/discussions/1/comments/2/reactions/123",
      "method": "DELETE",
      "operationId": "reactions/delete-for-team-discussion-comment",
      "summary": "",
      "user": "user123",
      "ideal": "Remove a specific reaction from a comment in a team discussion within an organization."
    },
    {
      "path": "/repos/my-user/my-repo/issues/1/reactions",
      "method": "GET",
      "operationId": "reactions/list-for-issue",
      "summary": "",
      "user": "user456",
      "ideal": "Get all reactions for a specific issue in a repository."
    },
    {
      "path": "/repos/my-user/my-repo/issues/1/reactions",
      "method": "POST",
      "operationId": "reactions/create-for-issue",
      "summary": "",
      "user": "user456",
      "ideal": "Create a new reaction for a specific issue in a repository."
    },
    {
      "path": "/repos/my-user/my-repo/issues/1/reactions/456",
      "method": "DELETE",
      "operationId": "reactions/delete-for-issue",
      "summary": "",
      "user": "user456",
      "ideal": "Delete a specific reaction from an issue in a repository."
    },
    {
      "path": "/repos/my-user/my-repo/releases/1/reactions",
      "method": "GET",
      "operationId": "reactions/list-for-release",
      "summary": "",
      "user": "user789",
      "ideal": "List all reactions for a specific release in a repository."
    },
    {
      "path": "/repos/my-user/my-repo/releases/1/reactions",
      "method": "POST",
      "operationId": "reactions/create-for-release",
      "summary": "",
      "user": "user789",
      "ideal": "Add a new reaction to a specific release in a repository."
    },
    {
      "path": "/repos/my-user/my-repo/releases/1/reactions/789",
      "method": "DELETE",
      "operationId": "reactions/delete-for-release",
      "summary": "",
      "user": "user789",
      "ideal": "Remove a specific reaction from a release in a repository."
    },
    {
      "path": "/teams/1/discussions/1/comments/1/reactions",
      "method": "GET",
      "operationId": "reactions/list-for-team-discussion-comment-legacy",
      "summary": "",
      "user": "user101",
      "ideal": "Retrieve all reactions for a specific comment in a legacy team discussion."
    },
    {
      "path": "/teams/1/discussions/1/comments/1/reactions",
      "method": "POST",
      "operationId": "reactions/create-for-team-discussion-comment-legacy",
      "summary": "",
      "user": "user101",
      "ideal": "Add a new reaction to a specific comment in a legacy team discussion."
    },
    {
      "path": "/orgs/example-org/repos",
      "method": "GET",
      "operationId": "repos/list-for-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of repositories for the organization 'example-org'."
    },
    {
      "path": "/orgs/example-org/repos",
      "method": "POST",
      "operationId": "repos/create-in-org",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new repository in the organization 'example-org' with specified parameters."
    },
    {
      "path": "/repos/example-owner/example-repo",
      "method": "GET",
      "operationId": "repos/get",
      "summary": "",
      "user": "user123",
      "ideal": "Fetch details of the repository 'example-repo' owned by 'example-owner'."
    },
    {
      "path": "/repos/example-owner/example-repo/branches",
      "method": "GET",
      "operationId": "repos/list-branches",
      "summary": "",
      "user": "user123",
      "ideal": "List all branches in the repository 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/releases",
      "method": "GET",
      "operationId": "repos/list-releases",
      "summary": "",
      "user": "user123",
      "ideal": "Get a list of all releases for the repository 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/commits",
      "method": "GET",
      "operationId": "repos/list-commits",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of commits for the repository 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/branches/main/protection",
      "method": "GET",
      "operationId": "repos/get-branch-protection",
      "summary": "",
      "user": "user123",
      "ideal": "Get the branch protection settings for the 'main' branch of 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/hooks",
      "method": "POST",
      "operationId": "repos/create-webhook",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new webhook for the repository 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/pages",
      "method": "GET",
      "operationId": "repos/get-pages",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve information about the GitHub Pages site for 'example-repo'."
    },
    {
      "path": "/repos/example-owner/example-repo/keys",
      "method": "POST",
      "operationId": "repos/create-deploy-key",
      "summary": "",
      "user": "user123",
      "ideal": "Add a new deploy key to the repository 'example-repo'."
    },
    {
      "path": "/search/code",
      "method": "GET",
      "operationId": "search/code",
      "summary": "",
      "user": "developer123",
      "ideal": "Search for code snippets across GitHub repositories."
    },
    {
      "path": "/search/commits",
      "method": "GET",
      "operationId": "search/commits",
      "summary": "",
      "user": "codeHistorian",
      "ideal": "Retrieve commit history based on specific search criteria."
    },
    {
      "path": "/search/issues",
      "method": "GET",
      "operationId": "search/issues-and-pull-requests",
      "summary": "",
      "user": "issueTracker",
      "ideal": "Find issues and pull requests related to a specific topic or repository."
    },
    {
      "path": "/search/labels",
      "method": "GET",
      "operationId": "search/labels",
      "summary": "",
      "user": "labelMaster",
      "ideal": "Search for labels used in GitHub repositories."
    },
    {
      "path": "/search/repositories",
      "method": "GET",
      "operationId": "search/repos",
      "summary": "",
      "user": "repoExplorer",
      "ideal": "Search for repositories based on keywords or topics."
    },
    {
      "path": "/search/topics",
      "method": "GET",
      "operationId": "search/topics",
      "summary": "",
      "user": "topicSeeker",
      "ideal": "Discover topics that are trending or relevant on GitHub."
    },
    {
      "path": "/search/users",
      "method": "GET",
      "operationId": "search/users",
      "summary": "",
      "user": "userFinder",
      "ideal": "Search for GitHub users by username or other criteria."
    },
    {
      "path": "/enterprises/{enterprise}/secret-scanning/alerts",
      "method": "GET",
      "operationId": "secret-scanning/list-alerts-for-enterprise",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve all secret scanning alerts for the specified enterprise."
    },
    {
      "path": "/orgs/{org}/secret-scanning/alerts",
      "method": "GET",
      "operationId": "secret-scanning/list-alerts-for-org",
      "summary": "",
      "user": "org_member",
      "ideal": "Fetch secret scanning alerts for the specified organization."
    },
    {
      "path": "/orgs/{org}/secret-scanning/pattern-configurations",
      "method": "GET",
      "operationId": "secret-scanning/list-org-pattern-configs",
      "summary": "",
      "user": "org_admin",
      "ideal": "List all pattern configurations for secret scanning in the organization."
    },
    {
      "path": "/orgs/{org}/secret-scanning/pattern-configurations",
      "method": "PATCH",
      "operationId": "secret-scanning/update-org-pattern-configs",
      "summary": "",
      "user": "org_admin",
      "ideal": "Update the pattern configurations for secret scanning in the organization."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/alerts",
      "method": "GET",
      "operationId": "secret-scanning/list-alerts-for-repo",
      "summary": "",
      "user": "repo_contributor",
      "ideal": "Get a list of secret scanning alerts for the specified repository."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
      "method": "GET",
      "operationId": "secret-scanning/get-alert",
      "summary": "",
      "user": "repo_contributor",
      "ideal": "Retrieve details of a specific secret scanning alert by alert number."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
      "method": "PATCH",
      "operationId": "secret-scanning/update-alert",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Update the status or details of a specific secret scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
      "method": "GET",
      "operationId": "secret-scanning/list-locations-for-alert",
      "summary": "",
      "user": "repo_contributor",
      "ideal": "List all locations associated with a specific secret scanning alert."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/push-protection-bypasses",
      "method": "POST",
      "operationId": "secret-scanning/create-push-protection-bypass",
      "summary": "",
      "user": "repo_admin",
      "ideal": "Create a bypass for push protection related to secret scanning."
    },
    {
      "path": "/repos/{owner}/{repo}/secret-scanning/scan-history",
      "method": "GET",
      "operationId": "secret-scanning/get-scan-history",
      "summary": "",
      "user": "repo_contributor",
      "ideal": "Retrieve the scan history for secret scanning in the specified repository."
    },
    {
      "path": "/advisories",
      "method": "GET",
      "operationId": "security-advisories/list-global-advisories",
      "summary": "",
      "user": "As a security analyst, I want to retrieve a list of all global security advisories to stay informed about vulnerabilities affecting various projects.",
      "ideal": "The API should return a paginated list of security advisories with relevant details such as title, description, and severity."
    },
    {
      "path": "/advisories/{ghsa_id}",
      "method": "GET",
      "operationId": "security-advisories/get-global-advisory",
      "summary": "",
      "user": "As a developer, I need to get detailed information about a specific global security advisory using its GHSA ID to assess its impact on my project.",
      "ideal": "The API should return comprehensive details of the advisory, including affected versions and recommended actions."
    },
    {
      "path": "/orgs/{org}/security-advisories",
      "method": "GET",
      "operationId": "security-advisories/list-org-repository-advisories",
      "summary": "",
      "user": "As an organization admin, I want to list all security advisories for my organization's repositories to manage vulnerabilities effectively.",
      "ideal": "The API should provide a list of advisories specific to the organization, including repository names and advisory statuses."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories",
      "method": "GET",
      "operationId": "security-advisories/list-repository-advisories",
      "summary": "",
      "user": "As a repository maintainer, I want to view all security advisories related to my repository to ensure it is secure.",
      "ideal": "The API should return a list of advisories for the specified repository, including details like severity and publication date."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories",
      "method": "POST",
      "operationId": "security-advisories/create-repository-advisory",
      "summary": "",
      "user": "As a security officer, I need to create a new security advisory for my repository to inform users about a critical vulnerability.",
      "ideal": "The API should accept advisory details and return the created advisory with a unique identifier."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories/reports",
      "method": "POST",
      "operationId": "security-advisories/create-private-vulnerability-report",
      "summary": "",
      "user": "As a security researcher, I want to submit a private vulnerability report for a repository to notify the maintainers without public disclosure.",
      "ideal": "The API should accept the report details and confirm successful submission while keeping the report confidential."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories/{ghsa_id}",
      "method": "GET",
      "operationId": "security-advisories/get-repository-advisory",
      "summary": "",
      "user": "As a developer, I want to retrieve a specific security advisory for my repository using its GHSA ID to understand its implications.",
      "ideal": "The API should return detailed information about the advisory, including mitigation steps and affected versions."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories/{ghsa_id}",
      "method": "PATCH",
      "operationId": "security-advisories/update-repository-advisory",
      "summary": "",
      "user": "As a repository maintainer, I need to update an existing security advisory to reflect new findings or changes in mitigation strategies.",
      "ideal": "The API should accept updated advisory details and return the modified advisory with confirmation of the update."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve",
      "method": "POST",
      "operationId": "security-advisories/create-repository-advisory-cve-request",
      "summary": "",
      "user": "As a security analyst, I want to request a CVE ID for a specific advisory to ensure it is recognized in the broader security community.",
      "ideal": "The API should process the request and return the assigned CVE ID along with the advisory details."
    },
    {
      "path": "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks",
      "method": "POST",
      "operationId": "security-advisories/create-fork",
      "summary": "",
      "user": "As a developer, I want to create a fork of a repository's security advisory to propose changes or improvements based on my findings.",
      "ideal": "The API should create a fork of the advisory and return the new advisory details along with a reference to the original."
    },
    {
      "path": "/orgs/example-org/teams",
      "method": "GET",
      "operationId": "teams/list",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of teams within the specified organization."
    },
    {
      "path": "/orgs/example-org/teams/example-team",
      "method": "GET",
      "operationId": "teams/get-by-name",
      "summary": "",
      "user": "user456",
      "ideal": "Get details of a specific team by its slug within the organization."
    },
    {
      "path": "/orgs/example-org/teams/example-team/members",
      "method": "GET",
      "operationId": "teams/list-members-in-org",
      "summary": "",
      "user": "user789",
      "ideal": "List all members of the specified team in the organization."
    },
    {
      "path": "/orgs/example-org/teams/example-team/memberships/user123",
      "method": "GET",
      "operationId": "teams/get-membership-for-user-in-org",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the membership status of a specific user in the team."
    },
    {
      "path": "/orgs/example-org/teams/example-team/projects",
      "method": "GET",
      "operationId": "teams/list-projects-in-org",
      "summary": "",
      "user": "user234",
      "ideal": "Get a list of projects associated with the specified team."
    },
    {
      "path": "/orgs/example-org/teams/example-team/repos",
      "method": "GET",
      "operationId": "teams/list-repos-in-org",
      "summary": "",
      "user": "user345",
      "ideal": "List all repositories that the specified team has access to."
    },
    {
      "path": "/orgs/example-org/teams/example-team/discussions",
      "method": "GET",
      "operationId": "teams/list-discussions-in-org",
      "summary": "",
      "user": "user456",
      "ideal": "Retrieve a list of discussions for the specified team."
    },
    {
      "path": "/orgs/example-org/teams/example-team/invitations",
      "method": "GET",
      "operationId": "teams/list-pending-invitations-in-org",
      "summary": "",
      "user": "user567",
      "ideal": "Get a list of pending invitations for the specified team."
    },
    {
      "path": "/orgs/example-org/teams/example-team/memberships/user456",
      "method": "DELETE",
      "operationId": "teams/remove-membership-for-user-in-org",
      "summary": "",
      "user": "user456",
      "ideal": "Remove a user's membership from the specified team."
    },
    {
      "path": "/orgs/example-org/teams/example-team/discussions/1/comments",
      "method": "GET",
      "operationId": "teams/list-discussion-comments-in-org",
      "summary": "",
      "user": "user678",
      "ideal": "Retrieve comments for a specific discussion in the team."
    },
    {
      "path": "/user",
      "method": "GET",
      "operationId": "users/get-authenticated",
      "summary": "",
      "user": "john_doe",
      "ideal": "Retrieve the authenticated user's profile information."
    },
    {
      "path": "/user",
      "method": "PATCH",
      "operationId": "users/update-authenticated",
      "summary": "",
      "user": "john_doe",
      "ideal": "Update the authenticated user's profile information."
    },
    {
      "path": "/user/blocks",
      "method": "GET",
      "operationId": "users/list-blocked-by-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all users blocked by the authenticated user."
    },
    {
      "path": "/user/blocks/jane_smith",
      "method": "PUT",
      "operationId": "users/block",
      "summary": "",
      "user": "john_doe",
      "ideal": "Block the user 'jane_smith'."
    },
    {
      "path": "/user/blocks/jane_smith",
      "method": "DELETE",
      "operationId": "users/unblock",
      "summary": "",
      "user": "john_doe",
      "ideal": "Unblock the user 'jane_smith'."
    },
    {
      "path": "/user/emails",
      "method": "GET",
      "operationId": "users/list-emails-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all email addresses associated with the authenticated user."
    },
    {
      "path": "/user/emails",
      "method": "POST",
      "operationId": "users/add-email-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Add a new email address for the authenticated user."
    },
    {
      "path": "/user/emails",
      "method": "DELETE",
      "operationId": "users/delete-email-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Delete an email address from the authenticated user's account."
    },
    {
      "path": "/user/followers",
      "method": "GET",
      "operationId": "users/list-followers-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all followers of the authenticated user."
    },
    {
      "path": "/user/following",
      "method": "GET",
      "operationId": "users/list-followed-by-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all users followed by the authenticated user."
    },
    {
      "path": "/user/following/jane_smith",
      "method": "PUT",
      "operationId": "users/follow",
      "summary": "",
      "user": "john_doe",
      "ideal": "Follow the user 'jane_smith'."
    },
    {
      "path": "/user/following/jane_smith",
      "method": "DELETE",
      "operationId": "users/unfollow",
      "summary": "",
      "user": "john_doe",
      "ideal": "Unfollow the user 'jane_smith'."
    },
    {
      "path": "/user/gpg_keys",
      "method": "GET",
      "operationId": "users/list-gpg-keys-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all GPG keys associated with the authenticated user."
    },
    {
      "path": "/user/gpg_keys",
      "method": "POST",
      "operationId": "users/create-gpg-key-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Create a new GPG key for the authenticated user."
    },
    {
      "path": "/user/gpg_keys/12345",
      "method": "DELETE",
      "operationId": "users/delete-gpg-key-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Delete the GPG key with ID 12345 from the authenticated user's account."
    },
    {
      "path": "/user/keys",
      "method": "GET",
      "operationId": "users/list-public-ssh-keys-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all public SSH keys associated with the authenticated user."
    },
    {
      "path": "/user/keys",
      "method": "POST",
      "operationId": "users/create-public-ssh-key-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Create a new public SSH key for the authenticated user."
    },
    {
      "path": "/user/keys/67890",
      "method": "DELETE",
      "operationId": "users/delete-public-ssh-key-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Delete the public SSH key with ID 67890 from the authenticated user's account."
    },
    {
      "path": "/user/social_accounts",
      "method": "GET",
      "operationId": "users/list-social-accounts-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "List all social accounts linked to the authenticated user's account."
    },
    {
      "path": "/user/social_accounts",
      "method": "POST",
      "operationId": "users/add-social-account-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Add a new social account to the authenticated user's profile."
    },
    {
      "path": "/user/social_accounts",
      "method": "DELETE",
      "operationId": "users/delete-social-account-for-authenticated-user",
      "summary": "",
      "user": "john_doe",
      "ideal": "Delete a social account from the authenticated user's profile."
    }
  ]
}