{
  "gold": [
    {
      "path": "/v1/gists",
      "method": "GET",
      "operationId": "gists/list",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all gists for the authenticated user."
    },
    {
      "path": "/v1/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
      "method": "GET",
      "operationId": "actions/list-workflow-run-artifacts",
      "summary": "",
      "user": "user456",
      "ideal": "Fetch the artifacts for a specific workflow run in the repository."
    },
    {
      "path": "/v1/orgs/{org}/teams",
      "method": "GET",
      "operationId": "teams/list",
      "summary": "",
      "user": "user789",
      "ideal": "List all teams within the specified organization."
    },
    {
      "path": "/v1/orgs/{org}/members/{username}/codespaces",
      "method": "GET",
      "operationId": "codespaces/get-codespaces-for-user-in-org",
      "summary": "",
      "user": "user101",
      "ideal": "Get a list of codespaces for a specific user in the organization."
    },
    {
      "path": "/v1/repos/{owner}/{repo}/branches/{branch}/protection",
      "method": "DELETE",
      "operationId": "repos/delete-branch-protection",
      "summary": "",
      "user": "user202",
      "ideal": "Remove branch protection rules from the specified branch."
    },
    {
      "path": "/v1/orgs/{org}/hooks",
      "method": "POST",
      "operationId": "orgs/create-webhook",
      "summary": "",
      "user": "user303",
      "ideal": "Create a new webhook for the specified organization."
    },
    {
      "path": "/v1/repos/{owner}/{repo}/actions/secrets",
      "method": "GET",
      "operationId": "actions/list-repo-secrets",
      "summary": "",
      "user": "user404",
      "ideal": "List all secrets for the specified repository."
    },
    {
      "path": "/v1/orgs/{org}/packages/{package_type}/{package_name}/restore",
      "method": "POST",
      "operationId": "packages/restore-package-for-org",
      "summary": "",
      "user": "user505",
      "ideal": "Restore a deleted package for the specified organization."
    },
    {
      "path": "/v1/orgs/{org}/members/{username}/copilot",
      "method": "GET",
      "operationId": "copilot/get-copilot-seat-details-for-user",
      "summary": "",
      "user": "user606",
      "ideal": "Retrieve Copilot seat details for a specific user in the organization."
    },
    {
      "path": "/v1/repos/{owner}/{repo}/actions/permissions",
      "method": "PUT",
      "operationId": "actions/set-github-actions-permissions-repository",
      "summary": "",
      "user": "user707",
      "ideal": "Set GitHub Actions permissions for the specified repository."
    },
    {
      "path": "/advisories",
      "method": "GET",
      "operationId": "security-advisories/list-global-advisories",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a list of all global security advisories."
    },
    {
      "path": "/app-manifests/{code}/conversions",
      "method": "POST",
      "operationId": "apps/create-from-manifest",
      "summary": "",
      "user": "user456",
      "ideal": "Create an app from the provided manifest code."
    },
    {
      "path": "/app/hook/deliveries",
      "method": "GET",
      "operationId": "apps/list-webhook-deliveries",
      "summary": "",
      "user": "user789",
      "ideal": "List all webhook deliveries for the authenticated app."
    },
    {
      "path": "/classrooms/{classroom_id}/assignments",
      "method": "GET",
      "operationId": "classroom/list-assignments-for-a-classroom",
      "summary": "",
      "user": "teacher001",
      "ideal": "Get all assignments for the specified classroom."
    },
    {
      "path": "/repos/{owner}/{repo}/actions/runs",
      "method": "GET",
      "operationId": "actions/list-workflow-runs-for-repo",
      "summary": "",
      "user": "dev001",
      "ideal": "List all workflow runs for the specified repository."
    },
    {
      "path": "/orgs/{org}/teams/{team_slug}/members",
      "method": "GET",
      "operationId": "teams/list-members-in-org",
      "summary": "",
      "user": "orgAdmin",
      "ideal": "Retrieve a list of all members in the specified team."
    },
    {
      "path": "/gists/{gist_id}/comments",
      "method": "GET",
      "operationId": "gists/list-comments",
      "summary": "",
      "user": "userCommenter",
      "ideal": "Fetch all comments for the specified gist."
    },
    {
      "path": "/orgs/{org}/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-org",
      "summary": "",
      "user": "securityLead",
      "ideal": "Get a list of all Dependabot alerts for the organization."
    },
    {
      "path": "/repos/{owner}/{repo}/branches/{branch}/protection",
      "method": "GET",
      "operationId": "repos/get-branch-protection",
      "summary": "",
      "user": "repoAdmin",
      "ideal": "Retrieve branch protection settings for the specified branch."
    },
    {
      "path": "/orgs/{org}/projects",
      "method": "GET",
      "operationId": "projects-classic/list-for-org",
      "summary": "",
      "user": "projectManager",
      "ideal": "List all projects associated with the organization."
    },
    {
      "path": "/advisories/{ghsa_id}",
      "method": "GET",
      "operationId": "security-advisories/get-global-advisory",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve security advisory details for a specific GHSA ID."
    },
    {
      "path": "/app/hook/config",
      "method": "GET",
      "operationId": "apps/get-webhook-config-for-app",
      "summary": "",
      "user": "user456",
      "ideal": "Fetch the current configuration of the webhook for the app."
    },
    {
      "path": "/app/installations",
      "method": "GET",
      "operationId": "apps/list-installations",
      "summary": "",
      "user": "user789",
      "ideal": "List all installations of the app across different accounts."
    },
    {
      "path": "/orgs/{org}/actions/permissions",
      "method": "GET",
      "operationId": "actions/get-github-actions-permissions-organization",
      "summary": "",
      "user": "orgAdmin",
      "ideal": "Get the GitHub Actions permissions for the organization."
    },
    {
      "path": "/repos/{owner}/{repo}/actions/runs/{run_id}",
      "method": "GET",
      "operationId": "actions/get-workflow-run",
      "summary": "",
      "user": "devUser",
      "ideal": "Retrieve details about a specific workflow run."
    },
    {
      "path": "/repos/{owner}/{repo}/branches/{branch}/protection",
      "method": "PUT",
      "operationId": "repos/update-branch-protection",
      "summary": "",
      "user": "repoAdmin",
      "ideal": "Update the branch protection settings for a specified branch."
    },
    {
      "path": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
      "method": "GET",
      "operationId": "teams/get-membership-for-user-in-org",
      "summary": "",
      "user": "teamLead",
      "ideal": "Check the membership status of a user in a specific team."
    },
    {
      "path": "/gists/public",
      "method": "GET",
      "operationId": "gists/list-public",
      "summary": "",
      "user": "publicUser",
      "ideal": "List all public gists available on GitHub."
    },
    {
      "path": "/orgs/{org}/projects",
      "method": "POST",
      "operationId": "projects-classic/create-for-org",
      "summary": "",
      "user": "projectManager",
      "ideal": "Create a new project for the organization."
    },
    {
      "path": "/repos/{owner}/{repo}/check-runs",
      "method": "POST",
      "operationId": "checks/create",
      "summary": "",
      "user": "ciUser",
      "ideal": "Create a new check run for the repository."
    }
  ]
}