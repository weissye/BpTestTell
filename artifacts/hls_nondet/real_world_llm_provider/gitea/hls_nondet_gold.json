{
  "stories": [
    {
      "name": "addCurrentUserRepo",
      "entities": {
        "active": [
          "CurrentUserRepo"
        ],
        "lifecycle": [
          "deleteCurrentUserRepo"
        ],
        "passive": [
          "NewCurrentUserRepo"
        ]
      },
      "checks": {
        "preconditions": [
          "verifyCurrentUserRepoExists"
        ],
        "postconditions": [
          "verifyNewCurrentUserRepoExists"
        ],
        "guards": [
          "checkCurrentUserRepoDeletion"
        ]
      },
      "steps": [
        "addCurrentUserRepo"
      ],
      "notes": [
        "Ensure the CurrentUserRepo is deleted before adding a new one."
      ]
    },
    {
      "name": "deletePackage",
      "entities": {
        "active": [
          "Package"
        ],
        "lifecycle": [
          "addPackage"
        ],
        "passive": [
          "verifyPackageNotExists"
        ]
      },
      "checks": {
        "preconditions": [
          "packageExists"
        ],
        "postconditions": [
          "verifyPackageNotExists"
        ],
        "guards": [
          "validatePackageDeletion"
        ]
      },
      "steps": [
        "deletePackage"
      ],
      "notes": [
        "Ensure the package ID is valid before deletion."
      ]
    },
    {
      "name": "deleteRepoSecret",
      "entities": {
        "active": [
          "RepoSecret"
        ],
        "lifecycle": [
          "addRepoSecret"
        ],
        "passive": [
          "verifyRepoSecretNotExists"
        ]
      },
      "checks": {
        "preconditions": [
          "repoSecretExists"
        ],
        "postconditions": [
          "verifyRepoSecretNotExists"
        ],
        "guards": [
          "addRepoSecret"
        ]
      },
      "steps": [
        "deleteRepoSecret"
      ],
      "notes": [
        "Ensure the RepoSecret is not in use before deletion."
      ]
    },
    {
      "name": "updateRepoSecretWithNewValue",
      "entities": {
        "active": [
          "RepoSecret"
        ],
        "lifecycle": [
          "updateRepoSecret"
        ],
        "passive": [
          "RepoSecretUpdated"
        ]
      },
      "checks": {
        "preconditions": [
          "verifyRepoSecretExists"
        ],
        "postconditions": [
          "verifyRepoSecretUpdated"
        ],
        "guards": [
          "verifyRepoSecretNotUpdated"
        ]
      },
      "steps": [
        "updateRepoSecret"
      ],
      "notes": [
        "Ensure the new value for RepoSecret is valid."
      ]
    },
    {
      "name": "deleteUserSecret",
      "entities": {
        "active": [
          "UserSecret"
        ],
        "lifecycle": [
          "addUserSecret"
        ],
        "passive": [
          "UserSecret"
        ]
      },
      "checks": {
        "preconditions": [
          "verifyUserSecretExists"
        ],
        "postconditions": [
          "verifyUserSecretNotExists"
        ],
        "guards": [
          "validateUserSecretDeletion"
        ]
      },
      "steps": [
        "deleteUserSecret"
      ],
      "notes": [
        "Ensure that the UserSecret is not in use before deletion."
      ]
    },
    {
      "name": "updateUserSecretWithNewId",
      "entities": {
        "active": [
          "UserSecret"
        ],
        "lifecycle": [
          "updateUserSecret"
        ],
        "passive": [
          "UserSecret"
        ]
      },
      "checks": {
        "preconditions": [
          "verifyUserSecretExists"
        ],
        "postconditions": [
          "verifyUserSecretUpdated"
        ],
        "guards": [
          "validateUserSecretId"
        ]
      },
      "steps": [
        "updateUserSecret"
      ],
      "notes": [
        "Ensure the UserSecret ID is valid before updating."
      ]
    },
    {
      "name": "updateUserSettingsWithNewEmail",
      "entities": {
        "active": [
          "UserSettings"
        ],
        "lifecycle": [
          "updateUserSettings"
        ],
        "passive": [
          "User"
        ]
      },
      "checks": {
        "preconditions": [
          "verifyUserSettingsExists"
        ],
        "postconditions": [
          "verifyUserSettingsUpdated"
        ],
        "guards": [
          "verifyUserExists"
        ]
      },
      "steps": [
        "updateUserSettings"
      ],
      "notes": [
        "Ensure the new email format is valid."
      ]
    }
  ]
}