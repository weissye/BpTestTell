{
  "gold": [
    {
      "path": "/v1/{realm}/attack-detection/brute-force/users",
      "method": "DELETE",
      "operationId": "deleteUsers",
      "summary": "",
      "user": "admin",
      "ideal": "Successfully deleted all brute force users."
    },
    {
      "path": "/v1/{realm}/attack-detection/brute-force/users/{userId}",
      "method": "GET",
      "operationId": "getBruteForceUser",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieved details for brute force user with ID {userId}."
    },
    {
      "path": "/v1/{realm}/attack-detection/brute-force/users/{userId}",
      "method": "DELETE",
      "operationId": "deleteBruteForceUser",
      "summary": "",
      "user": "admin",
      "ideal": "Successfully deleted brute force user with ID {userId}."
    },
    {
      "path": "/{realm}/authentication/authenticator-providers",
      "method": "GET",
      "operationId": "getAuthenticatorProviders",
      "summary": "",
      "user": "Admin user requesting a list of available authenticator providers for the specified realm.",
      "ideal": "Returns a list of authenticator providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/client-authenticator-providers",
      "method": "GET",
      "operationId": "getClientAuthenticatorProviders",
      "summary": "",
      "user": "Client application requesting available client authenticator providers for the realm.",
      "ideal": "Returns a list of client authenticator providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/config",
      "method": "POST",
      "operationId": "postAuthenticationConfig",
      "summary": "",
      "user": "Admin user submitting a new authentication configuration for the realm.",
      "ideal": "Creates a new authentication configuration in the specified realm."
    },
    {
      "path": "/{realm}/authentication/config-description/{providerId}",
      "method": "GET",
      "operationId": "getConfigDescription",
      "summary": "",
      "user": "Admin user seeking detailed configuration description for a specific provider.",
      "ideal": "Returns the configuration description for the specified authenticator provider."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "GET",
      "operationId": "getAuthenticationConfig",
      "summary": "",
      "user": "Admin user retrieving a specific authentication configuration by ID.",
      "ideal": "Returns the authentication configuration details for the specified ID."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "PUT",
      "operationId": "putAuthenticationConfig",
      "summary": "",
      "user": "Admin user updating an existing authentication configuration by ID.",
      "ideal": "Updates the authentication configuration for the specified ID."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "DELETE",
      "operationId": "deleteConfig",
      "summary": "",
      "user": "Admin user deleting an authentication configuration by ID.",
      "ideal": "Deletes the authentication configuration for the specified ID."
    },
    {
      "path": "/{realm}/authentication/executions",
      "method": "POST",
      "operationId": "postExecutions",
      "summary": "",
      "user": "Admin user adding a new execution to the authentication flow.",
      "ideal": "Creates a new execution in the authentication flow for the specified realm."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}",
      "method": "GET",
      "operationId": "getExecution",
      "summary": "",
      "user": "Admin user retrieving details of a specific execution by its ID.",
      "ideal": "Returns the details of the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}",
      "method": "DELETE",
      "operationId": "deleteExecution",
      "summary": "",
      "user": "Admin user removing a specific execution from the authentication flow.",
      "ideal": "Deletes the specified execution from the authentication flow."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/config",
      "method": "POST",
      "operationId": "postExecutionConfig",
      "summary": "",
      "user": "Admin user configuring settings for a specific execution.",
      "ideal": "Creates or updates the configuration for the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/config/{id}",
      "method": "GET",
      "operationId": "getExecutionConfig",
      "summary": "",
      "user": "Admin user retrieving configuration details for a specific execution.",
      "ideal": "Returns the configuration details for the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/lower-priority",
      "method": "POST",
      "operationId": "postExecutionLowerPriority",
      "summary": "",
      "user": "Admin user lowering the priority of a specific execution.",
      "ideal": "Lowers the priority of the specified execution in the authentication flow."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/raise-priority",
      "method": "POST",
      "operationId": "postExecutionRaisePriority",
      "summary": "",
      "user": "Admin user raising the priority of a specific execution.",
      "ideal": "Raises the priority of the specified execution in the authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows",
      "method": "GET",
      "operationId": "getFlows",
      "summary": "",
      "user": "Admin user requesting a list of authentication flows for the realm.",
      "ideal": "Returns a list of authentication flows configured in the specified realm."
    },
    {
      "path": "/{realm}/authentication/flows",
      "method": "POST",
      "operationId": "postFlows",
      "summary": "",
      "user": "Admin user creating a new authentication flow.",
      "ideal": "Creates a new authentication flow in the specified realm."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/copy",
      "method": "POST",
      "operationId": "postCopy",
      "summary": "",
      "user": "Admin user copying an existing authentication flow.",
      "ideal": "Copies the specified authentication flow to create a new one."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions",
      "method": "GET",
      "operationId": "getExecutions",
      "summary": "",
      "user": "Admin user retrieving executions for a specific authentication flow.",
      "ideal": "Returns the list of executions for the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions",
      "method": "PUT",
      "operationId": "putExecutions",
      "summary": "",
      "user": "Admin user updating executions for a specific authentication flow.",
      "ideal": "Updates the executions in the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions/execution",
      "method": "POST",
      "operationId": "postExecution",
      "summary": "",
      "user": "Admin user adding a new execution to a specific authentication flow.",
      "ideal": "Creates a new execution in the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions/flow",
      "method": "POST",
      "operationId": "postFlow",
      "summary": "",
      "user": "Admin user adding a new flow to a specific authentication flow.",
      "ideal": "Creates a new flow in the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "GET",
      "operationId": "getFlow",
      "summary": "",
      "user": "Admin user retrieving details of a specific authentication flow by ID.",
      "ideal": "Returns the details of the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "PUT",
      "operationId": "putFlow",
      "summary": "",
      "user": "Admin user updating an existing authentication flow by ID.",
      "ideal": "Updates the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "DELETE",
      "operationId": "deleteFlow",
      "summary": "",
      "user": "Admin user deleting a specific authentication flow by ID.",
      "ideal": "Deletes the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/form-action-providers",
      "method": "GET",
      "operationId": "getFormActionProviders",
      "summary": "",
      "user": "Admin user requesting a list of form action providers for the realm.",
      "ideal": "Returns a list of form action providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/form-providers",
      "method": "GET",
      "operationId": "getFormProviders",
      "summary": "",
      "user": "Admin user requesting a list of form providers for the realm.",
      "ideal": "Returns a list of form providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/per-client-config-description",
      "method": "GET",
      "operationId": "getPerClientConfigDescription",
      "summary": "",
      "user": "Admin user seeking configuration descriptions specific to client applications.",
      "ideal": "Returns the per-client configuration description for the realm."
    },
    {
      "path": "/{realm}/authentication/register-required-action",
      "method": "POST",
      "operationId": "postRegisterRequiredAction",
      "summary": "",
      "user": "Admin user registering a new required action for authentication.",
      "ideal": "Registers a new required action in the specified realm."
    },
    {
      "path": "/{realm}/authentication/required-actions",
      "method": "GET",
      "operationId": "getRequiredActions",
      "summary": "",
      "user": "Admin user requesting a list of required actions for the realm.",
      "ideal": "Returns a list of required actions configured in the specified realm."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "GET",
      "operationId": "getRequiredAction",
      "summary": "",
      "user": "Admin user retrieving details of a specific required action by alias.",
      "ideal": "Returns the details of the specified required action."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "PUT",
      "operationId": "putRequiredAction",
      "summary": "",
      "user": "Admin user updating an existing required action by alias.",
      "ideal": "Updates the specified required action."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "DELETE",
      "operationId": "deleteRequiredAction",
      "summary": "",
      "user": "Admin user deleting a specific required action by alias.",
      "ideal": "Deletes the specified required action."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}/lower-priority",
      "method": "POST",
      "operationId": "postRequiredActionLowerPriority",
      "summary": "",
      "user": "Admin user lowering the priority of a specific required action.",
      "ideal": "Lowers the priority of the specified required action."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}/raise-priority",
      "method": "POST",
      "operationId": "postRequiredActionRaisePriority",
      "summary": "",
      "user": "Admin user raising the priority of a specific required action.",
      "ideal": "Raises the priority of the specified required action."
    },
    {
      "path": "/{realm}/authentication/unregistered-required-actions",
      "method": "GET",
      "operationId": "getUnregisteredRequiredActions",
      "summary": "",
      "user": "Admin user requesting a list of unregistered required actions.",
      "ideal": "Returns a list of unregistered required actions available for the realm."
    },
    {
      "path": "/myrealm/clients/123/certificates/public",
      "method": "GET",
      "operationId": "getCertificate",
      "summary": "",
      "user": "Admin user requesting the public certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Returns the public certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/download",
      "method": "POST",
      "operationId": "postDownload",
      "summary": "",
      "user": "Admin user attempting to download the private certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Successfully downloads the private certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/generate",
      "method": "POST",
      "operationId": "postGenerate",
      "summary": "",
      "user": "Admin user generating a new private certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Generates a new private certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/generate-and-download",
      "method": "POST",
      "operationId": "postGenerateAndDownload",
      "summary": "",
      "user": "Admin user generating and downloading a new private certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Generates and immediately downloads the new private certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/upload",
      "method": "POST",
      "operationId": "postUpload",
      "summary": "",
      "user": "Admin user uploading a new private certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Successfully uploads the new private certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/upload-certificate",
      "method": "POST",
      "operationId": "postUploadCertificate",
      "summary": "",
      "user": "Admin user uploading a specific private certificate for client ID 123 in the realm 'myrealm'.",
      "ideal": "Successfully uploads the specified private certificate for the client."
    },
    {
      "path": "/myrealm/clients-initial-access",
      "method": "GET",
      "operationId": "getClientsInitialAccess",
      "summary": "",
      "user": "Admin user requesting initial access tokens for clients in the 'myrealm' realm.",
      "ideal": "Returns a list of initial access tokens for clients in the specified realm."
    },
    {
      "path": "/myrealm/clients-initial-access",
      "method": "POST",
      "operationId": "postClientsInitialAccess",
      "summary": "",
      "user": "Admin user creating a new initial access token for a client in 'myrealm'.",
      "ideal": "Creates a new initial access token for a client and returns the token details."
    },
    {
      "path": "/myrealm/clients-initial-access/12345",
      "method": "DELETE",
      "operationId": "deleteClientsInitialAcces",
      "summary": "",
      "user": "Admin user deleting an initial access token with ID '12345' in 'myrealm'.",
      "ideal": "Successfully deletes the specified initial access token and returns a confirmation message."
    },
    {
      "path": "/myrealm/client-registration-policy/providers",
      "method": "GET",
      "operationId": "getProviders",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all client registration policy providers available in the specified realm."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClient",
      "summary": "",
      "user": "Admin user requesting role mappings for a specific group.",
      "ideal": "Returns the role mappings for the group with ID 123 for the client 'myclient'."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postGroupRoleMappingsClient",
      "summary": "",
      "user": "Admin user adding role mappings for a group.",
      "ideal": "Successfully adds the specified role mappings for the group with ID 123 to the client 'myclient'."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteGroupRoleMappingsClient",
      "summary": "",
      "user": "Admin user removing role mappings from a group.",
      "ideal": "Successfully removes the role mappings for the group with ID 123 from the client 'myclient'."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClientAvailable",
      "summary": "",
      "user": "Admin user checking available role mappings for a group.",
      "ideal": "Returns a list of available role mappings for the group with ID 123 for the client 'myclient'."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClientComposite",
      "summary": "",
      "user": "Admin user retrieving composite role mappings for a group.",
      "ideal": "Returns the composite role mappings for the group with ID 123 for the client 'myclient'."
    },
    {
      "path": "/myrealm/users/456/role-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getUserRoleMappingsClient",
      "summary": "",
      "user": "Admin user requesting role mappings for a specific user.",
      "ideal": "Returns the role mappings for the user with ID 456 for the client 'myclient'."
    },
    {
      "path": "/myrealm/users/456/role-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postUserRoleMappingsClient",
      "summary": "",
      "user": "Admin user adding role mappings for a user.",
      "ideal": "Successfully adds the specified role mappings for the user with ID 456 to the client 'myclient'."
    },
    {
      "path": "/myrealm/users/456/role-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteUserRoleMappingsClient",
      "summary": "",
      "user": "Admin user removing role mappings from a user.",
      "ideal": "Successfully removes the role mappings for the user with ID 456 from the client 'myclient'."
    },
    {
      "path": "/myrealm/users/456/role-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getUserRoleMappingsClientAvailable",
      "summary": "",
      "user": "Admin user checking available role mappings for a user.",
      "ideal": "Returns a list of available role mappings for the user with ID 456 for the client 'myclient'."
    },
    {
      "path": "/myrealm/users/456/role-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getUserRoleMappingsClientComposite",
      "summary": "",
      "user": "Admin user retrieving composite role mappings for a user.",
      "ideal": "Returns the composite role mappings for the user with ID 456 for the client 'myclient'."
    },
    {
      "path": "/myrealm/client-scopes",
      "method": "GET",
      "operationId": "getClientScopes",
      "summary": "",
      "user": "Admin user requesting all client scopes for the realm 'myrealm'.",
      "ideal": "Returns a list of all client scopes defined in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/client-scopes",
      "method": "POST",
      "operationId": "postClientScopes",
      "summary": "",
      "user": "Admin user creating a new client scope for 'myrealm'.",
      "ideal": "Creates a new client scope in the realm 'myrealm' and returns the created scope details."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "GET",
      "operationId": "getClientScope",
      "summary": "",
      "user": "Admin user retrieving details of client scope with ID '12345' in 'myrealm'.",
      "ideal": "Returns the details of the client scope with ID '12345' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "PUT",
      "operationId": "putClientScope",
      "summary": "",
      "user": "Admin user updating client scope with ID '12345' in 'myrealm'.",
      "ideal": "Updates the client scope with ID '12345' in the realm 'myrealm' and returns the updated scope details."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "DELETE",
      "operationId": "deleteClientScope",
      "summary": "",
      "user": "Admin user deleting client scope with ID '12345' from 'myrealm'.",
      "ideal": "Deletes the client scope with ID '12345' from the realm 'myrealm' and confirms deletion."
    },
    {
      "path": "/myrealm/client-templates",
      "method": "GET",
      "operationId": "getClientTemplates",
      "summary": "",
      "user": "Admin user requesting all client templates for the realm 'myrealm'.",
      "ideal": "Returns a list of all client templates defined in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/client-templates",
      "method": "POST",
      "operationId": "postClientTemplates",
      "summary": "",
      "user": "Admin user creating a new client template for 'myrealm'.",
      "ideal": "Creates a new client template in the realm 'myrealm' and returns the created template details."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "GET",
      "operationId": "getClientTemplate",
      "summary": "",
      "user": "Admin user retrieving details of client template with ID '67890' in 'myrealm'.",
      "ideal": "Returns the details of the client template with ID '67890' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "PUT",
      "operationId": "putClientTemplate",
      "summary": "",
      "user": "Admin user updating client template with ID '67890' in 'myrealm'.",
      "ideal": "Updates the client template with ID '67890' in the realm 'myrealm' and returns the updated template details."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "DELETE",
      "operationId": "deleteClientTemplate",
      "summary": "",
      "user": "Admin user deleting client template with ID '67890' from 'myrealm'.",
      "ideal": "Deletes the client template with ID '67890' from the realm 'myrealm' and confirms deletion."
    },
    {
      "path": "/myrealm/clients",
      "method": "GET",
      "operationId": "getClients",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all clients in the specified realm."
    },
    {
      "path": "/myrealm/clients",
      "method": "POST",
      "operationId": "postClients",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new client in the specified realm with the provided configuration."
    },
    {
      "path": "/myrealm/clients/12345",
      "method": "GET",
      "operationId": "getClientByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch details of the client with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/clients/12345",
      "method": "PUT",
      "operationId": "putClient",
      "summary": "",
      "user": "admin",
      "ideal": "Update the configuration of the client with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/clients/12345",
      "method": "DELETE",
      "operationId": "deleteClientByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the client with ID 12345 from the specified realm."
    },
    {
      "path": "/myrealm/clients/12345/client-secret",
      "method": "GET",
      "operationId": "getClientSecret",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the client secret for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/client-secret",
      "method": "POST",
      "operationId": "postClientSecret",
      "summary": "",
      "user": "admin",
      "ideal": "Generate a new client secret for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/client-secret/rotated",
      "method": "GET",
      "operationId": "getRotated",
      "summary": "",
      "user": "admin",
      "ideal": "Check if the client secret for the client with ID 12345 has been rotated."
    },
    {
      "path": "/myrealm/clients/12345/client-secret/rotated",
      "method": "DELETE",
      "operationId": "deleteRotated",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the rotated client secret for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/default-client-scopes",
      "method": "GET",
      "operationId": "getDefaultClientScopes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the default client scopes for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/default-client-scopes/scope1",
      "method": "PUT",
      "operationId": "putDefaultClientScope",
      "summary": "",
      "user": "admin",
      "ideal": "Add or update the default client scope 'scope1' for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/default-client-scopes/scope1",
      "method": "DELETE",
      "operationId": "deleteDefaultClientScope",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the default client scope 'scope1' from the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/generate-example-access-token",
      "method": "GET",
      "operationId": "getGenerateExampleAccessToken",
      "summary": "",
      "user": "admin",
      "ideal": "Generate an example access token for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/generate-example-id-token",
      "method": "GET",
      "operationId": "getGenerateExampleIdToken",
      "summary": "",
      "user": "admin",
      "ideal": "Generate an example ID token for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/generate-example-userinfo",
      "method": "GET",
      "operationId": "getGenerateExampleUserinfo",
      "summary": "",
      "user": "admin",
      "ideal": "Generate example user info for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/protocol-mappers",
      "method": "GET",
      "operationId": "getProtocolMappers",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the protocol mappers for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/scope-mappings/roleContainer1/granted",
      "method": "GET",
      "operationId": "getGranted",
      "summary": "",
      "user": "admin",
      "ideal": "Get the granted roles for the role container 'roleContainer1' of the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/evaluate-scopes/scope-mappings/roleContainer1/not-granted",
      "method": "GET",
      "operationId": "getNotGranted",
      "summary": "",
      "user": "admin",
      "ideal": "Get the not granted roles for the role container 'roleContainer1' of the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/installation/providers/someProvider",
      "method": "GET",
      "operationId": "getInstallationProvider",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve installation details for the provider 'someProvider' for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/management/permissions",
      "method": "GET",
      "operationId": "getClientManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch management permissions for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/management/permissions",
      "method": "PUT",
      "operationId": "putClientManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Update management permissions for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/nodes",
      "method": "POST",
      "operationId": "postNodes",
      "summary": "",
      "user": "admin",
      "ideal": "Add nodes to the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/nodes/someNode",
      "method": "DELETE",
      "operationId": "deleteNode",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the node 'someNode' from the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/offline-session-count",
      "method": "GET",
      "operationId": "getOfflineSessionCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the count of offline sessions for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/offline-sessions",
      "method": "GET",
      "operationId": "getOfflineSessions",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve offline sessions for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/optional-client-scopes",
      "method": "GET",
      "operationId": "getOptionalClientScopes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the optional client scopes for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/optional-client-scopes/scope1",
      "method": "PUT",
      "operationId": "putOptionalClientScope",
      "summary": "",
      "user": "admin",
      "ideal": "Add or update the optional client scope 'scope1' for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/optional-client-scopes/scope1",
      "method": "DELETE",
      "operationId": "deleteOptionalClientScope",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the optional client scope 'scope1' from the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/push-revocation",
      "method": "POST",
      "operationId": "postClientPushRevocation",
      "summary": "",
      "user": "admin",
      "ideal": "Push revocation for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/registration-access-token",
      "method": "POST",
      "operationId": "postRegistrationAccessToken",
      "summary": "",
      "user": "admin",
      "ideal": "Generate a registration access token for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/service-account-user",
      "method": "GET",
      "operationId": "getServiceAccountUser",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the service account user for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/session-count",
      "method": "GET",
      "operationId": "getSessionCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the current session count for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/test-nodes-available",
      "method": "GET",
      "operationId": "getTestNodesAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Check the availability of test nodes for the client with ID 12345."
    },
    {
      "path": "/myrealm/clients/12345/user-sessions",
      "method": "GET",
      "operationId": "getClientUserSessions",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve user sessions for the client with ID 12345."
    },
    {
      "path": "/myrealm/components",
      "method": "GET",
      "operationId": "getComponents",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all components in the specified realm."
    },
    {
      "path": "/myrealm/components",
      "method": "POST",
      "operationId": "postComponents",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new component in the specified realm with the provided configuration."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "GET",
      "operationId": "getComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch details of the component with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "PUT",
      "operationId": "putComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Update the configuration of the component with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "DELETE",
      "operationId": "deleteComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the component with ID 12345 from the specified realm."
    },
    {
      "path": "/myrealm/components/12345/sub-component-types",
      "method": "GET",
      "operationId": "getSubComponentTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of sub-component types for the component with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/groups",
      "method": "GET",
      "operationId": "getGroupsByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all groups in the specified realm."
    },
    {
      "path": "/myrealm/groups",
      "method": "POST",
      "operationId": "postGroups",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new group in the specified realm with the provided details."
    },
    {
      "path": "/myrealm/groups/count",
      "method": "GET",
      "operationId": "getGroupsCountByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Get the total count of groups in the specified realm."
    },
    {
      "path": "/myrealm/groups/12345",
      "method": "GET",
      "operationId": "getGroup",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve details of the group with the specified ID."
    },
    {
      "path": "/myrealm/groups/12345",
      "method": "PUT",
      "operationId": "putGroupByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Update the details of the group with the specified ID."
    },
    {
      "path": "/myrealm/groups/12345",
      "method": "DELETE",
      "operationId": "deleteGroupByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the group with the specified ID from the realm."
    },
    {
      "path": "/myrealm/groups/12345/children",
      "method": "POST",
      "operationId": "postChildren",
      "summary": "",
      "user": "admin",
      "ideal": "Add child groups to the specified group."
    },
    {
      "path": "/myrealm/groups/12345/management/permissions",
      "method": "GET",
      "operationId": "getGroupManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve management permissions for the specified group."
    },
    {
      "path": "/myrealm/groups/12345/management/permissions",
      "method": "PUT",
      "operationId": "putGroupManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Update management permissions for the specified group."
    },
    {
      "path": "/myrealm/groups/12345/members",
      "method": "GET",
      "operationId": "getMembers",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of members belonging to the specified group."
    },
    {
      "path": "/myrealm/identity-provider/instances",
      "method": "GET",
      "operationId": "getInstances",
      "summary": "",
      "user": "Admin user requesting a list of identity provider instances in the realm.",
      "ideal": "Returns a list of all identity provider instances configured in the specified realm."
    },
    {
      "path": "/myrealm/identity-provider/instances",
      "method": "POST",
      "operationId": "postInstances",
      "summary": "",
      "user": "Admin user creating a new identity provider instance with specific configurations.",
      "ideal": "Creates a new identity provider instance and returns the details of the created instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider",
      "method": "GET",
      "operationId": "getInstance",
      "summary": "",
      "user": "Admin user retrieving details of a specific identity provider instance.",
      "ideal": "Returns the details of the identity provider instance identified by the alias."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider",
      "method": "PUT",
      "operationId": "putInstance",
      "summary": "",
      "user": "Admin user updating the configuration of an existing identity provider instance.",
      "ideal": "Updates the specified identity provider instance and returns the updated details."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider",
      "method": "DELETE",
      "operationId": "deleteInstance",
      "summary": "",
      "user": "Admin user deleting an identity provider instance that is no longer needed.",
      "ideal": "Deletes the specified identity provider instance and confirms the deletion."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/export",
      "method": "GET",
      "operationId": "getExport",
      "summary": "",
      "user": "Admin user exporting the configuration of an identity provider instance for backup.",
      "ideal": "Returns the exported configuration of the specified identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/management/permissions",
      "method": "GET",
      "operationId": "getInstanceManagementPermissions",
      "summary": "",
      "user": "Admin user checking the management permissions for a specific identity provider instance.",
      "ideal": "Returns the management permissions associated with the specified identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/management/permissions",
      "method": "PUT",
      "operationId": "putInstanceManagementPermissions",
      "summary": "",
      "user": "Admin user updating the management permissions for an identity provider instance.",
      "ideal": "Updates the management permissions for the specified identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mapper-types",
      "method": "GET",
      "operationId": "getMapperTypes",
      "summary": "",
      "user": "Admin user retrieving available mapper types for an identity provider instance.",
      "ideal": "Returns a list of available mapper types for the specified identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mappers",
      "method": "GET",
      "operationId": "getMappers",
      "summary": "",
      "user": "Admin user listing all mappers associated with a specific identity provider instance.",
      "ideal": "Returns a list of mappers configured for the specified identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mappers",
      "method": "POST",
      "operationId": "postMappers",
      "summary": "",
      "user": "Admin user creating a new mapper for an identity provider instance.",
      "ideal": "Creates a new mapper for the specified identity provider instance and returns its details."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mappers/mapper-id",
      "method": "GET",
      "operationId": "getMapper",
      "summary": "",
      "user": "Admin user retrieving details of a specific mapper for an identity provider instance.",
      "ideal": "Returns the details of the specified mapper associated with the identity provider instance."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mappers/mapper-id",
      "method": "PUT",
      "operationId": "putMapper",
      "summary": "",
      "user": "Admin user updating the configuration of a specific mapper for an identity provider instance.",
      "ideal": "Updates the specified mapper and returns the updated details."
    },
    {
      "path": "/myrealm/identity-provider/instances/my-provider/mappers/mapper-id",
      "method": "DELETE",
      "operationId": "deleteMapper",
      "summary": "",
      "user": "Admin user deleting a specific mapper that is no longer needed.",
      "ideal": "Deletes the specified mapper and confirms the deletion."
    },
    {
      "path": "/myrealm/identity-provider/providers/some-provider-id",
      "method": "GET",
      "operationId": "getIdentityProviderProvider",
      "summary": "",
      "user": "Admin user retrieving details of a specific identity provider by its ID.",
      "ideal": "Returns the details of the identity provider identified by the provider ID."
    },
    {
      "path": "/myrealm/keys",
      "method": "GET",
      "operationId": "getKeys",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the public and private keys used for signing and encrypting tokens in the specified realm."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/models/456",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user requesting details of a specific protocol mapper model.",
      "ideal": "Returns the details of the protocol mapper model with ID 456 in the client scope with ID 123."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/models/456",
      "method": "PUT",
      "operationId": "putClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating the protocol mapper model with new configurations.",
      "ideal": "Updates the protocol mapper model with ID 456 in the client scope with ID 123 and returns the updated model."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/models/456",
      "method": "DELETE",
      "operationId": "deleteClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user deleting a specific protocol mapper model.",
      "ideal": "Deletes the protocol mapper model with ID 456 from the client scope with ID 123 and confirms deletion."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientScopeProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to the client scope.",
      "ideal": "Adds new protocol mapper models to the client scope with ID 123 and returns the added models."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a client scope.",
      "ideal": "Returns a list of all protocol mapper models associated with the client scope with ID 123."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientScopeProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating new protocol mapper models for the client scope.",
      "ideal": "Creates new protocol mapper models for the client scope with ID 123 and returns the created models."
    },
    {
      "path": "/myrealm/client-scopes/123/protocol-mappers/protocol/some-protocol",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol.",
      "ideal": "Returns protocol mappers associated with the client scope with ID 123 for the specified protocol."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/models/def",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user retrieving a specific protocol mapper model from a client template.",
      "ideal": "Returns the details of the protocol mapper model with ID def in the client template with ID abc."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/models/def",
      "method": "PUT",
      "operationId": "putClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating a protocol mapper model in a client template.",
      "ideal": "Updates the protocol mapper model with ID def in the client template with ID abc and returns the updated model."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/models/def",
      "method": "DELETE",
      "operationId": "deleteClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user deleting a specific protocol mapper model from a client template.",
      "ideal": "Deletes the protocol mapper model with ID def from the client template with ID abc and confirms deletion."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientTemplateProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to a client template.",
      "ideal": "Adds new protocol mapper models to the client template with ID abc and returns the added models."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a client template.",
      "ideal": "Returns a list of all protocol mapper models associated with the client template with ID abc."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientTemplateProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating new protocol mapper models for a client template.",
      "ideal": "Creates new protocol mapper models for the client template with ID abc and returns the created models."
    },
    {
      "path": "/myrealm/client-templates/abc/protocol-mappers/protocol/some-protocol",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol in a client template.",
      "ideal": "Returns protocol mappers associated with the client template with ID abc for the specified protocol."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/models/123",
      "method": "GET",
      "operationId": "getClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user retrieving a specific protocol mapper model for a client.",
      "ideal": "Returns the details of the protocol mapper model with ID 123 for the client with ID xyz."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/models/123",
      "method": "PUT",
      "operationId": "putClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating a protocol mapper model for a client.",
      "ideal": "Updates the protocol mapper model with ID 123 for the client with ID xyz and returns the updated model."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/models/123",
      "method": "DELETE",
      "operationId": "deleteClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user deleting a specific protocol mapper model from a client.",
      "ideal": "Deletes the protocol mapper model with ID 123 from the client with ID xyz and confirms deletion."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to a client.",
      "ideal": "Adds new protocol mapper models to the client with ID xyz and returns the added models."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a client.",
      "ideal": "Returns a list of all protocol mapper models associated with the client with ID xyz."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating new protocol mapper models for a client.",
      "ideal": "Creates new protocol mapper models for the client with ID xyz and returns the created models."
    },
    {
      "path": "/myrealm/clients/xyz/protocol-mappers/protocol/some-protocol",
      "method": "GET",
      "operationId": "getClientProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol in a client.",
      "ideal": "Returns protocol mappers associated with the client with ID xyz for the specified protocol."
    },
    {
      "path": "/v1/{realm}",
      "method": "GET",
      "operationId": "get",
      "summary": "",
      "user": "Admin user requesting realm information.",
      "ideal": "Returns the details of the specified realm."
    },
    {
      "path": "/v1/{realm}",
      "method": "POST",
      "operationId": "post",
      "summary": "",
      "user": "Admin user creating a new realm.",
      "ideal": "Creates a new realm with the provided configuration."
    },
    {
      "path": "/v1/{realm}/admin-events",
      "method": "GET",
      "operationId": "getAdminEvents",
      "summary": "",
      "user": "Admin user retrieving admin events for auditing.",
      "ideal": "Returns a list of admin events for the specified realm."
    },
    {
      "path": "/v1/{realm}/client-policies/policies",
      "method": "GET",
      "operationId": "getPolicies",
      "summary": "",
      "user": "Admin user checking client policies.",
      "ideal": "Retrieves the client policies defined in the realm."
    },
    {
      "path": "/v1/{realm}/default-groups",
      "method": "GET",
      "operationId": "getDefaultGroups",
      "summary": "",
      "user": "Admin user listing default groups in the realm.",
      "ideal": "Returns the default groups configured for the realm."
    },
    {
      "path": "/v1/{realm}/localization/en",
      "method": "GET",
      "operationId": "getLocalizationByRealmByLocale",
      "summary": "",
      "user": "Admin user fetching localization for English locale.",
      "ideal": "Retrieves localization strings for the specified locale."
    },
    {
      "path": "/v1/{realm}/localization/en/welcome",
      "method": "GET",
      "operationId": "getLocalizationByRealmByLocaleByKey",
      "summary": "",
      "user": "Admin user getting specific localization key.",
      "ideal": "Returns the localization string for the key 'welcome'."
    },
    {
      "path": "/v1/{realm}/logout-all",
      "method": "POST",
      "operationId": "postLogoutAll",
      "summary": "",
      "user": "Admin user logging out all users from the realm.",
      "ideal": "Logs out all active sessions in the specified realm."
    },
    {
      "path": "/v1/{realm}/partial-export",
      "method": "POST",
      "operationId": "postPartialExport",
      "summary": "",
      "user": "Admin user exporting specific realm data.",
      "ideal": "Exports selected data from the realm for backup."
    },
    {
      "path": "/v1/{realm}/sessions/{session}",
      "method": "DELETE",
      "operationId": "deleteSession",
      "summary": "",
      "user": "Admin user terminating a specific user session.",
      "ideal": "Deletes the specified user session from the realm."
    },
    {
      "path": "/myrealm/groups/123/role-mappings",
      "method": "GET",
      "operationId": "getGroupRoleMappings",
      "summary": "",
      "user": "Admin user requesting role mappings for group with ID 123 in realm 'myrealm'.",
      "ideal": "Returns the role mappings associated with the specified group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user checking realm-specific role mappings for group ID 123.",
      "ideal": "Returns realm-specific role mappings for the specified group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "POST",
      "operationId": "postGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user adding new realm role mappings to group ID 123.",
      "ideal": "Successfully adds the specified realm role mappings to the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user removing realm role mappings from group ID 123.",
      "ideal": "Successfully removes the specified realm role mappings from the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm/available",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealmAvailable",
      "summary": "",
      "user": "Admin user retrieving available realm role mappings for group ID 123.",
      "ideal": "Returns a list of available realm role mappings for the specified group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm/composite",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealmComposite",
      "summary": "",
      "user": "Admin user checking composite realm role mappings for group ID 123.",
      "ideal": "Returns composite realm role mappings for the specified group."
    },
    {
      "path": "/myrealm/users/456/role-mappings",
      "method": "GET",
      "operationId": "getUserRoleMappings",
      "summary": "",
      "user": "Admin user requesting role mappings for user with ID 456 in realm 'myrealm'.",
      "ideal": "Returns the role mappings associated with the specified user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user checking realm-specific role mappings for user ID 456.",
      "ideal": "Returns realm-specific role mappings for the specified user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "POST",
      "operationId": "postUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user adding new realm role mappings to user ID 456.",
      "ideal": "Successfully adds the specified realm role mappings to the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user removing realm role mappings from user ID 456.",
      "ideal": "Successfully removes the specified realm role mappings from the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm/available",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealmAvailable",
      "summary": "",
      "user": "Admin user retrieving available realm role mappings for user ID 456.",
      "ideal": "Returns a list of available realm role mappings for the specified user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm/composite",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealmComposite",
      "summary": "",
      "user": "Admin user checking composite realm role mappings for user ID 456.",
      "ideal": "Returns composite realm role mappings for the specified user."
    },
    {
      "path": "/myrealm/clients/123/roles",
      "method": "GET",
      "operationId": "getClientRoles",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve all roles associated with the client having ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles",
      "method": "POST",
      "operationId": "postClientRoles",
      "summary": "",
      "user": "admin_user",
      "ideal": "Create a new role for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "GET",
      "operationId": "getClientRole",
      "summary": "",
      "user": "admin_user",
      "ideal": "Fetch details of the role 'myrole' for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "PUT",
      "operationId": "putClientRole",
      "summary": "",
      "user": "admin_user",
      "ideal": "Update the role 'myrole' for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "DELETE",
      "operationId": "deleteClientRole",
      "summary": "",
      "user": "admin_user",
      "ideal": "Delete the role 'myrole' for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "GET",
      "operationId": "getClientRoleComposites",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve composite roles for the role 'myrole' of the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "POST",
      "operationId": "postClientRoleComposites",
      "summary": "",
      "user": "admin_user",
      "ideal": "Add composite roles to the role 'myrole' for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "DELETE",
      "operationId": "deleteClientRoleComposites",
      "summary": "",
      "user": "admin_user",
      "ideal": "Remove composite roles from the role 'myrole' for the client with ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles",
      "method": "GET",
      "operationId": "getRolesByRealm",
      "summary": "",
      "user": "admin_user",
      "ideal": "List all roles available in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles",
      "method": "POST",
      "operationId": "postRolesByRealm",
      "summary": "",
      "user": "admin_user",
      "ideal": "Create a new role in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "GET",
      "operationId": "getRoleByRealmByRoleName",
      "summary": "",
      "user": "admin_user",
      "ideal": "Get details of the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "PUT",
      "operationId": "putRoleByRealmByRoleName",
      "summary": "",
      "user": "admin_user",
      "ideal": "Update the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "DELETE",
      "operationId": "deleteRoleByRealmByRoleName",
      "summary": "",
      "user": "admin_user",
      "ideal": "Delete the role 'myrole' from the realm 'myrealm'."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}",
      "method": "GET",
      "operationId": "getRolesById",
      "summary": "",
      "user": "Admin user querying the role details for 'admin' role in the 'myrealm' realm.",
      "ideal": "Retrieve the details of the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}",
      "method": "PUT",
      "operationId": "putRolesById",
      "summary": "",
      "user": "Admin user updating the 'admin' role to add a new description in the 'myrealm' realm.",
      "ideal": "Update the role with ID '12345' to change its description to 'Administrator role with full access'."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}",
      "method": "DELETE",
      "operationId": "deleteRolesById",
      "summary": "",
      "user": "Admin user removing the 'admin' role from the 'myrealm' realm.",
      "ideal": "Delete the role with ID '12345' from the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/composites",
      "method": "GET",
      "operationId": "getRolesByIdComposites",
      "summary": "",
      "user": "Admin user checking which roles are composite roles for 'admin' role in 'myrealm'.",
      "ideal": "Retrieve composite roles for the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/composites",
      "method": "POST",
      "operationId": "postRolesByIdComposites",
      "summary": "",
      "user": "Admin user adding a composite role to the 'admin' role in 'myrealm'.",
      "ideal": "Add the composite role with ID '67890' to the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/composites",
      "method": "DELETE",
      "operationId": "deleteRolesByIdComposites",
      "summary": "",
      "user": "Admin user removing a composite role from the 'admin' role in 'myrealm'.",
      "ideal": "Remove the composite role with ID '67890' from the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/composites/clients/{clientUuid}",
      "method": "GET",
      "operationId": "getRolesByIdCompositesClient",
      "summary": "",
      "user": "Admin user checking composite roles for 'admin' role related to a specific client in 'myrealm'.",
      "ideal": "Retrieve composite roles for the role with ID '12345' associated with client UUID 'abc-def-123' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/composites/realm",
      "method": "GET",
      "operationId": "getRolesByIdCompositesRealm",
      "summary": "",
      "user": "Admin user checking realm-level composite roles for 'admin' role in 'myrealm'.",
      "ideal": "Retrieve realm-level composite roles for the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/management/permissions",
      "method": "GET",
      "operationId": "getRolesByIdManagementPermissions",
      "summary": "",
      "user": "Admin user reviewing management permissions for 'admin' role in 'myrealm'.",
      "ideal": "Retrieve management permissions for the role with ID '12345' in the 'myrealm' realm."
    },
    {
      "path": "/{realm}/roles-by-id/{role-id}/management/permissions",
      "method": "PUT",
      "operationId": "putRolesByIdManagementPermissions",
      "summary": "",
      "user": "Admin user updating management permissions for 'admin' role in 'myrealm'.",
      "ideal": "Update management permissions for the role with ID '12345' to include 'manage-users' in the 'myrealm' realm."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings",
      "method": "GET",
      "operationId": "getClientScopeScopeMappings",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Get scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Add scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available scope mappings for a specific client."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite scope mappings for a specific client."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "POST",
      "operationId": "postClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Add realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Remove realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm/available",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealmAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm/composite",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealmComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/users",
      "method": "GET",
      "operationId": "getUsersByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of users in the specified realm."
    },
    {
      "path": "/myrealm/users",
      "method": "POST",
      "operationId": "postUsers",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new user in the specified realm."
    },
    {
      "path": "/myrealm/users/count",
      "method": "GET",
      "operationId": "getUsersCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the total count of users in the specified realm."
    },
    {
      "path": "/myrealm/users/profile",
      "method": "GET",
      "operationId": "getProfile",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the profile information for the realm."
    },
    {
      "path": "/myrealm/users/profile",
      "method": "PUT",
      "operationId": "putProfile",
      "summary": "",
      "user": "admin",
      "ideal": "Update the profile information for the realm."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "GET",
      "operationId": "getUserByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve user details by user ID."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "PUT",
      "operationId": "putUser",
      "summary": "",
      "user": "admin",
      "ideal": "Update user details by user ID."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "DELETE",
      "operationId": "deleteUserByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Delete a user by user ID."
    },
    {
      "path": "/myrealm/users/12345/configured-user-storage-credential-types",
      "method": "GET",
      "operationId": "getConfiguredUserStorageCredentialTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve configured credential types for a user."
    },
    {
      "path": "/myrealm/users/12345/consents",
      "method": "GET",
      "operationId": "getConsents",
      "summary": "",
      "user": "admin",
      "ideal": "Get the consents granted by the user."
    },
    {
      "path": "/myrealm/users/12345/consents/myclient",
      "method": "DELETE",
      "operationId": "deleteConsent",
      "summary": "",
      "user": "admin",
      "ideal": "Revoke consent for a specific client."
    },
    {
      "path": "/myrealm/users/12345/credentials",
      "method": "GET",
      "operationId": "getCredentials",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the credentials for a user."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1",
      "method": "DELETE",
      "operationId": "deleteCredential",
      "summary": "",
      "user": "admin",
      "ideal": "Delete a specific credential for a user."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/moveAfter/cred2",
      "method": "POST",
      "operationId": "postMoveAfter",
      "summary": "",
      "user": "admin",
      "ideal": "Move a credential after another specified credential."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/moveToFirst",
      "method": "POST",
      "operationId": "postMoveToFirst",
      "summary": "",
      "user": "admin",
      "ideal": "Move a credential to the first position."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/userLabel",
      "method": "PUT",
      "operationId": "putUserLabel",
      "summary": "",
      "user": "admin",
      "ideal": "Update the user label for a specific credential."
    },
    {
      "path": "/myrealm/users/12345/disable-credential-types",
      "method": "PUT",
      "operationId": "putDisableCredentialTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Disable specified credential types for a user."
    },
    {
      "path": "/myrealm/users/12345/execute-actions-email",
      "method": "PUT",
      "operationId": "putExecuteActionsEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Trigger email actions for a user."
    },
    {
      "path": "/myrealm/users/12345/federated-identity",
      "method": "GET",
      "operationId": "getFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve federated identity information for a user."
    },
    {
      "path": "/myrealm/users/12345/federated-identity/myprovider",
      "method": "POST",
      "operationId": "postFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Link a federated identity to a user."
    },
    {
      "path": "/myrealm/users/12345/federated-identity/myprovider",
      "method": "DELETE",
      "operationId": "deleteFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Unlink a federated identity from a user."
    },
    {
      "path": "/myrealm/users/12345/groups",
      "method": "GET",
      "operationId": "getUserGroups",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve groups associated with a user."
    },
    {
      "path": "/myrealm/users/12345/groups/count",
      "method": "GET",
      "operationId": "getUserGroupsCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the count of groups associated with a user."
    },
    {
      "path": "/myrealm/users/12345/groups/mygroup",
      "method": "PUT",
      "operationId": "putUserGroup",
      "summary": "",
      "user": "admin",
      "ideal": "Add a user to a specified group."
    },
    {
      "path": "/myrealm/users/12345/groups/mygroup",
      "method": "DELETE",
      "operationId": "deleteUserGroup",
      "summary": "",
      "user": "admin",
      "ideal": "Remove a user from a specified group."
    },
    {
      "path": "/myrealm/users/12345/impersonation",
      "method": "POST",
      "operationId": "postImpersonation",
      "summary": "",
      "user": "admin",
      "ideal": "Impersonate a user for administrative tasks."
    },
    {
      "path": "/myrealm/users/12345/logout",
      "method": "POST",
      "operationId": "postLogout",
      "summary": "",
      "user": "admin",
      "ideal": "Log out a user from all sessions."
    },
    {
      "path": "/myrealm/users/12345/offline-sessions/myclientuuid",
      "method": "GET",
      "operationId": "getOfflineSession",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve offline session details for a user."
    },
    {
      "path": "/myrealm/users/12345/reset-password",
      "method": "PUT",
      "operationId": "putResetPassword",
      "summary": "",
      "user": "admin",
      "ideal": "Reset the password for a user."
    },
    {
      "path": "/myrealm/users/12345/reset-password-email",
      "method": "PUT",
      "operationId": "putResetPasswordEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Send a reset password email to a user."
    },
    {
      "path": "/myrealm/users/12345/send-verify-email",
      "method": "PUT",
      "operationId": "putSendVerifyEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Send a verification email to a user."
    },
    {
      "path": "/myrealm/users/12345/sessions",
      "method": "GET",
      "operationId": "getSessions",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve active sessions for a user."
    }
  ]
}