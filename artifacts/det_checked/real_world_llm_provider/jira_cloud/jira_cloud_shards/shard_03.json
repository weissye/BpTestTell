{
  "openapi_meta": {
    "title": "The Jira Cloud platform REST API",
    "version": "1001.0.0-SNAPSHOT-d7cdb9e836f3a625612c2e8e3dc278d686704ef9"
  },
  "instructions": "Generate LLM GOLD examples for these API operations. Return JSON: {\"gold\": [{\"path\",\"method\",\"operationId\",\"user\",\"ideal\"}...]}",
  "operations": [
    {
      "path": "/rest/api/3/app/field/context/configuration/list",
      "method": "POST",
      "tags": [
        "Issue custom field configuration (apps)"
      ],
      "summary": "Bulk get custom field configurations",
      "operationId": "getCustomFieldsConfigurations"
    },
    {
      "path": "/rest/api/3/app/field/{fieldIdOrKey}/context/configuration",
      "method": "PUT",
      "tags": [
        "Issue custom field configuration (apps)"
      ],
      "summary": "Update custom field configurations",
      "operationId": "updateCustomFieldConfiguration"
    },
    {
      "path": "/rest/api/3/application-properties/advanced-settings",
      "method": "GET",
      "tags": [
        "Jira settings"
      ],
      "summary": "Get advanced settings",
      "operationId": "getAdvancedSettings"
    },
    {
      "path": "/rest/api/3/applicationrole/{key}",
      "method": "GET",
      "tags": [
        "Application roles"
      ],
      "summary": "Get application role",
      "operationId": "getApplicationRole"
    },
    {
      "path": "/rest/api/3/attachment/thumbnail/{id}",
      "method": "GET",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Get attachment thumbnail",
      "operationId": "getAttachmentThumbnail"
    },
    {
      "path": "/rest/api/3/attachment/{id}/expand/human",
      "method": "GET",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Get all metadata for an expanded attachment",
      "operationId": "expandAttachmentForHumans"
    },
    {
      "path": "/rest/api/3/avatar/{type}/system",
      "method": "GET",
      "tags": [
        "Avatars"
      ],
      "summary": "Get system avatars by type",
      "operationId": "getAllSystemAvatars"
    },
    {
      "path": "/rest/api/3/bulk/issues/fields",
      "method": "POST",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Bulk edit issues",
      "operationId": "submitBulkEdit"
    },
    {
      "path": "/rest/api/3/bulk/issues/transition",
      "method": "POST",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Bulk transition issue statuses",
      "operationId": "submitBulkTransition"
    },
    {
      "path": "/rest/api/3/bulk/queue/{taskId}",
      "method": "GET",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Get bulk issue operation progress",
      "operationId": "getBulkOperationProgress"
    },
    {
      "path": "/rest/api/3/comment/list",
      "method": "POST",
      "tags": [
        "Issue comments"
      ],
      "summary": "Get comments by IDs",
      "operationId": "getCommentsByIds"
    },
    {
      "path": "/rest/api/3/comment/{commentId}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "Issue comment properties"
      ],
      "summary": "Get comment property",
      "operationId": "getCommentProperty"
    },
    {
      "path": "/rest/api/3/component",
      "method": "POST",
      "tags": [
        "Project components"
      ],
      "summary": "Create component",
      "operationId": "createComponent"
    },
    {
      "path": "/rest/api/3/component/{id}",
      "method": "PUT",
      "tags": [
        "Project components"
      ],
      "summary": "Update component",
      "operationId": "updateComponent"
    },
    {
      "path": "/rest/api/3/configuration/timetracking",
      "method": "GET",
      "tags": [
        "Time tracking"
      ],
      "summary": "Get selected time tracking provider",
      "operationId": "getSelectedTimeTrackingImplementation"
    },
    {
      "path": "/rest/api/3/configuration/timetracking/options",
      "method": "GET",
      "tags": [
        "Time tracking"
      ],
      "summary": "Get time tracking settings",
      "operationId": "getSharedTimeTrackingConfiguration"
    },
    {
      "path": "/rest/api/3/dashboard",
      "method": "GET",
      "tags": [
        "Dashboards"
      ],
      "summary": "Get all dashboards",
      "operationId": "getAllDashboards"
    },
    {
      "path": "/rest/api/3/dashboard/gadgets",
      "method": "GET",
      "tags": [
        "Dashboards"
      ],
      "summary": "Get available gadgets",
      "operationId": "getAllAvailableDashboardGadgets"
    },
    {
      "path": "/rest/api/3/dashboard/{dashboardId}/gadget",
      "method": "POST",
      "tags": [
        "Dashboards"
      ],
      "summary": "Add gadget to dashboard",
      "operationId": "addGadget"
    },
    {
      "path": "/rest/api/3/dashboard/{dashboardId}/items/{itemId}/properties",
      "method": "GET",
      "tags": [
        "Dashboards"
      ],
      "summary": "Get dashboard item property keys",
      "operationId": "getDashboardItemPropertyKeys"
    },
    {
      "path": "/rest/api/3/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "Dashboards"
      ],
      "summary": "Set dashboard item property",
      "operationId": "setDashboardItemProperty"
    },
    {
      "path": "/rest/api/3/dashboard/{id}",
      "method": "PUT",
      "tags": [
        "Dashboards"
      ],
      "summary": "Update dashboard",
      "operationId": "updateDashboard"
    },
    {
      "path": "/rest/api/3/data-policy/project",
      "method": "GET",
      "tags": [
        "App data policies"
      ],
      "summary": "Get data policy for projects",
      "operationId": "getPolicies"
    },
    {
      "path": "/rest/api/3/expression/eval",
      "method": "POST",
      "tags": [
        "Jira expressions"
      ],
      "summary": "Currently being removed. Evaluate Jira expression",
      "operationId": "evaluateJiraExpression"
    },
    {
      "path": "/rest/api/3/field",
      "method": "POST",
      "tags": [
        "Issue fields"
      ],
      "summary": "Create custom field",
      "operationId": "createCustomField"
    },
    {
      "path": "/rest/api/3/field/search",
      "method": "GET",
      "tags": [
        "Issue fields"
      ],
      "summary": "Get fields paginated",
      "operationId": "getFieldsPaginated"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context",
      "method": "GET",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Get custom field contexts",
      "operationId": "getContextsForField"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/defaultValue",
      "method": "PUT",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Set custom field contexts default values",
      "operationId": "setDefaultValues"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/projectmapping",
      "method": "GET",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Get project mappings for custom field context",
      "operationId": "getProjectContextMapping"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/issuetype",
      "method": "PUT",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Add issue types to context",
      "operationId": "addIssueTypesToContext"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/option",
      "method": "POST",
      "tags": [
        "Issue custom field options"
      ],
      "summary": "Create custom field options (context)",
      "operationId": "createCustomFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/option/{optionId}",
      "method": "DELETE",
      "tags": [
        "Issue custom field options"
      ],
      "summary": "Delete custom field options (context)",
      "operationId": "deleteCustomFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/project/remove",
      "method": "POST",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Remove custom field context from projects",
      "operationId": "removeCustomFieldContextFromProjects"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option",
      "method": "GET",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Get all issue field options",
      "operationId": "getAllIssueFieldOptions"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option/suggestions/search",
      "method": "GET",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Get visible issue field options",
      "operationId": "getVisibleIssueFieldOptions"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option/{optionId}",
      "method": "PUT",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Update issue field option",
      "operationId": "updateIssueFieldOption"
    },
    {
      "path": "/rest/api/3/field/{id}/restore",
      "method": "POST",
      "tags": [
        "Issue fields"
      ],
      "summary": "Restore custom field from trash",
      "operationId": "restoreCustomField"
    },
    {
      "path": "/rest/api/3/fieldconfiguration",
      "method": "POST",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Create field configuration",
      "operationId": "createFieldConfiguration"
    },
    {
      "path": "/rest/api/3/fieldconfiguration/{id}/fields",
      "method": "GET",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Get field configuration items",
      "operationId": "getFieldConfigurationItems"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme",
      "method": "POST",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Create field configuration scheme",
      "operationId": "createFieldConfigurationScheme"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme/project",
      "method": "PUT",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Assign field configuration scheme to project",
      "operationId": "assignFieldConfigurationSchemeToProject"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme/{id}/mapping",
      "method": "PUT",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Assign issue types to field configurations",
      "operationId": "setFieldConfigurationSchemeMapping"
    },
    {
      "path": "/rest/api/3/filter/defaultShareScope",
      "method": "GET",
      "tags": [
        "Filter sharing"
      ],
      "summary": "Get default share scope",
      "operationId": "getDefaultShareScope"
    },
    {
      "path": "/rest/api/3/filter/my",
      "method": "GET",
      "tags": [
        "Filters"
      ],
      "summary": "Get my filters",
      "operationId": "getMyFilters"
    },
    {
      "path": "/rest/api/3/filter/{id}",
      "method": "GET",
      "tags": [
        "Filters"
      ],
      "summary": "Get filter",
      "operationId": "getFilter"
    },
    {
      "path": "/rest/api/3/filter/{id}/columns",
      "method": "GET",
      "tags": [
        "Filters"
      ],
      "summary": "Get columns",
      "operationId": "getColumns"
    },
    {
      "path": "/rest/api/3/filter/{id}/favourite",
      "method": "PUT",
      "tags": [
        "Filters"
      ],
      "summary": "Add filter as favorite",
      "operationId": "setFavouriteForFilter"
    },
    {
      "path": "/rest/api/3/filter/{id}/permission",
      "method": "POST",
      "tags": [
        "Filter sharing"
      ],
      "summary": "Add share permission",
      "operationId": "addSharePermission"
    },
    {
      "path": "/rest/api/3/group",
      "method": "DELETE",
      "tags": [
        "Groups"
      ],
      "summary": "Remove group",
      "operationId": "removeGroup"
    },
    {
      "path": "/rest/api/3/group/bulk",
      "method": "GET",
      "tags": [
        "Groups"
      ],
      "summary": "Bulk get groups",
      "operationId": "bulkGetGroups"
    },
    {
      "path": "/rest/api/3/group/user",
      "method": "POST",
      "tags": [
        "Groups"
      ],
      "summary": "Add user to group",
      "operationId": "addUserToGroup"
    },
    {
      "path": "/rest/api/3/instance/license",
      "method": "GET",
      "tags": [
        "License metrics"
      ],
      "summary": "Get license",
      "operationId": "getLicense"
    },
    {
      "path": "/rest/api/3/issue/archive",
      "method": "PUT",
      "tags": [
        "Issues"
      ],
      "summary": "Archive issue(s) by issue ID/key",
      "operationId": "archiveIssues"
    },
    {
      "path": "/rest/api/3/issue/createmeta",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get create issue metadata",
      "operationId": "getCreateIssueMeta"
    },
    {
      "path": "/rest/api/3/issue/limit/report",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get issue limit report",
      "operationId": "getIssueLimitReport"
    },
    {
      "path": "/rest/api/3/issue/properties/multi",
      "method": "POST",
      "tags": [
        "Issue properties"
      ],
      "summary": "Bulk set issue properties by issue",
      "operationId": "bulkSetIssuePropertiesByIssue"
    },
    {
      "path": "/rest/api/3/issue/unarchive",
      "method": "PUT",
      "tags": [
        "Issues"
      ],
      "summary": "Unarchive issue(s) by issue keys/ID",
      "operationId": "unarchiveIssues"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get issue",
      "operationId": "getIssue"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/attachments",
      "method": "POST",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Add attachment",
      "operationId": "addAttachment"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/comment",
      "method": "GET",
      "tags": [
        "Issue comments"
      ],
      "summary": "Get comments",
      "operationId": "getComments"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/comment/{id}",
      "method": "GET",
      "tags": [
        "Issue comments"
      ],
      "summary": "Get comment",
      "operationId": "getComment"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/notify",
      "method": "POST",
      "tags": [
        "Issues"
      ],
      "summary": "Send notification for issue",
      "operationId": "notify"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "Issue properties"
      ],
      "summary": "Get issue property",
      "operationId": "getIssueProperty"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/remotelink",
      "method": "GET",
      "tags": [
        "Issue remote links"
      ],
      "summary": "Get remote issue links",
      "operationId": "getRemoteIssueLinks"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/remotelink/{linkId}",
      "method": "GET",
      "tags": [
        "Issue remote links"
      ],
      "summary": "Get remote issue link by ID",
      "operationId": "getRemoteIssueLinkById"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/transitions",
      "method": "POST",
      "tags": [
        "Issues"
      ],
      "summary": "Transition issue",
      "operationId": "doTransition"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/votes",
      "method": "POST",
      "tags": [
        "Issue votes"
      ],
      "summary": "Add vote",
      "operationId": "addVote"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/watchers",
      "method": "POST",
      "tags": [
        "Issue watchers"
      ],
      "summary": "Add watcher",
      "operationId": "addWatcher"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog",
      "method": "POST",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Add worklog",
      "operationId": "addWorklog"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog/{id}",
      "method": "GET",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Get worklog",
      "operationId": "getWorklog"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}",
      "method": "DELETE",
      "tags": [
        "Issue worklog properties"
      ],
      "summary": "Delete worklog property",
      "operationId": "deleteWorklogProperty"
    },
    {
      "path": "/rest/api/3/issueLink",
      "method": "POST",
      "tags": [
        "Issue links"
      ],
      "summary": "Create issue link",
      "operationId": "linkIssues"
    },
    {
      "path": "/rest/api/3/issueLinkType",
      "method": "GET",
      "tags": [
        "Issue link types"
      ],
      "summary": "Get issue link types",
      "operationId": "getIssueLinkTypes"
    },
    {
      "path": "/rest/api/3/issueLinkType/{issueLinkTypeId}",
      "method": "GET",
      "tags": [
        "Issue link types"
      ],
      "summary": "Get issue link type",
      "operationId": "getIssueLinkType"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes",
      "method": "GET",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Get issue security schemes",
      "operationId": "getIssueSecuritySchemes"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/level/default",
      "method": "PUT",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Set default issue security levels",
      "operationId": "setDefaultLevels"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/project",
      "method": "PUT",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Associate security scheme to project",
      "operationId": "associateSchemesToProjects"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{id}",
      "method": "PUT",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Update issue security scheme",
      "operationId": "updateIssueSecurityScheme"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{schemeId}/level",
      "method": "PUT",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Add issue security levels",
      "operationId": "addSecurityLevel"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}/member",
      "method": "PUT",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Add issue security level members",
      "operationId": "addSecurityLevelMembers"
    },
    {
      "path": "/rest/api/3/issuetype",
      "method": "POST",
      "tags": [
        "Issue types"
      ],
      "summary": "Create issue type",
      "operationId": "createIssueType"
    },
    {
      "path": "/rest/api/3/issuetype/{id}",
      "method": "GET",
      "tags": [
        "Issue types"
      ],
      "summary": "Get issue type",
      "operationId": "getIssueType"
    },
    {
      "path": "/rest/api/3/issuetype/{id}/avatar2",
      "method": "POST",
      "tags": [
        "Issue types"
      ],
      "summary": "Load issue type avatar",
      "operationId": "createIssueTypeAvatar"
    },
    {
      "path": "/rest/api/3/issuetype/{issueTypeId}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "Issue type properties"
      ],
      "summary": "Get issue type property",
      "operationId": "getIssueTypeProperty"
    },
    {
      "path": "/rest/api/3/issuetypescheme",
      "method": "POST",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Create issue type scheme",
      "operationId": "createIssueTypeScheme"
    },
    {
      "path": "/rest/api/3/issuetypescheme/project",
      "method": "PUT",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Assign issue type scheme to project",
      "operationId": "assignIssueTypeSchemeToProject"
    },
    {
      "path": "/rest/api/3/issuetypescheme/{issueTypeSchemeId}/issuetype",
      "method": "PUT",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Add issue types to issue type scheme",
      "operationId": "addIssueTypesToIssueTypeScheme"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme",
      "method": "GET",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Get issue type screen schemes",
      "operationId": "getIssueTypeScreenSchemes"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/project",
      "method": "GET",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Get issue type screen schemes for projects",
      "operationId": "getIssueTypeScreenSchemeProjectAssociations"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/{issueTypeScreenSchemeId}",
      "method": "PUT",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Update issue type screen scheme",
      "operationId": "updateIssueTypeScreenScheme"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/{issueTypeScreenSchemeId}/mapping/remove",
      "method": "POST",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Remove mappings from issue type screen scheme",
      "operationId": "removeMappingsFromIssueTypeScreenScheme"
    },
    {
      "path": "/rest/api/3/jql/autocompletedata",
      "method": "POST",
      "tags": [
        "JQL"
      ],
      "summary": "Get field reference data (POST)",
      "operationId": "getAutoCompletePost"
    },
    {
      "path": "/rest/api/3/jql/function/computation",
      "method": "POST",
      "tags": [
        "JQL functions (apps)"
      ],
      "summary": "Update precomputations (apps)",
      "operationId": "updatePrecomputations"
    },
    {
      "path": "/rest/api/3/jql/parse",
      "method": "POST",
      "tags": [
        "JQL"
      ],
      "summary": "Parse JQL query",
      "operationId": "parseJqlQueries"
    },
    {
      "path": "/rest/api/3/label",
      "method": "GET",
      "tags": [
        "Labels"
      ],
      "summary": "Get all labels",
      "operationId": "getAllLabels"
    },
    {
      "path": "/rest/api/3/mypermissions",
      "method": "GET",
      "tags": [
        "Permissions"
      ],
      "summary": "Get my permissions",
      "operationId": "getMyPermissions"
    },
    {
      "path": "/rest/api/3/mypreferences",
      "method": "PUT",
      "tags": [
        "Myself"
      ],
      "summary": "Set preference",
      "operationId": "setPreference"
    },
    {
      "path": "/rest/api/3/myself",
      "method": "GET",
      "tags": [
        "Myself"
      ],
      "summary": "Get current user",
      "operationId": "getCurrentUser"
    },
    {
      "path": "/rest/api/3/notificationscheme/project",
      "method": "GET",
      "tags": [
        "Issue notification schemes"
      ],
      "summary": "Get projects using notification schemes paginated",
      "operationId": "getNotificationSchemeToProjectMappings"
    },
    {
      "path": "/rest/api/3/notificationscheme/{id}/notification",
      "method": "PUT",
      "tags": [
        "Issue notification schemes"
      ],
      "summary": "Add notifications to notification scheme",
      "operationId": "addNotifications"
    },
    {
      "path": "/rest/api/3/permissions",
      "method": "GET",
      "tags": [
        "Permissions"
      ],
      "summary": "Get all permissions",
      "operationId": "getAllPermissions"
    },
    {
      "path": "/rest/api/3/permissionscheme",
      "method": "GET",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Get all permission schemes",
      "operationId": "getAllPermissionSchemes"
    },
    {
      "path": "/rest/api/3/permissionscheme/{schemeId}",
      "method": "GET",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Get permission scheme",
      "operationId": "getPermissionScheme"
    },
    {
      "path": "/rest/api/3/permissionscheme/{schemeId}/permission",
      "method": "POST",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Create permission grant",
      "operationId": "createPermissionGrant"
    },
    {
      "path": "/rest/api/3/plans/plan",
      "method": "GET",
      "tags": [
        "Plans"
      ],
      "summary": "Get plans paginated",
      "operationId": "getPlans"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}",
      "method": "PUT",
      "tags": [
        "Plans"
      ],
      "summary": "Update plan",
      "operationId": "updatePlan"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team",
      "method": "GET",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Get teams in plan paginated",
      "operationId": "getTeams"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team/atlassian/{atlassianTeamId}",
      "method": "GET",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Get Atlassian team in plan",
      "operationId": "getAtlassianTeam"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team/planonly/{planOnlyTeamId}",
      "method": "DELETE",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Delete plan-only team",
      "operationId": "deletePlanOnlyTeam"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/trash",
      "method": "PUT",
      "tags": [
        "Plans"
      ],
      "summary": "Trash plan",
      "operationId": "trashPlan"
    },
    {
      "path": "/rest/api/3/priority/default",
      "method": "PUT",
      "tags": [
        "Issue priorities"
      ],
      "summary": "Set default priority",
      "operationId": "setDefaultPriority"
    },
    {
      "path": "/rest/api/3/priority/{id}",
      "method": "DELETE",
      "tags": [
        "Issue priorities"
      ],
      "summary": "Delete priority",
      "operationId": "deletePriority"
    },
    {
      "path": "/rest/api/3/priorityscheme",
      "method": "GET",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Get priority schemes",
      "operationId": "getPrioritySchemes"
    },
    {
      "path": "/rest/api/3/priorityscheme/priorities/available",
      "method": "GET",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Get available priorities by priority scheme",
      "operationId": "getAvailablePrioritiesByPriorityScheme"
    },
    {
      "path": "/rest/api/3/priorityscheme/{schemeId}/priorities",
      "method": "GET",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Get priorities by priority scheme",
      "operationId": "getPrioritiesByPriorityScheme"
    },
    {
      "path": "/rest/api/3/project",
      "method": "POST",
      "tags": [
        "Projects"
      ],
      "summary": "Create project",
      "operationId": "createProject"
    },
    {
      "path": "/rest/api/3/project-template/live-template",
      "method": "GET",
      "tags": [
        "Project templates"
      ],
      "summary": "Gets a custom project template",
      "operationId": "liveTemplate"
    },
    {
      "path": "/rest/api/3/project/recent",
      "method": "GET",
      "tags": [
        "Projects"
      ],
      "summary": "Get recent projects",
      "operationId": "getRecent"
    },
    {
      "path": "/rest/api/3/project/type/accessible",
      "method": "GET",
      "tags": [
        "Project types"
      ],
      "summary": "Get licensed project types",
      "operationId": "getAllAccessibleProjectTypes"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}",
      "method": "DELETE",
      "tags": [
        "Projects"
      ],
      "summary": "Delete project",
      "operationId": "deleteProject"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/archive",
      "method": "POST",
      "tags": [
        "Projects"
      ],
      "summary": "Archive project",
      "operationId": "archiveProject"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/avatar2",
      "method": "POST",
      "tags": [
        "Project avatars"
      ],
      "summary": "Load project avatar",
      "operationId": "createProjectAvatar"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/classification-level/default",
      "method": "GET",
      "tags": [
        "Project classification levels"
      ],
      "summary": "Get the default data classification level of a project",
      "operationId": "getDefaultProjectClassification"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/components",
      "method": "GET",
      "tags": [
        "Project components"
      ],
      "summary": "Get project components",
      "operationId": "getProjectComponents"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/features/{featureKey}",
      "method": "PUT",
      "tags": [
        "Project features"
      ],
      "summary": "Set project feature state",
      "operationId": "toggleFeatureForProject"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "Project properties"
      ],
      "summary": "Get project property",
      "operationId": "getProjectProperty"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/role",
      "method": "GET",
      "tags": [
        "Project roles"
      ],
      "summary": "Get project roles for project",
      "operationId": "getProjectRoles"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/role/{id}",
      "method": "POST",
      "tags": [
        "Project role actors"
      ],
      "summary": "Add actors to project role",
      "operationId": "addActorUsers"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/statuses",
      "method": "GET",
      "tags": [
        "Projects"
      ],
      "summary": "Get all statuses for project",
      "operationId": "getAllStatuses"
    },
    {
      "path": "/rest/api/3/project/{projectId}/email",
      "method": "GET",
      "tags": [
        "Project email"
      ],
      "summary": "Get project's sender email",
      "operationId": "getProjectEmail"
    },
    {
      "path": "/rest/api/3/project/{projectKeyOrId}/issuesecuritylevelscheme",
      "method": "GET",
      "tags": [
        "Project permission schemes"
      ],
      "summary": "Get project issue security scheme",
      "operationId": "getProjectIssueSecurityScheme"
    },
    {
      "path": "/rest/api/3/project/{projectKeyOrId}/permissionscheme",
      "method": "PUT",
      "tags": [
        "Project permission schemes"
      ],
      "summary": "Assign permission scheme",
      "operationId": "assignPermissionScheme"
    },
    {
      "path": "/rest/api/3/projectCategory",
      "method": "POST",
      "tags": [
        "Project categories"
      ],
      "summary": "Create project category",
      "operationId": "createProjectCategory"
    },
    {
      "path": "/rest/api/3/projectCategory/{id}",
      "method": "PUT",
      "tags": [
        "Project categories"
      ],
      "summary": "Update project category",
      "operationId": "updateProjectCategory"
    },
    {
      "path": "/rest/api/3/projectvalidate/validProjectName",
      "method": "GET",
      "tags": [
        "Project key and name validation"
      ],
      "summary": "Get valid project name",
      "operationId": "getValidProjectName"
    },
    {
      "path": "/rest/api/3/resolution",
      "method": "GET",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Get resolutions",
      "operationId": "getResolutions"
    },
    {
      "path": "/rest/api/3/resolution/move",
      "method": "PUT",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Move resolutions",
      "operationId": "moveResolutions"
    },
    {
      "path": "/rest/api/3/resolution/{id}",
      "method": "GET",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Get resolution",
      "operationId": "getResolution"
    },
    {
      "path": "/rest/api/3/role",
      "method": "POST",
      "tags": [
        "Project roles"
      ],
      "summary": "Create project role",
      "operationId": "createProjectRole"
    },
    {
      "path": "/rest/api/3/role/{id}",
      "method": "POST",
      "tags": [
        "Project roles"
      ],
      "summary": "Partial update project role",
      "operationId": "partialUpdateProjectRole"
    },
    {
      "path": "/rest/api/3/role/{id}/actors",
      "method": "GET",
      "tags": [
        "Project role actors"
      ],
      "summary": "Get default actors for project role",
      "operationId": "getProjectRoleActorsForRole"
    },
    {
      "path": "/rest/api/3/screens",
      "method": "POST",
      "tags": [
        "Screens"
      ],
      "summary": "Create screen",
      "operationId": "createScreen"
    },
    {
      "path": "/rest/api/3/screens/{screenId}",
      "method": "DELETE",
      "tags": [
        "Screens"
      ],
      "summary": "Delete screen",
      "operationId": "deleteScreen"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs",
      "method": "GET",
      "tags": [
        "Screen tabs"
      ],
      "summary": "Get all screen tabs",
      "operationId": "getAllScreenTabs"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs/{tabId}",
      "method": "PUT",
      "tags": [
        "Screen tabs"
      ],
      "summary": "Update screen tab",
      "operationId": "renameScreenTab"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs/{tabId}/fields/{id}",
      "method": "DELETE",
      "tags": [
        "Screen tab fields"
      ],
      "summary": "Remove screen tab field",
      "operationId": "removeScreenTabField"
    },
    {
      "path": "/rest/api/3/screenscheme",
      "method": "GET",
      "tags": [
        "Screen schemes"
      ],
      "summary": "Get screen schemes",
      "operationId": "getScreenSchemes"
    },
    {
      "path": "/rest/api/3/screenscheme/{screenSchemeId}",
      "method": "PUT",
      "tags": [
        "Screen schemes"
      ],
      "summary": "Update screen scheme",
      "operationId": "updateScreenScheme"
    },
    {
      "path": "/rest/api/3/search/approximate-count",
      "method": "POST",
      "tags": [
        "Issue search"
      ],
      "summary": "Count issues using JQL",
      "operationId": "countIssues"
    },
    {
      "path": "/rest/api/3/securitylevel/{id}",
      "method": "GET",
      "tags": [
        "Issue security level"
      ],
      "summary": "Get issue security level",
      "operationId": "getIssueSecurityLevel"
    },
    {
      "path": "/rest/api/3/settings/columns",
      "method": "PUT",
      "tags": [
        "Issue navigator settings"
      ],
      "summary": "Set issue navigator default columns",
      "operationId": "setIssueNavigatorDefaultColumns"
    },
    {
      "path": "/rest/api/3/statuscategory",
      "method": "GET",
      "tags": [
        "Workflow status categories"
      ],
      "summary": "Get all status categories",
      "operationId": "getStatusCategories"
    },
    {
      "path": "/rest/api/3/statuses",
      "method": "GET",
      "tags": [
        "Status"
      ],
      "summary": "Bulk get statuses",
      "operationId": "getStatusesById"
    },
    {
      "path": "/rest/api/3/statuses/byNames",
      "method": "GET",
      "tags": [
        "Status"
      ],
      "summary": "Bulk get statuses by name",
      "operationId": "getStatusesByName"
    },
    {
      "path": "/rest/api/3/statuses/{statusId}/projectUsages",
      "method": "GET",
      "tags": [
        "Status"
      ],
      "summary": "Get project usages by status",
      "operationId": "getProjectUsagesForStatus"
    },
    {
      "path": "/rest/api/3/task/{taskId}/cancel",
      "method": "POST",
      "tags": [
        "Tasks"
      ],
      "summary": "Cancel task",
      "operationId": "cancelTask"
    },
    {
      "path": "/rest/api/3/uiModifications/{uiModificationId}",
      "method": "DELETE",
      "tags": [
        "UI modifications (apps)"
      ],
      "summary": "Delete UI modification",
      "operationId": "deleteUiModification"
    },
    {
      "path": "/rest/api/3/universal_avatar/type/{type}/owner/{entityId}",
      "method": "POST",
      "tags": [
        "Avatars"
      ],
      "summary": "Load avatar",
      "operationId": "storeAvatar"
    },
    {
      "path": "/rest/api/3/universal_avatar/view/type/{type}/avatar/{id}",
      "method": "GET",
      "tags": [
        "Avatars"
      ],
      "summary": "Get avatar image by ID",
      "operationId": "getAvatarImageByID"
    },
    {
      "path": "/rest/api/3/user",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get user",
      "operationId": "getUser"
    },
    {
      "path": "/rest/api/3/user/assignable/search",
      "method": "GET",
      "tags": [
        "User search"
      ],
      "summary": "Find users assignable to issues",
      "operationId": "findAssignableUsers"
    },
    {
      "path": "/rest/api/3/user/columns",
      "method": "DELETE",
      "tags": [
        "Users"
      ],
      "summary": "Reset user default columns",
      "operationId": "resetUserColumns"
    },
    {
      "path": "/rest/api/3/user/email",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get user email",
      "operationId": "getUserEmail"
    },
    {
      "path": "/rest/api/3/user/nav4-opt-property/{propertyKey}",
      "method": "GET",
      "tags": [
        "usernavproperties"
      ],
      "summary": "Get user nav property",
      "operationId": "getUserNavProperty"
    },
    {
      "path": "/rest/api/3/user/picker",
      "method": "GET",
      "tags": [
        "User search"
      ],
      "summary": "Find users for picker",
      "operationId": "findUsersForPicker"
    },
    {
      "path": "/rest/api/3/user/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "User properties"
      ],
      "summary": "Get user property",
      "operationId": "getUserProperty"
    },
    {
      "path": "/rest/api/3/user/search/query",
      "method": "GET",
      "tags": [
        "User search"
      ],
      "summary": "Find users by query",
      "operationId": "findUsersByQuery"
    },
    {
      "path": "/rest/api/3/users",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get all users default",
      "operationId": "getAllUsersDefault"
    },
    {
      "path": "/rest/api/3/version/{id}",
      "method": "DELETE",
      "tags": [
        "Project versions"
      ],
      "summary": "Delete version",
      "operationId": "deleteVersion"
    },
    {
      "path": "/rest/api/3/version/{id}/mergeto/{moveIssuesTo}",
      "method": "PUT",
      "tags": [
        "Project versions"
      ],
      "summary": "Merge versions",
      "operationId": "mergeVersions"
    },
    {
      "path": "/rest/api/3/version/{id}/relatedwork",
      "method": "GET",
      "tags": [
        "Project versions"
      ],
      "summary": "Get related work",
      "operationId": "getRelatedWork"
    },
    {
      "path": "/rest/api/3/version/{id}/removeAndSwap",
      "method": "POST",
      "tags": [
        "Project versions"
      ],
      "summary": "Delete and replace version",
      "operationId": "deleteAndReplaceVersion"
    },
    {
      "path": "/rest/api/3/webhook",
      "method": "DELETE",
      "tags": [
        "Webhooks"
      ],
      "summary": "Delete webhooks by ID",
      "operationId": "deleteWebhookById"
    },
    {
      "path": "/rest/api/3/webhook/failed",
      "method": "GET",
      "tags": [
        "Webhooks"
      ],
      "summary": "Get failed webhooks",
      "operationId": "getFailedWebhooks"
    },
    {
      "path": "/rest/api/3/workflow",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Create workflow",
      "operationId": "createWorkflow"
    },
    {
      "path": "/rest/api/3/workflow/rule/config/delete",
      "method": "PUT",
      "tags": [
        "Workflow transition rules"
      ],
      "summary": "Delete workflow transition rule configurations",
      "operationId": "deleteWorkflowTransitionRuleConfigurations"
    },
    {
      "path": "/rest/api/3/workflow/transitions/{transitionId}/properties",
      "method": "GET",
      "tags": [
        "Workflow transition properties"
      ],
      "summary": "Get workflow transition properties",
      "operationId": "getWorkflowTransitionProperties"
    },
    {
      "path": "/rest/api/3/workflow/{entityId}",
      "method": "DELETE",
      "tags": [
        "Workflows"
      ],
      "summary": "Delete inactive workflow",
      "operationId": "deleteInactiveWorkflow"
    },
    {
      "path": "/rest/api/3/workflow/{workflowId}/workflowSchemes",
      "method": "GET",
      "tags": [
        "Workflows"
      ],
      "summary": "Get workflow schemes which are using a given workflow",
      "operationId": "getWorkflowSchemeUsagesForWorkflow"
    },
    {
      "path": "/rest/api/3/workflows/create",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Bulk create workflows",
      "operationId": "createWorkflows"
    },
    {
      "path": "/rest/api/3/workflows/preview",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Preview workflow",
      "operationId": "readWorkflowPreviews"
    },
    {
      "path": "/rest/api/3/workflows/update/validation",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Validate update workflows",
      "operationId": "validateUpdateWorkflows"
    },
    {
      "path": "/rest/api/3/workflowscheme/project",
      "method": "GET",
      "tags": [
        "Workflow scheme project associations"
      ],
      "summary": "Get workflow scheme project associations",
      "operationId": "getWorkflowSchemeProjectAssociations"
    },
    {
      "path": "/rest/api/3/workflowscheme/update",
      "method": "POST",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Update workflow scheme",
      "operationId": "updateSchemes"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}",
      "method": "GET",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Get workflow scheme",
      "operationId": "getWorkflowScheme"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/default",
      "method": "DELETE",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Delete default workflow",
      "operationId": "deleteDefaultWorkflow"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft",
      "method": "DELETE",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Delete draft workflow scheme",
      "operationId": "deleteWorkflowSchemeDraft"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/default",
      "method": "DELETE",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Delete draft default workflow",
      "operationId": "deleteDraftDefaultWorkflow"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/issuetype/{issueType}",
      "method": "DELETE",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Delete workflow for issue type in draft workflow scheme",
      "operationId": "deleteWorkflowSchemeDraftIssueType"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/publish",
      "method": "POST",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Publish draft workflow scheme",
      "operationId": "publishDraftWorkflowScheme"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/workflow",
      "method": "PUT",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Set issue types for workflow in workflow scheme",
      "operationId": "updateDraftWorkflowMapping"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/issuetype/{issueType}",
      "method": "PUT",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Set workflow for issue type in workflow scheme",
      "operationId": "setWorkflowSchemeIssueType"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/workflow",
      "method": "PUT",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Set issue types for workflow in workflow scheme",
      "operationId": "updateWorkflowMapping"
    },
    {
      "path": "/rest/api/3/worklog/list",
      "method": "POST",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Get worklogs",
      "operationId": "getWorklogsForIds"
    },
    {
      "path": "/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}",
      "method": "DELETE",
      "tags": [
        "App properties"
      ],
      "summary": "Delete app property",
      "operationId": "AddonPropertiesResource.deleteAddonProperty_delete"
    },
    {
      "path": "/rest/atlassian-connect/1/app/module/dynamic",
      "method": "DELETE",
      "tags": [
        "Dynamic modules"
      ],
      "summary": "Remove modules",
      "operationId": "DynamicModulesResource.removeModules_delete"
    },
    {
      "path": "/rest/atlassian-connect/1/migration/field",
      "method": "PUT",
      "tags": [
        "App migration"
      ],
      "summary": "Bulk update custom field value",
      "operationId": "AppIssueFieldValueUpdateResource.updateIssueFields_put"
    },
    {
      "path": "/rest/atlassian-connect/1/service-registry",
      "method": "GET",
      "tags": [
        "Service Registry"
      ],
      "summary": "Retrieve the attributes of service registries",
      "operationId": "ServiceRegistryResource.services_get"
    },
    {
      "path": "/rest/forge/1/app/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "App properties"
      ],
      "summary": "Get app property (Forge)",
      "operationId": "getForgeAppProperty"
    }
  ]
}