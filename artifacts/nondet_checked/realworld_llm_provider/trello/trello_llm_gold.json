{
  "gold": [
    {
      "path": "/actions/12345",
      "method": "GET",
      "operationId": "getActionsByIdAction",
      "summary": "",
      "user": "User requests details of a specific action by its ID.",
      "ideal": "Returns the action details including type, date, and associated card."
    },
    {
      "path": "/actions/12345",
      "method": "DELETE",
      "operationId": "deleteActionsByIdAction",
      "summary": "",
      "user": "User wants to delete an action from Trello.",
      "ideal": "Confirms the action has been successfully deleted."
    },
    {
      "path": "/actions/12345",
      "method": "PUT",
      "operationId": "updateActionsByIdAction",
      "summary": "",
      "user": "User updates the details of an existing action.",
      "ideal": "Returns the updated action details."
    },
    {
      "path": "/actions/12345/board",
      "method": "GET",
      "operationId": "getActionsBoardByIdAction",
      "summary": "",
      "user": "User retrieves the board associated with a specific action.",
      "ideal": "Returns the board details including name and ID."
    },
    {
      "path": "/actions/12345/card",
      "method": "GET",
      "operationId": "getActionsCardByIdAction",
      "summary": "",
      "user": "User wants to know which card is linked to a specific action.",
      "ideal": "Returns the card details including title and ID."
    },
    {
      "path": "/actions/12345/member",
      "method": "GET",
      "operationId": "getActionsMemberByIdAction",
      "summary": "",
      "user": "User checks which member is associated with a specific action.",
      "ideal": "Returns the member details including name and ID."
    },
    {
      "path": "/actions/12345/memberCreator",
      "method": "GET",
      "operationId": "getActionsMemberCreatorByIdAction",
      "summary": "",
      "user": "User wants to find out who created the action.",
      "ideal": "Returns the creator's member details."
    },
    {
      "path": "/actions/12345/organization",
      "method": "GET",
      "operationId": "getActionsOrganizationByIdAction",
      "summary": "",
      "user": "User retrieves the organization linked to the action.",
      "ideal": "Returns the organization details including name and ID."
    },
    {
      "path": "/actions/12345/text",
      "method": "PUT",
      "operationId": "updateActionsTextByIdAction",
      "summary": "",
      "user": "User updates the text of a specific action.",
      "ideal": "Returns the action with updated text."
    },
    {
      "path": "/actions/12345/list",
      "method": "GET",
      "operationId": "getActionsListByIdAction",
      "summary": "",
      "user": "User wants to see which list the action belongs to.",
      "ideal": "Returns the list details including name and ID."
    },
    {
      "path": "/batch",
      "method": "GET",
      "operationId": "getBatch",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve a batch of data from Trello, including cards, lists, and boards associated with the user's account."
    },
    {
      "path": "/v1/boards",
      "method": "POST",
      "operationId": "addBoards",
      "summary": "",
      "user": "User1: Creating a new board for project management.",
      "ideal": "Successfully creates a new board with the specified parameters."
    },
    {
      "path": "/v1/boards/{idBoard}",
      "method": "GET",
      "operationId": "getBoardsByIdBoard",
      "summary": "",
      "user": "User2: Retrieving details of the board with ID 12345.",
      "ideal": "Returns the details of the board with ID 12345."
    },
    {
      "path": "/v1/boards/{idBoard}",
      "method": "PUT",
      "operationId": "updateBoardsByIdBoard",
      "summary": "",
      "user": "User3: Updating the name and description of board ID 67890.",
      "ideal": "Successfully updates the board with new name and description."
    },
    {
      "path": "/v1/boards/{idBoard}/actions",
      "method": "GET",
      "operationId": "getBoardsActionsByIdBoard",
      "summary": "",
      "user": "User4: Fetching all actions performed on board ID 54321.",
      "ideal": "Returns a list of actions taken on the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/cards",
      "method": "GET",
      "operationId": "getBoardsCardsByIdBoard",
      "summary": "",
      "user": "User5: Getting all cards from board ID 98765.",
      "ideal": "Returns all cards associated with the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/checklists",
      "method": "POST",
      "operationId": "addBoardsChecklistsByIdBoard",
      "summary": "",
      "user": "User6: Adding a new checklist to board ID 13579.",
      "ideal": "Successfully creates a new checklist in the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/members",
      "method": "PUT",
      "operationId": "updateBoardsMembersByIdBoard",
      "summary": "",
      "user": "User7: Updating members of board ID 24680.",
      "ideal": "Successfully updates the members of the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/labels",
      "method": "GET",
      "operationId": "getBoardsLabelsByIdBoard",
      "summary": "",
      "user": "User8: Retrieving labels for board ID 11223.",
      "ideal": "Returns all labels associated with the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/lists",
      "method": "POST",
      "operationId": "addBoardsListsByIdBoard",
      "summary": "",
      "user": "User9: Creating a new list in board ID 33445.",
      "ideal": "Successfully adds a new list to the specified board."
    },
    {
      "path": "/v1/boards/{idBoard}/prefs/background",
      "method": "PUT",
      "operationId": "updateBoardsPrefsBackgroundByIdBoard",
      "summary": "",
      "user": "User10: Changing the background of board ID 55667.",
      "ideal": "Successfully updates the background preference of the specified board."
    },
    {
      "path": "/v1/cards/12345",
      "method": "GET",
      "operationId": "getCardsByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the details of the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345",
      "method": "PUT",
      "operationId": "updateCardsByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Update the card with ID 12345 to change its name and description."
    },
    {
      "path": "/v1/cards/12345/actions",
      "method": "GET",
      "operationId": "getCardsActionsByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Fetch all actions related to the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/checklists",
      "method": "POST",
      "operationId": "addCardsChecklistsByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Add a new checklist to the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/attachments",
      "method": "POST",
      "operationId": "addCardsAttachmentsByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Attach a file to the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/members",
      "method": "GET",
      "operationId": "getCardsMembersByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "List all members associated with the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/labels",
      "method": "DELETE",
      "operationId": "deleteCardsLabelsByIdCardByColor",
      "summary": "",
      "user": "user123",
      "ideal": "Remove a label of a specific color from the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/checklist/67890/checkItem/11111",
      "method": "PUT",
      "operationId": "updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem",
      "summary": "",
      "user": "user123",
      "ideal": "Update the state of a checklist item in the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/stickers",
      "method": "POST",
      "operationId": "addCardsStickersByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Add a sticker to the card with ID 12345."
    },
    {
      "path": "/v1/cards/12345/membersVoted",
      "method": "POST",
      "operationId": "addCardsMembersVotedByIdCard",
      "summary": "",
      "user": "user123",
      "ideal": "Add a member to the list of voters for the card with ID 12345."
    },
    {
      "path": "/checklists",
      "method": "POST",
      "operationId": "addChecklists",
      "summary": "",
      "user": "User wants to create a new checklist for their project.",
      "ideal": "Checklist created successfully."
    },
    {
      "path": "/checklists/{idChecklist}",
      "method": "DELETE",
      "operationId": "deleteChecklistsByIdChecklist",
      "summary": "",
      "user": "User wants to delete a checklist that is no longer needed.",
      "ideal": "Checklist deleted successfully."
    },
    {
      "path": "/checklists/{idChecklist}",
      "method": "GET",
      "operationId": "getChecklistsByIdChecklist",
      "summary": "",
      "user": "User wants to retrieve details of a specific checklist.",
      "ideal": "Checklist details retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}",
      "method": "PUT",
      "operationId": "updateChecklistsByIdChecklist",
      "summary": "",
      "user": "User wants to update the title of an existing checklist.",
      "ideal": "Checklist updated successfully."
    },
    {
      "path": "/checklists/{idChecklist}/board",
      "method": "GET",
      "operationId": "getChecklistsBoardByIdChecklist",
      "summary": "",
      "user": "User wants to find out which board a checklist belongs to.",
      "ideal": "Board information retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/board/{field}",
      "method": "GET",
      "operationId": "getChecklistsBoardByIdChecklistByField",
      "summary": "",
      "user": "User wants to get a specific field of the board associated with a checklist.",
      "ideal": "Field information retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/cards",
      "method": "GET",
      "operationId": "getChecklistsCardsByIdChecklist",
      "summary": "",
      "user": "User wants to see all cards associated with a checklist.",
      "ideal": "Cards retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/cards/{filter}",
      "method": "GET",
      "operationId": "getChecklistsCardsByIdChecklistByFilter",
      "summary": "",
      "user": "User wants to filter cards in a checklist based on a specific criterion.",
      "ideal": "Filtered cards retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/checkItems",
      "method": "GET",
      "operationId": "getChecklistsCheckItemsByIdChecklist",
      "summary": "",
      "user": "User wants to view all check items in a checklist.",
      "ideal": "Check items retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/checkItems",
      "method": "POST",
      "operationId": "addChecklistsCheckItemsByIdChecklist",
      "summary": "",
      "user": "User wants to add a new check item to a checklist.",
      "ideal": "Check item added successfully."
    },
    {
      "path": "/checklists/{idChecklist}/checkItems/{idCheckItem}",
      "method": "DELETE",
      "operationId": "deleteChecklistsCheckItemsByIdChecklistByIdCheckItem",
      "summary": "",
      "user": "User wants to remove a specific check item from a checklist.",
      "ideal": "Check item deleted successfully."
    },
    {
      "path": "/checklists/{idChecklist}/checkItems/{idCheckItem}",
      "method": "GET",
      "operationId": "getChecklistsCheckItemsByIdChecklistByIdCheckItem",
      "summary": "",
      "user": "User wants to retrieve details of a specific check item.",
      "ideal": "Check item details retrieved successfully."
    },
    {
      "path": "/checklists/{idChecklist}/idCard",
      "method": "PUT",
      "operationId": "updateChecklistsIdCardByIdChecklist",
      "summary": "",
      "user": "User wants to associate a checklist with a specific card.",
      "ideal": "Checklist card association updated successfully."
    },
    {
      "path": "/checklists/{idChecklist}/name",
      "method": "PUT",
      "operationId": "updateChecklistsNameByIdChecklist",
      "summary": "",
      "user": "User wants to change the name of a checklist.",
      "ideal": "Checklist name updated successfully."
    },
    {
      "path": "/checklists/{idChecklist}/pos",
      "method": "PUT",
      "operationId": "updateChecklistsPosByIdChecklist",
      "summary": "",
      "user": "User wants to change the position of a checklist.",
      "ideal": "Checklist position updated successfully."
    },
    {
      "path": "/checklists/{idChecklist}/{field}",
      "method": "GET",
      "operationId": "getChecklistsByIdChecklistByField",
      "summary": "",
      "user": "User wants to retrieve a specific field from a checklist.",
      "ideal": "Field information retrieved successfully."
    },
    {
      "path": "/labels",
      "method": "POST",
      "operationId": "addLabels",
      "summary": "",
      "user": "{\"name\":\"Urgent\",\"color\":\"red\"}",
      "ideal": "{\"id\":\"12345\",\"name\":\"Urgent\",\"color\":\"red\"}"
    },
    {
      "path": "/labels/12345",
      "method": "PUT",
      "operationId": "updateLabelsByIdLabel",
      "summary": "",
      "user": "{\"name\":\"High Priority\",\"color\":\"orange\"}",
      "ideal": "{\"id\":\"12345\",\"name\":\"High Priority\",\"color\":\"orange\"}"
    },
    {
      "path": "/labels/12345/color",
      "method": "PUT",
      "operationId": "updateLabelsColorByIdLabel",
      "summary": "",
      "user": "{\"color\":\"blue\"}",
      "ideal": "{\"id\":\"12345\",\"color\":\"blue\"}"
    },
    {
      "path": "/labels/12345/name",
      "method": "PUT",
      "operationId": "updateLabelsNameByIdLabel",
      "summary": "",
      "user": "{\"name\":\"Critical\"}",
      "ideal": "{\"id\":\"12345\",\"name\":\"Critical\"}"
    },
    {
      "path": "/lists",
      "method": "POST",
      "operationId": "addLists",
      "summary": "",
      "user": "User wants to create a new list in Trello.",
      "ideal": "A new list is created successfully with a unique ID."
    },
    {
      "path": "/lists/{idList}",
      "method": "GET",
      "operationId": "getListsByIdList",
      "summary": "",
      "user": "User wants to retrieve details of a specific list by its ID.",
      "ideal": "Returns the details of the list including its name and cards."
    },
    {
      "path": "/lists/{idList}",
      "method": "PUT",
      "operationId": "updateListsByIdList",
      "summary": "",
      "user": "User wants to update the name of an existing list.",
      "ideal": "The list is updated successfully with the new name."
    },
    {
      "path": "/lists/{idList}/actions",
      "method": "GET",
      "operationId": "getListsActionsByIdList",
      "summary": "",
      "user": "User wants to see the actions performed on a specific list.",
      "ideal": "Returns a list of actions related to the specified list."
    },
    {
      "path": "/lists/{idList}/archiveAllCards",
      "method": "POST",
      "operationId": "addListsArchiveAllCardsByIdList",
      "summary": "",
      "user": "User wants to archive all cards in a specific list.",
      "ideal": "All cards in the list are archived successfully."
    },
    {
      "path": "/lists/{idList}/board",
      "method": "GET",
      "operationId": "getListsBoardByIdList",
      "summary": "",
      "user": "User wants to get the board associated with a specific list.",
      "ideal": "Returns the board details linked to the specified list."
    },
    {
      "path": "/lists/{idList}/board/{field}",
      "method": "GET",
      "operationId": "getListsBoardByIdListByField",
      "summary": "",
      "user": "User wants to retrieve a specific field from the board of a list.",
      "ideal": "Returns the requested field from the board of the specified list."
    },
    {
      "path": "/lists/{idList}/cards",
      "method": "GET",
      "operationId": "getListsCardsByIdList",
      "summary": "",
      "user": "User wants to get all cards in a specific list.",
      "ideal": "Returns a list of all cards contained in the specified list."
    },
    {
      "path": "/lists/{idList}/cards",
      "method": "POST",
      "operationId": "addListsCardsByIdList",
      "summary": "",
      "user": "User wants to add a new card to a specific list.",
      "ideal": "The new card is added to the list successfully."
    },
    {
      "path": "/lists/{idList}/cards/{filter}",
      "method": "GET",
      "operationId": "getListsCardsByIdListByFilter",
      "summary": "",
      "user": "User wants to filter cards in a list based on a specific criterion.",
      "ideal": "Returns the cards that match the specified filter."
    },
    {
      "path": "/lists/{idList}/closed",
      "method": "PUT",
      "operationId": "updateListsClosedByIdList",
      "summary": "",
      "user": "User wants to close a specific list.",
      "ideal": "The list is closed successfully."
    },
    {
      "path": "/lists/{idList}/idBoard",
      "method": "PUT",
      "operationId": "updateListsIdBoardByIdList",
      "summary": "",
      "user": "User wants to change the board associated with a specific list.",
      "ideal": "The list is successfully moved to the new board."
    },
    {
      "path": "/lists/{idList}/moveAllCards",
      "method": "POST",
      "operationId": "addListsMoveAllCardsByIdList",
      "summary": "",
      "user": "User wants to move all cards from one list to another.",
      "ideal": "All cards are moved to the specified list successfully."
    },
    {
      "path": "/lists/{idList}/name",
      "method": "PUT",
      "operationId": "updateListsNameByIdList",
      "summary": "",
      "user": "User wants to rename a specific list.",
      "ideal": "The list is renamed successfully."
    },
    {
      "path": "/lists/{idList}/pos",
      "method": "PUT",
      "operationId": "updateListsPosByIdList",
      "summary": "",
      "user": "User wants to change the position of a specific list.",
      "ideal": "The position of the list is updated successfully."
    },
    {
      "path": "/lists/{idList}/subscribed",
      "method": "PUT",
      "operationId": "updateListsSubscribedByIdList",
      "summary": "",
      "user": "User wants to subscribe or unsubscribe from a specific list.",
      "ideal": "The subscription status of the list is updated successfully."
    },
    {
      "path": "/lists/{idList}/{field}",
      "method": "GET",
      "operationId": "getListsByIdListByField",
      "summary": "",
      "user": "User wants to retrieve a specific field from a list by its ID.",
      "ideal": "Returns the requested field from the specified list."
    },
    {
      "path": "/v1/members/12345",
      "method": "GET",
      "operationId": "getMembersByIdMember",
      "summary": "",
      "user": "User requests details of member with ID 12345.",
      "ideal": "Returns member details including name, email, and avatar."
    },
    {
      "path": "/v1/members/12345",
      "method": "PUT",
      "operationId": "updateMembersByIdMember",
      "summary": "",
      "user": "User updates the member's information with new email and full name.",
      "ideal": "Successfully updates member details and returns updated information."
    },
    {
      "path": "/v1/members/12345/actions",
      "method": "GET",
      "operationId": "getMembersActionsByIdMember",
      "summary": "",
      "user": "User wants to see the recent actions taken by member 12345.",
      "ideal": "Returns a list of actions performed by the member."
    },
    {
      "path": "/v1/members/12345/avatar",
      "method": "POST",
      "operationId": "addMembersAvatarByIdMember",
      "summary": "",
      "user": "User uploads a new avatar for member 12345.",
      "ideal": "Successfully uploads the avatar and returns the new avatar URL."
    },
    {
      "path": "/v1/members/12345/bio",
      "method": "PUT",
      "operationId": "updateMembersBioByIdMember",
      "summary": "",
      "user": "User updates the bio of member 12345 to include new interests.",
      "ideal": "Successfully updates the bio and returns the updated bio."
    },
    {
      "path": "/v1/members/12345/boardBackgrounds",
      "method": "GET",
      "operationId": "getMembersBoardBackgroundsByIdMember",
      "summary": "",
      "user": "User retrieves the board backgrounds used by member 12345.",
      "ideal": "Returns a list of board backgrounds associated with the member."
    },
    {
      "path": "/v1/members/12345/boardStars",
      "method": "POST",
      "operationId": "addMembersBoardStarsByIdMember",
      "summary": "",
      "user": "User adds a new board star for member 12345.",
      "ideal": "Successfully adds the board star and returns the updated list of stars."
    },
    {
      "path": "/v1/members/12345/cards",
      "method": "GET",
      "operationId": "getMembersCardsByIdMember",
      "summary": "",
      "user": "User wants to see all cards assigned to member 12345.",
      "ideal": "Returns a list of cards assigned to the member."
    },
    {
      "path": "/v1/members/12345/notifications",
      "method": "GET",
      "operationId": "getMembersNotificationsByIdMember",
      "summary": "",
      "user": "User checks notifications for member 12345.",
      "ideal": "Returns a list of notifications for the member."
    },
    {
      "path": "/v1/members/12345/savedSearches",
      "method": "POST",
      "operationId": "addMembersSavedSearchesByIdMember",
      "summary": "",
      "user": "User saves a new search query for member 12345.",
      "ideal": "Successfully saves the search and returns the saved search details."
    },
    {
      "path": "/notifications/all/read",
      "method": "POST",
      "operationId": "addNotificationsAllRead",
      "summary": "",
      "user": "user123",
      "ideal": "Mark all notifications as read successfully."
    },
    {
      "path": "/notifications/456",
      "method": "GET",
      "operationId": "getNotificationsByIdNotification",
      "summary": "",
      "user": "user456",
      "ideal": "Retrieve notification details for notification ID 456."
    },
    {
      "path": "/notifications/789",
      "method": "PUT",
      "operationId": "updateNotificationsByIdNotification",
      "summary": "",
      "user": "user789",
      "ideal": "Update notification ID 789 with new details."
    },
    {
      "path": "/notifications/123/board",
      "method": "GET",
      "operationId": "getNotificationsBoardByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Fetch the board associated with notification ID 123."
    },
    {
      "path": "/notifications/123/board/name",
      "method": "GET",
      "operationId": "getNotificationsBoardByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Get the name of the board for notification ID 123."
    },
    {
      "path": "/notifications/123/card",
      "method": "GET",
      "operationId": "getNotificationsCardByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the card linked to notification ID 123."
    },
    {
      "path": "/notifications/123/card/name",
      "method": "GET",
      "operationId": "getNotificationsCardByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Get the name of the card for notification ID 123."
    },
    {
      "path": "/notifications/123/display",
      "method": "GET",
      "operationId": "getNotificationsDisplayByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Display the notification details for ID 123."
    },
    {
      "path": "/notifications/123/entities",
      "method": "GET",
      "operationId": "getNotificationsEntitiesByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "List all entities related to notification ID 123."
    },
    {
      "path": "/notifications/123/list",
      "method": "GET",
      "operationId": "getNotificationsListByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Get the list associated with notification ID 123."
    },
    {
      "path": "/notifications/123/list/name",
      "method": "GET",
      "operationId": "getNotificationsListByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the name of the list for notification ID 123."
    },
    {
      "path": "/notifications/123/member",
      "method": "GET",
      "operationId": "getNotificationsMemberByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Get the member associated with notification ID 123."
    },
    {
      "path": "/notifications/123/member/name",
      "method": "GET",
      "operationId": "getNotificationsMemberByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the name of the member for notification ID 123."
    },
    {
      "path": "/notifications/123/memberCreator",
      "method": "GET",
      "operationId": "getNotificationsMemberCreatorByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Get the creator of notification ID 123."
    },
    {
      "path": "/notifications/123/memberCreator/name",
      "method": "GET",
      "operationId": "getNotificationsMemberCreatorByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the name of the creator for notification ID 123."
    },
    {
      "path": "/notifications/123/organization",
      "method": "GET",
      "operationId": "getNotificationsOrganizationByIdNotification",
      "summary": "",
      "user": "user123",
      "ideal": "Get the organization related to notification ID 123."
    },
    {
      "path": "/notifications/123/organization/name",
      "method": "GET",
      "operationId": "getNotificationsOrganizationByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the name of the organization for notification ID 123."
    },
    {
      "path": "/notifications/456/unread",
      "method": "PUT",
      "operationId": "updateNotificationsUnreadByIdNotification",
      "summary": "",
      "user": "user456",
      "ideal": "Mark notification ID 456 as unread."
    },
    {
      "path": "/notifications/123/type",
      "method": "GET",
      "operationId": "getNotificationsByIdNotificationByField",
      "summary": "",
      "user": "user123",
      "ideal": "Get the type of notification for ID 123."
    },
    {
      "path": "/organizations/12345",
      "method": "GET",
      "operationId": "getOrganizationsByIdOrg",
      "summary": "",
      "user": "User requests details of organization with ID 12345.",
      "ideal": "Returns the organization details including name, description, and members."
    },
    {
      "path": "/organizations/12345/members",
      "method": "GET",
      "operationId": "getOrganizationsMembersByIdOrg",
      "summary": "",
      "user": "User wants to see all members of the organization with ID 12345.",
      "ideal": "Returns a list of members associated with the organization."
    },
    {
      "path": "/organizations/12345/boards",
      "method": "GET",
      "operationId": "getOrganizationsBoardsByIdOrg",
      "summary": "",
      "user": "User is looking for all boards under organization ID 12345.",
      "ideal": "Returns a list of boards belonging to the organization."
    },
    {
      "path": "/organizations/12345/members/67890",
      "method": "DELETE",
      "operationId": "deleteOrganizationsMembersByIdOrgByIdMember",
      "summary": "",
      "user": "User wants to remove member with ID 67890 from organization 12345.",
      "ideal": "Successfully removes the specified member from the organization."
    },
    {
      "path": "/organizations/12345/name",
      "method": "PUT",
      "operationId": "updateOrganizationsNameByIdOrg",
      "summary": "",
      "user": "User wishes to update the name of organization 12345 to 'New Organization Name'.",
      "ideal": "Updates the organization's name to 'New Organization Name'."
    },
    {
      "path": "/organizations/12345/prefs/orgInviteRestrict",
      "method": "PUT",
      "operationId": "updateOrganizationsPrefsOrgInviteRestrictByIdOrg",
      "summary": "",
      "user": "User wants to set organization invite restrictions for organization 12345.",
      "ideal": "Successfully updates the invite restrictions for the organization."
    },
    {
      "path": "/organizations/12345/logo",
      "method": "POST",
      "operationId": "addOrganizationsLogoByIdOrg",
      "summary": "",
      "user": "User uploads a new logo for organization 12345.",
      "ideal": "Successfully adds the new logo to the organization."
    },
    {
      "path": "/organizations/12345/boards/filter=public",
      "method": "GET",
      "operationId": "getOrganizationsBoardsByIdOrgByFilter",
      "summary": "",
      "user": "User wants to retrieve all public boards for organization 12345.",
      "ideal": "Returns a list of public boards for the specified organization."
    },
    {
      "path": "/organizations/12345/membersInvited",
      "method": "GET",
      "operationId": "getOrganizationsMembersInvitedByIdOrg",
      "summary": "",
      "user": "User checks the list of invited members for organization 12345.",
      "ideal": "Returns a list of members who have been invited to join the organization."
    },
    {
      "path": "/organizations/12345/prefs/associatedDomain",
      "method": "DELETE",
      "operationId": "deleteOrganizationsPrefsAssociatedDomainByIdOrg",
      "summary": "",
      "user": "User wants to remove the associated domain for organization 12345.",
      "ideal": "Successfully deletes the associated domain from the organization's preferences."
    },
    {
      "path": "/search",
      "method": "GET",
      "operationId": "getSearch",
      "summary": "",
      "user": "user123",
      "ideal": "Search for cards, lists, or boards that match the query."
    },
    {
      "path": "/search/members",
      "method": "GET",
      "operationId": "getSearchMembers",
      "summary": "",
      "user": "user456",
      "ideal": "Retrieve a list of members that match the search criteria."
    },
    {
      "path": "/sessions",
      "method": "POST",
      "operationId": "addSessions",
      "summary": "",
      "user": "{\"username\":\"john_doe\",\"email\":\"john@example.com\",\"password\":\"securePassword123\"}",
      "ideal": "{\"sessionId\":\"abc123\",\"message\":\"Session created successfully.\"}"
    },
    {
      "path": "/sessions/socket",
      "method": "GET",
      "operationId": "getSessionsSocket",
      "summary": "",
      "user": "{\"userId\":\"user_456\",\"token\":\"token_xyz\"}",
      "ideal": "{\"sessions\":[{\"id\":\"session_1\",\"title\":\"Project Meeting\"},{\"id\":\"session_2\",\"title\":\"Code Review\"}]}"
    },
    {
      "path": "/v1/tokens/abc123",
      "method": "DELETE",
      "operationId": "deleteTokensByToken",
      "summary": "",
      "user": "User wants to revoke access to their Trello account by deleting the token.",
      "ideal": "Successfully deletes the token and returns a confirmation message."
    },
    {
      "path": "/v1/tokens/abc123",
      "method": "GET",
      "operationId": "getTokensByToken",
      "summary": "",
      "user": "User wants to retrieve details about their token to check its status.",
      "ideal": "Returns the token details including expiration and permissions."
    },
    {
      "path": "/v1/tokens/abc123/member",
      "method": "GET",
      "operationId": "getTokensMemberByToken",
      "summary": "",
      "user": "User wants to know which member is associated with their token.",
      "ideal": "Returns the member information linked to the token."
    },
    {
      "path": "/v1/tokens/abc123/member/username",
      "method": "GET",
      "operationId": "getTokensMemberByTokenByField",
      "summary": "",
      "user": "User wants to get the username of the member associated with their token.",
      "ideal": "Returns the username of the member linked to the token."
    },
    {
      "path": "/v1/tokens/abc123/webhooks",
      "method": "GET",
      "operationId": "getTokensWebhooksByToken",
      "summary": "",
      "user": "User wants to see all webhooks associated with their token.",
      "ideal": "Returns a list of webhooks linked to the token."
    },
    {
      "path": "/v1/tokens/abc123/webhooks",
      "method": "POST",
      "operationId": "addTokensWebhooksByToken",
      "summary": "",
      "user": "User wants to add a new webhook to receive updates from Trello.",
      "ideal": "Successfully adds the webhook and returns the webhook details."
    },
    {
      "path": "/v1/tokens/abc123/webhooks",
      "method": "PUT",
      "operationId": "updateTokensWebhooksByToken",
      "summary": "",
      "user": "User wants to update an existing webhook to change its configuration.",
      "ideal": "Successfully updates the webhook and returns the updated details."
    },
    {
      "path": "/v1/tokens/abc123/webhooks/456",
      "method": "DELETE",
      "operationId": "deleteTokensWebhooksByTokenByIdWebhook",
      "summary": "",
      "user": "User wants to delete a specific webhook that is no longer needed.",
      "ideal": "Successfully deletes the webhook and returns a confirmation message."
    },
    {
      "path": "/v1/tokens/abc123/webhooks/456",
      "method": "GET",
      "operationId": "getTokensWebhooksByTokenByIdWebhook",
      "summary": "",
      "user": "User wants to retrieve details about a specific webhook.",
      "ideal": "Returns the details of the specified webhook."
    },
    {
      "path": "/v1/tokens/abc123/permissions",
      "method": "GET",
      "operationId": "getTokensByTokenByField",
      "summary": "",
      "user": "User wants to check the permissions associated with their token.",
      "ideal": "Returns the permissions granted to the token."
    },
    {
      "path": "/types/{id}",
      "method": "GET",
      "operationId": "getTypesById",
      "summary": "",
      "user": "user123",
      "ideal": "Retrieve the type details for the specified ID."
    },
    {
      "path": "/webhooks",
      "method": "POST",
      "operationId": "addWebhooks",
      "summary": "",
      "user": "user123",
      "ideal": "Create a new webhook for the specified model."
    },
    {
      "path": "/webhooks/",
      "method": "PUT",
      "operationId": "updateWebhooks",
      "summary": "",
      "user": "user456",
      "ideal": "Update the existing webhook settings."
    },
    {
      "path": "/webhooks/{idWebhook}",
      "method": "DELETE",
      "operationId": "deleteWebhooksByIdWebhook",
      "summary": "",
      "user": "user789",
      "ideal": "Delete the specified webhook by its ID."
    },
    {
      "path": "/webhooks/{idWebhook}",
      "method": "GET",
      "operationId": "getWebhooksByIdWebhook",
      "summary": "",
      "user": "user101",
      "ideal": "Retrieve details of the specified webhook by its ID."
    },
    {
      "path": "/webhooks/{idWebhook}",
      "method": "PUT",
      "operationId": "updateWebhooksByIdWebhook",
      "summary": "",
      "user": "user112",
      "ideal": "Update the specified webhook's configuration."
    },
    {
      "path": "/webhooks/{idWebhook}/active",
      "method": "PUT",
      "operationId": "updateWebhooksActiveByIdWebhook",
      "summary": "",
      "user": "user131",
      "ideal": "Activate or deactivate the specified webhook."
    },
    {
      "path": "/webhooks/{idWebhook}/callbackURL",
      "method": "PUT",
      "operationId": "updateWebhooksCallbackURLByIdWebhook",
      "summary": "",
      "user": "user415",
      "ideal": "Change the callback URL for the specified webhook."
    },
    {
      "path": "/webhooks/{idWebhook}/description",
      "method": "PUT",
      "operationId": "updateWebhooksDescriptionByIdWebhook",
      "summary": "",
      "user": "user161",
      "ideal": "Update the description of the specified webhook."
    },
    {
      "path": "/webhooks/{idWebhook}/idModel",
      "method": "PUT",
      "operationId": "updateWebhooksIdModelByIdWebhook",
      "summary": "",
      "user": "user718",
      "ideal": "Change the model ID associated with the specified webhook."
    },
    {
      "path": "/webhooks/{idWebhook}/{field}",
      "method": "GET",
      "operationId": "getWebhooksByIdWebhookByField",
      "summary": "",
      "user": "user192",
      "ideal": "Retrieve a specific field of the webhook by its ID."
    }
  ]
}