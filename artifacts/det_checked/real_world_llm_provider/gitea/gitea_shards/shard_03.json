{
  "openapi_meta": {
    "title": "Gitea API",
    "version": "{{AppVer | JSEscape}}"
  },
  "instructions": "Generate LLM GOLD examples for these API operations. Return JSON: {\"gold\": [{\"path\",\"method\",\"operationId\",\"user\",\"ideal\"}...]}",
  "operations": [
    {
      "path": "/repos/issues/search",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Search for issues across the repositories that the user has access to",
      "operationId": "issueSearchIssues"
    },
    {
      "path": "/repos/{owner}/{repo}/issues",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List a repository's issues",
      "operationId": "issueListIssues"
    },
    {
      "path": "/repos/{owner}/{repo}/issues",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Create an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "operationId": "issueCreateIssue"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List all comments in a repository",
      "operationId": "issueGetRepoComments"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a comment",
      "operationId": "issueGetComment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete a comment",
      "operationId": "issueDeleteComment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Edit a comment",
      "operationId": "issueEditComment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/assets",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List comment's attachments",
      "operationId": "issueListIssueCommentAttachments"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/assets",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Create a comment attachment",
      "operationId": "issueCreateIssueCommentAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a comment attachment",
      "operationId": "issueGetIssueCommentAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete a comment attachment",
      "operationId": "issueDeleteIssueCommentAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Edit a comment attachment",
      "operationId": "issueEditIssueCommentAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/reactions",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a list of reactions from a comment of an issue",
      "operationId": "issueGetCommentReactions"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/reactions",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Add a reaction to a comment of an issue",
      "operationId": "issuePostCommentReaction"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/comments/{id}/reactions",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Remove a reaction from a comment of an issue",
      "operationId": "issueDeleteCommentReaction"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get an issue",
      "operationId": "issueGetIssue"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete an issue",
      "operationId": "issueDelete"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "operationId": "issueEditIssue"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/assets",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List issue's attachments",
      "operationId": "issueListIssueAttachments"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/assets",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Create an issue attachment",
      "operationId": "issueCreateIssueAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get an issue attachment",
      "operationId": "issueGetIssueAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete an issue attachment",
      "operationId": "issueDeleteIssueAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Edit an issue attachment",
      "operationId": "issueEditIssueAttachment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/blocks",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List issues that are blocked by this issue",
      "operationId": "issueListBlocks"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/blocks",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Block the issue given in the body by the issue in path",
      "operationId": "issueCreateIssueBlocking"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/blocks",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Unblock the issue given in the body by the issue in path",
      "operationId": "issueRemoveIssueBlocking"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/comments",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List all comments on an issue",
      "operationId": "issueGetComments"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/comments",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Add a comment to an issue",
      "operationId": "issueCreateComment"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/comments/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete a comment",
      "operationId": "issueDeleteCommentDeprecated"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/comments/{id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Edit a comment",
      "operationId": "issueEditCommentDeprecated"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/deadline",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.",
      "operationId": "issueEditIssueDeadline"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/dependencies",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List an issue's dependencies, i.e all issues that block this issue.",
      "operationId": "issueListIssueDependencies"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/dependencies",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Make the issue in the url depend on the issue in the form.",
      "operationId": "issueCreateIssueDependencies"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/dependencies",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Remove an issue dependency",
      "operationId": "issueRemoveIssueDependencies"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/labels",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get an issue's labels",
      "operationId": "issueGetLabels"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/labels",
      "method": "PUT",
      "tags": [
        "issue"
      ],
      "summary": "Replace an issue's labels",
      "operationId": "issueReplaceLabels"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/labels",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Add a label to an issue",
      "operationId": "issueAddLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/labels",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Remove all labels from an issue",
      "operationId": "issueClearLabels"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/labels/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Remove a label from an issue",
      "operationId": "issueRemoveLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/pin",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Pin an Issue",
      "operationId": "pinIssue"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/pin",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Unpin an Issue",
      "operationId": "unpinIssue"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/pin/{position}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Moves the Pin to the given Position",
      "operationId": "moveIssuePin"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/reactions",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a list reactions of an issue",
      "operationId": "issueGetIssueReactions"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/reactions",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Add a reaction to an issue",
      "operationId": "issuePostIssueReaction"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/reactions",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Remove a reaction from an issue",
      "operationId": "issueDeleteIssueReaction"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/stopwatch/delete",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete an issue's existing stopwatch.",
      "operationId": "issueDeleteStopWatch"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/stopwatch/start",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Start stopwatch on an issue.",
      "operationId": "issueStartStopWatch"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/stopwatch/stop",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Stop an issue's existing stopwatch.",
      "operationId": "issueStopStopWatch"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/subscriptions",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get users who subscribed on an issue.",
      "operationId": "issueSubscriptions"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/subscriptions/check",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Check if user is subscribed to an issue",
      "operationId": "issueCheckSubscription"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}",
      "method": "PUT",
      "tags": [
        "issue"
      ],
      "summary": "Subscribe user to issue",
      "operationId": "issueAddSubscription"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Unsubscribe user from issue",
      "operationId": "issueDeleteSubscription"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/timeline",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List all comments and events on an issue",
      "operationId": "issueGetCommentsAndTimeline"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/times",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "List an issue's tracked times",
      "operationId": "issueTrackedTimes"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/times",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Add tracked time to a issue",
      "operationId": "issueAddTime"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/times",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Reset a tracked time of an issue",
      "operationId": "issueResetTime"
    },
    {
      "path": "/repos/{owner}/{repo}/issues/{index}/times/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete specific tracked time",
      "operationId": "issueDeleteTime"
    },
    {
      "path": "/repos/{owner}/{repo}/labels",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get all of a repository's labels",
      "operationId": "issueListLabels"
    },
    {
      "path": "/repos/{owner}/{repo}/labels",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Create a label",
      "operationId": "issueCreateLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/labels/{id}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a single label",
      "operationId": "issueGetLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/labels/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete a label",
      "operationId": "issueDeleteLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/labels/{id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Update a label",
      "operationId": "issueEditLabel"
    },
    {
      "path": "/repos/{owner}/{repo}/milestones",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get all of a repository's opened milestones",
      "operationId": "issueGetMilestonesList"
    },
    {
      "path": "/repos/{owner}/{repo}/milestones",
      "method": "POST",
      "tags": [
        "issue"
      ],
      "summary": "Create a milestone",
      "operationId": "issueCreateMilestone"
    },
    {
      "path": "/repos/{owner}/{repo}/milestones/{id}",
      "method": "GET",
      "tags": [
        "issue"
      ],
      "summary": "Get a milestone",
      "operationId": "issueGetMilestone"
    },
    {
      "path": "/repos/{owner}/{repo}/milestones/{id}",
      "method": "DELETE",
      "tags": [
        "issue"
      ],
      "summary": "Delete a milestone",
      "operationId": "issueDeleteMilestone"
    },
    {
      "path": "/repos/{owner}/{repo}/milestones/{id}",
      "method": "PATCH",
      "tags": [
        "issue"
      ],
      "summary": "Update a milestone",
      "operationId": "issueEditMilestone"
    }
  ]
}