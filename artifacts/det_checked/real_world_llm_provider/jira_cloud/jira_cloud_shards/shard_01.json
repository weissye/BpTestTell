{
  "openapi_meta": {
    "title": "The Jira Cloud platform REST API",
    "version": "1001.0.0-SNAPSHOT-d7cdb9e836f3a625612c2e8e3dc278d686704ef9"
  },
  "instructions": "Generate LLM GOLD examples for these API operations. Return JSON: {\"gold\": [{\"path\",\"method\",\"operationId\",\"user\",\"ideal\"}...]}",
  "operations": [
    {
      "path": "/rest/api/3/announcementBanner",
      "method": "GET",
      "tags": [
        "Announcement banner"
      ],
      "summary": "Get announcement banner configuration",
      "operationId": "getBanner"
    },
    {
      "path": "/rest/api/3/app/field/value",
      "method": "POST",
      "tags": [
        "Issue custom field values (apps)"
      ],
      "summary": "Update custom fields",
      "operationId": "updateMultipleCustomFieldValues"
    },
    {
      "path": "/rest/api/3/app/field/{fieldIdOrKey}/value",
      "method": "PUT",
      "tags": [
        "Issue custom field values (apps)"
      ],
      "summary": "Update custom field value",
      "operationId": "updateCustomFieldValue"
    },
    {
      "path": "/rest/api/3/application-properties/{id}",
      "method": "PUT",
      "tags": [
        "Jira settings"
      ],
      "summary": "Set application property",
      "operationId": "setApplicationProperty"
    },
    {
      "path": "/rest/api/3/attachment/content/{id}",
      "method": "GET",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Get attachment content",
      "operationId": "getAttachmentContent"
    },
    {
      "path": "/rest/api/3/attachment/{id}",
      "method": "DELETE",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Delete attachment",
      "operationId": "removeAttachment"
    },
    {
      "path": "/rest/api/3/attachment/{id}/expand/raw",
      "method": "GET",
      "tags": [
        "Issue attachments"
      ],
      "summary": "Get contents metadata for an expanded attachment",
      "operationId": "expandAttachmentForMachines"
    },
    {
      "path": "/rest/api/3/bulk/issues/delete",
      "method": "POST",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Bulk delete issues",
      "operationId": "submitBulkDelete"
    },
    {
      "path": "/rest/api/3/bulk/issues/move",
      "method": "POST",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Bulk move issues",
      "operationId": "submitBulkMove"
    },
    {
      "path": "/rest/api/3/bulk/issues/unwatch",
      "method": "POST",
      "tags": [
        "Issue bulk operations"
      ],
      "summary": "Bulk unwatch issues",
      "operationId": "submitBulkUnwatch"
    },
    {
      "path": "/rest/api/3/changelog/bulkfetch",
      "method": "POST",
      "tags": [
        "Issues"
      ],
      "summary": "Bulk fetch changelogs",
      "operationId": "getBulkChangelogs"
    },
    {
      "path": "/rest/api/3/comment/{commentId}/properties",
      "method": "GET",
      "tags": [
        "Issue comment properties"
      ],
      "summary": "Get comment property keys",
      "operationId": "getCommentPropertyKeys"
    },
    {
      "path": "/rest/api/3/comment/{commentId}/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "Issue comment properties"
      ],
      "summary": "Set comment property",
      "operationId": "setCommentProperty"
    },
    {
      "path": "/rest/api/3/component/{id}",
      "method": "DELETE",
      "tags": [
        "Project components"
      ],
      "summary": "Delete component",
      "operationId": "deleteComponent"
    },
    {
      "path": "/rest/api/3/component/{id}/relatedIssueCounts",
      "method": "GET",
      "tags": [
        "Project components"
      ],
      "summary": "Get component issues count",
      "operationId": "getComponentRelatedIssues"
    },
    {
      "path": "/rest/api/3/configuration/timetracking",
      "method": "PUT",
      "tags": [
        "Time tracking"
      ],
      "summary": "Select time tracking provider",
      "operationId": "selectTimeTrackingImplementation"
    },
    {
      "path": "/rest/api/3/configuration/timetracking/options",
      "method": "PUT",
      "tags": [
        "Time tracking"
      ],
      "summary": "Set time tracking settings",
      "operationId": "setSharedTimeTrackingConfiguration"
    },
    {
      "path": "/rest/api/3/dashboard",
      "method": "POST",
      "tags": [
        "Dashboards"
      ],
      "summary": "Create dashboard",
      "operationId": "createDashboard"
    },
    {
      "path": "/rest/api/3/dashboard/search",
      "method": "GET",
      "tags": [
        "Dashboards"
      ],
      "summary": "Search for dashboards",
      "operationId": "getDashboardsPaginated"
    },
    {
      "path": "/rest/api/3/dashboard/{dashboardId}/gadget/{gadgetId}",
      "method": "DELETE",
      "tags": [
        "Dashboards"
      ],
      "summary": "Remove gadget from dashboard",
      "operationId": "removeGadget"
    },
    {
      "path": "/rest/api/3/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}",
      "method": "DELETE",
      "tags": [
        "Dashboards"
      ],
      "summary": "Delete dashboard item property",
      "operationId": "deleteDashboardItemProperty"
    },
    {
      "path": "/rest/api/3/dashboard/{id}",
      "method": "DELETE",
      "tags": [
        "Dashboards"
      ],
      "summary": "Delete dashboard",
      "operationId": "deleteDashboard"
    },
    {
      "path": "/rest/api/3/dashboard/{id}/copy",
      "method": "POST",
      "tags": [
        "Dashboards"
      ],
      "summary": "Copy dashboard",
      "operationId": "copyDashboard"
    },
    {
      "path": "/rest/api/3/events",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get events",
      "operationId": "getEvents"
    },
    {
      "path": "/rest/api/3/expression/evaluate",
      "method": "POST",
      "tags": [
        "Jira expressions"
      ],
      "summary": "Evaluate Jira expression using enhanced search API",
      "operationId": "evaluateJSISJiraExpression"
    },
    {
      "path": "/rest/api/3/field/association",
      "method": "DELETE",
      "tags": [
        "Issue custom field associations"
      ],
      "summary": "Remove associations",
      "operationId": "removeAssociations"
    },
    {
      "path": "/rest/api/3/field/search/trashed",
      "method": "GET",
      "tags": [
        "Issue fields"
      ],
      "summary": "Get fields in trash paginated",
      "operationId": "getTrashedFieldsPaginated"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context",
      "method": "POST",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Create custom field context",
      "operationId": "createCustomFieldContext"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/issuetypemapping",
      "method": "GET",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Get issue types for custom field context",
      "operationId": "getIssueTypeMappingsForContexts"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}",
      "method": "DELETE",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Delete custom field context",
      "operationId": "deleteCustomFieldContext"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/issuetype/remove",
      "method": "POST",
      "tags": [
        "Issue custom field contexts"
      ],
      "summary": "Remove issue types from context",
      "operationId": "removeIssueTypesFromContext"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/option",
      "method": "PUT",
      "tags": [
        "Issue custom field options"
      ],
      "summary": "Update custom field options (context)",
      "operationId": "updateCustomFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/context/{contextId}/option/{optionId}/issue",
      "method": "DELETE",
      "tags": [
        "Issue custom field options"
      ],
      "summary": "Replace custom field options",
      "operationId": "replaceCustomFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldId}/contexts",
      "method": "GET",
      "tags": [
        "Issue fields"
      ],
      "summary": "Get contexts for a field",
      "operationId": "getContextsForFieldDeprecated"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option",
      "method": "POST",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Create issue field option",
      "operationId": "createIssueFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option/{optionId}",
      "method": "DELETE",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Delete issue field option",
      "operationId": "deleteIssueFieldOption"
    },
    {
      "path": "/rest/api/3/field/{fieldKey}/option/{optionId}/issue",
      "method": "DELETE",
      "tags": [
        "Issue custom field options (apps)"
      ],
      "summary": "Replace issue field option",
      "operationId": "replaceIssueFieldOption"
    },
    {
      "path": "/rest/api/3/field/{id}/trash",
      "method": "POST",
      "tags": [
        "Issue fields"
      ],
      "summary": "Move custom field to trash",
      "operationId": "trashCustomField"
    },
    {
      "path": "/rest/api/3/fieldconfiguration/{id}",
      "method": "DELETE",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Delete field configuration",
      "operationId": "deleteFieldConfiguration"
    },
    {
      "path": "/rest/api/3/fieldconfiguration/{id}/fields",
      "method": "PUT",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Update field configuration items",
      "operationId": "updateFieldConfigurationItems"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme/mapping",
      "method": "GET",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Get field configuration issue type items",
      "operationId": "getFieldConfigurationSchemeMappings"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme/{id}",
      "method": "DELETE",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Delete field configuration scheme",
      "operationId": "deleteFieldConfigurationScheme"
    },
    {
      "path": "/rest/api/3/fieldconfigurationscheme/{id}/mapping/delete",
      "method": "POST",
      "tags": [
        "Issue field configurations"
      ],
      "summary": "Remove issue types from field configuration scheme",
      "operationId": "removeIssueTypesFromGlobalFieldConfigurationScheme"
    },
    {
      "path": "/rest/api/3/filter/defaultShareScope",
      "method": "PUT",
      "tags": [
        "Filter sharing"
      ],
      "summary": "Set default share scope",
      "operationId": "setDefaultShareScope"
    },
    {
      "path": "/rest/api/3/filter/search",
      "method": "GET",
      "tags": [
        "Filters"
      ],
      "summary": "Search for filters",
      "operationId": "getFiltersPaginated"
    },
    {
      "path": "/rest/api/3/filter/{id}",
      "method": "PUT",
      "tags": [
        "Filters"
      ],
      "summary": "Update filter",
      "operationId": "updateFilter"
    },
    {
      "path": "/rest/api/3/filter/{id}/columns",
      "method": "PUT",
      "tags": [
        "Filters"
      ],
      "summary": "Set columns",
      "operationId": "setColumns"
    },
    {
      "path": "/rest/api/3/filter/{id}/owner",
      "method": "PUT",
      "tags": [
        "Filters"
      ],
      "summary": "Change filter owner",
      "operationId": "changeFilterOwner"
    },
    {
      "path": "/rest/api/3/filter/{id}/permission/{permissionId}",
      "method": "DELETE",
      "tags": [
        "Filter sharing"
      ],
      "summary": "Delete share permission",
      "operationId": "deleteSharePermission"
    },
    {
      "path": "/rest/api/3/group",
      "method": "GET",
      "tags": [
        "Groups"
      ],
      "summary": "Get group",
      "operationId": "getGroup"
    },
    {
      "path": "/rest/api/3/group/member",
      "method": "GET",
      "tags": [
        "Groups"
      ],
      "summary": "Get users from group",
      "operationId": "getUsersFromGroup"
    },
    {
      "path": "/rest/api/3/groups/picker",
      "method": "GET",
      "tags": [
        "Groups"
      ],
      "summary": "Find groups",
      "operationId": "findGroups"
    },
    {
      "path": "/rest/api/3/issue",
      "method": "POST",
      "tags": [
        "Issues"
      ],
      "summary": "Create issue",
      "operationId": "createIssue"
    },
    {
      "path": "/rest/api/3/issue/bulk",
      "method": "POST",
      "tags": [
        "Issues"
      ],
      "summary": "Bulk create issue",
      "operationId": "createIssues"
    },
    {
      "path": "/rest/api/3/issue/createmeta/{projectIdOrKey}/issuetypes",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get create metadata issue types for a project",
      "operationId": "getCreateIssueMetaIssueTypes"
    },
    {
      "path": "/rest/api/3/issue/picker",
      "method": "GET",
      "tags": [
        "Issue search"
      ],
      "summary": "Get issue picker suggestions",
      "operationId": "getIssuePickerResource"
    },
    {
      "path": "/rest/api/3/issue/properties/{propertyKey}",
      "method": "DELETE",
      "tags": [
        "Issue properties"
      ],
      "summary": "Bulk delete issue property",
      "operationId": "bulkDeleteIssueProperty"
    },
    {
      "path": "/rest/api/3/issue/watching",
      "method": "POST",
      "tags": [
        "Issue watchers"
      ],
      "summary": "Get is watching issue bulk",
      "operationId": "getIsWatchingIssueBulk"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}",
      "method": "PUT",
      "tags": [
        "Issues"
      ],
      "summary": "Edit issue",
      "operationId": "editIssue"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/changelog",
      "method": "GET",
      "tags": [
        "Issues"
      ],
      "summary": "Get changelogs",
      "operationId": "getChangeLogs"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/comment",
      "method": "POST",
      "tags": [
        "Issue comments"
      ],
      "summary": "Add comment",
      "operationId": "addComment"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/comment/{id}",
      "method": "PUT",
      "tags": [
        "Issue comments"
      ],
      "summary": "Update comment",
      "operationId": "updateComment"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties",
      "method": "GET",
      "tags": [
        "Issue properties"
      ],
      "summary": "Get issue property keys",
      "operationId": "getIssuePropertyKeys"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "Issue properties"
      ],
      "summary": "Set issue property",
      "operationId": "setIssueProperty"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/remotelink",
      "method": "POST",
      "tags": [
        "Issue remote links"
      ],
      "summary": "Create or update remote issue link",
      "operationId": "createOrUpdateRemoteIssueLink"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/remotelink/{linkId}",
      "method": "PUT",
      "tags": [
        "Issue remote links"
      ],
      "summary": "Update remote issue link by ID",
      "operationId": "updateRemoteIssueLink"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/votes",
      "method": "DELETE",
      "tags": [
        "Issue votes"
      ],
      "summary": "Delete vote",
      "operationId": "removeVote"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/watchers",
      "method": "DELETE",
      "tags": [
        "Issue watchers"
      ],
      "summary": "Delete watcher",
      "operationId": "removeWatcher"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog",
      "method": "DELETE",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Bulk delete worklogs",
      "operationId": "bulkDeleteWorklogs"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog/move",
      "method": "POST",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Bulk move worklogs",
      "operationId": "bulkMoveWorklogs"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog/{id}",
      "method": "PUT",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Update worklog",
      "operationId": "updateWorklog"
    },
    {
      "path": "/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "Issue worklog properties"
      ],
      "summary": "Get worklog property",
      "operationId": "getWorklogProperty"
    },
    {
      "path": "/rest/api/3/issueLink/{linkId}",
      "method": "DELETE",
      "tags": [
        "Issue links"
      ],
      "summary": "Delete issue link",
      "operationId": "deleteIssueLink"
    },
    {
      "path": "/rest/api/3/issueLinkType",
      "method": "POST",
      "tags": [
        "Issue link types"
      ],
      "summary": "Create issue link type",
      "operationId": "createIssueLinkType"
    },
    {
      "path": "/rest/api/3/issueLinkType/{issueLinkTypeId}",
      "method": "PUT",
      "tags": [
        "Issue link types"
      ],
      "summary": "Update issue link type",
      "operationId": "updateIssueLinkType"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes",
      "method": "POST",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Create issue security scheme",
      "operationId": "createIssueSecurityScheme"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/level/member",
      "method": "GET",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Get issue security level members",
      "operationId": "getSecurityLevelMembers"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/search",
      "method": "GET",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Search issue security schemes",
      "operationId": "searchSecuritySchemes"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{issueSecuritySchemeId}/members",
      "method": "GET",
      "tags": [
        "Issue security level"
      ],
      "summary": "Get issue security level members by issue security scheme",
      "operationId": "getIssueSecurityLevelMembers"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}",
      "method": "DELETE",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Remove issue security level",
      "operationId": "removeLevel"
    },
    {
      "path": "/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}/member/{memberId}",
      "method": "DELETE",
      "tags": [
        "Issue security schemes"
      ],
      "summary": "Remove member from issue security level",
      "operationId": "removeMemberFromSecurityLevel"
    },
    {
      "path": "/rest/api/3/issuetype/project",
      "method": "GET",
      "tags": [
        "Issue types"
      ],
      "summary": "Get issue types for project",
      "operationId": "getIssueTypesForProject"
    },
    {
      "path": "/rest/api/3/issuetype/{id}",
      "method": "PUT",
      "tags": [
        "Issue types"
      ],
      "summary": "Update issue type",
      "operationId": "updateIssueType"
    },
    {
      "path": "/rest/api/3/issuetype/{issueTypeId}/properties",
      "method": "GET",
      "tags": [
        "Issue type properties"
      ],
      "summary": "Get issue type property keys",
      "operationId": "getIssueTypePropertyKeys"
    },
    {
      "path": "/rest/api/3/issuetype/{issueTypeId}/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "Issue type properties"
      ],
      "summary": "Set issue type property",
      "operationId": "setIssueTypeProperty"
    },
    {
      "path": "/rest/api/3/issuetypescheme/mapping",
      "method": "GET",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Get issue type scheme items",
      "operationId": "getIssueTypeSchemesMapping"
    },
    {
      "path": "/rest/api/3/issuetypescheme/{issueTypeSchemeId}",
      "method": "DELETE",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Delete issue type scheme",
      "operationId": "deleteIssueTypeScheme"
    },
    {
      "path": "/rest/api/3/issuetypescheme/{issueTypeSchemeId}/issuetype/move",
      "method": "PUT",
      "tags": [
        "Issue type schemes"
      ],
      "summary": "Change order of issue types",
      "operationId": "reorderIssueTypesInIssueTypeScheme"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme",
      "method": "POST",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Create issue type screen scheme",
      "operationId": "createIssueTypeScreenScheme"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/project",
      "method": "PUT",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Assign issue type screen scheme to project",
      "operationId": "assignIssueTypeScreenSchemeToProject"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/{issueTypeScreenSchemeId}/mapping",
      "method": "PUT",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Append mappings to issue type screen scheme",
      "operationId": "appendMappingsForIssueTypeScreenScheme"
    },
    {
      "path": "/rest/api/3/issuetypescreenscheme/{issueTypeScreenSchemeId}/project",
      "method": "GET",
      "tags": [
        "Issue type screen schemes"
      ],
      "summary": "Get issue type screen scheme projects",
      "operationId": "getProjectsForIssueTypeScreenScheme"
    },
    {
      "path": "/rest/api/3/jql/autocompletedata/suggestions",
      "method": "GET",
      "tags": [
        "JQL"
      ],
      "summary": "Get field auto complete suggestions",
      "operationId": "getFieldAutoCompleteForQueryString"
    },
    {
      "path": "/rest/api/3/jql/function/computation/search",
      "method": "POST",
      "tags": [
        "JQL functions (apps)"
      ],
      "summary": "Get precomputations by ID (apps)",
      "operationId": "getPrecomputationsByID"
    },
    {
      "path": "/rest/api/3/jql/pdcleaner",
      "method": "POST",
      "tags": [
        "JQL"
      ],
      "summary": "Convert user identifiers to account IDs in JQL queries",
      "operationId": "migrateQueries"
    },
    {
      "path": "/rest/api/3/license/approximateLicenseCount",
      "method": "GET",
      "tags": [
        "License metrics"
      ],
      "summary": "Get approximate license count",
      "operationId": "getApproximateLicenseCount"
    },
    {
      "path": "/rest/api/3/mypreferences",
      "method": "DELETE",
      "tags": [
        "Myself"
      ],
      "summary": "Delete preference",
      "operationId": "removePreference"
    },
    {
      "path": "/rest/api/3/mypreferences/locale",
      "method": "GET",
      "tags": [
        "Myself"
      ],
      "summary": "Get locale",
      "operationId": "getLocale"
    },
    {
      "path": "/rest/api/3/notificationscheme",
      "method": "GET",
      "tags": [
        "Issue notification schemes"
      ],
      "summary": "Get notification schemes paginated",
      "operationId": "getNotificationSchemes"
    },
    {
      "path": "/rest/api/3/notificationscheme/{id}",
      "method": "GET",
      "tags": [
        "Issue notification schemes"
      ],
      "summary": "Get notification scheme",
      "operationId": "getNotificationScheme"
    },
    {
      "path": "/rest/api/3/notificationscheme/{notificationSchemeId}",
      "method": "DELETE",
      "tags": [
        "Issue notification schemes"
      ],
      "summary": "Delete notification scheme",
      "operationId": "deleteNotificationScheme"
    },
    {
      "path": "/rest/api/3/permissions/check",
      "method": "POST",
      "tags": [
        "Permissions"
      ],
      "summary": "Get bulk permissions",
      "operationId": "getBulkPermissions"
    },
    {
      "path": "/rest/api/3/permissionscheme",
      "method": "POST",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Create permission scheme",
      "operationId": "createPermissionScheme"
    },
    {
      "path": "/rest/api/3/permissionscheme/{schemeId}",
      "method": "PUT",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Update permission scheme",
      "operationId": "updatePermissionScheme"
    },
    {
      "path": "/rest/api/3/permissionscheme/{schemeId}/permission/{permissionId}",
      "method": "DELETE",
      "tags": [
        "Permission schemes"
      ],
      "summary": "Delete permission scheme grant",
      "operationId": "deletePermissionSchemeEntity"
    },
    {
      "path": "/rest/api/3/plans/plan",
      "method": "POST",
      "tags": [
        "Plans"
      ],
      "summary": "Create plan",
      "operationId": "createPlan"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/archive",
      "method": "PUT",
      "tags": [
        "Plans"
      ],
      "summary": "Archive plan",
      "operationId": "archivePlan"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team/atlassian",
      "method": "POST",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Add Atlassian team to plan",
      "operationId": "addAtlassianTeam"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team/atlassian/{atlassianTeamId}",
      "method": "PUT",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Update Atlassian team in plan",
      "operationId": "updateAtlassianTeam"
    },
    {
      "path": "/rest/api/3/plans/plan/{planId}/team/planonly/{planOnlyTeamId}",
      "method": "GET",
      "tags": [
        "Teams in plan"
      ],
      "summary": "Get plan-only team",
      "operationId": "getPlanOnlyTeam"
    },
    {
      "path": "/rest/api/3/priority",
      "method": "GET",
      "tags": [
        "Issue priorities"
      ],
      "summary": "Get priorities",
      "operationId": "getPriorities"
    },
    {
      "path": "/rest/api/3/priority/move",
      "method": "PUT",
      "tags": [
        "Issue priorities"
      ],
      "summary": "Move priorities",
      "operationId": "movePriorities"
    },
    {
      "path": "/rest/api/3/priority/{id}",
      "method": "GET",
      "tags": [
        "Issue priorities"
      ],
      "summary": "Get priority",
      "operationId": "getPriority"
    },
    {
      "path": "/rest/api/3/priorityscheme",
      "method": "POST",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Create priority scheme",
      "operationId": "createPriorityScheme"
    },
    {
      "path": "/rest/api/3/priorityscheme/{schemeId}",
      "method": "DELETE",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Delete priority scheme",
      "operationId": "deletePriorityScheme"
    },
    {
      "path": "/rest/api/3/priorityscheme/{schemeId}/projects",
      "method": "GET",
      "tags": [
        "Priority schemes"
      ],
      "summary": "Get projects by priority scheme",
      "operationId": "getProjectsByPriorityScheme"
    },
    {
      "path": "/rest/api/3/project-template",
      "method": "POST",
      "tags": [
        "Project templates"
      ],
      "summary": "Create custom project",
      "operationId": "createProjectWithCustomTemplate"
    },
    {
      "path": "/rest/api/3/project-template/remove-template",
      "method": "DELETE",
      "tags": [
        "Project templates"
      ],
      "summary": "Deletes a custom project template",
      "operationId": "removeTemplate"
    },
    {
      "path": "/rest/api/3/project/search",
      "method": "GET",
      "tags": [
        "Projects"
      ],
      "summary": "Get projects paginated",
      "operationId": "searchProjects"
    },
    {
      "path": "/rest/api/3/project/type/{projectTypeKey}",
      "method": "GET",
      "tags": [
        "Project types"
      ],
      "summary": "Get project type by key",
      "operationId": "getProjectTypeByKey"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}",
      "method": "GET",
      "tags": [
        "Projects"
      ],
      "summary": "Get project",
      "operationId": "getProject"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/avatar",
      "method": "PUT",
      "tags": [
        "Project avatars"
      ],
      "summary": "Set project avatar",
      "operationId": "updateProjectAvatar"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/avatars",
      "method": "GET",
      "tags": [
        "Project avatars"
      ],
      "summary": "Get all project avatars",
      "operationId": "getAllProjectAvatars"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/classification-level/default",
      "method": "PUT",
      "tags": [
        "Project classification levels"
      ],
      "summary": "Update the default data classification level of a project",
      "operationId": "updateDefaultProjectClassification"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/delete",
      "method": "POST",
      "tags": [
        "Projects"
      ],
      "summary": "Delete project asynchronously",
      "operationId": "deleteProjectAsynchronously"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/properties",
      "method": "GET",
      "tags": [
        "Project properties"
      ],
      "summary": "Get project property keys",
      "operationId": "getProjectPropertyKeys"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "Project properties"
      ],
      "summary": "Set project property",
      "operationId": "setProjectProperty"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/role/{id}",
      "method": "DELETE",
      "tags": [
        "Project role actors"
      ],
      "summary": "Delete actors from project role",
      "operationId": "deleteActor"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/role/{id}",
      "method": "PUT",
      "tags": [
        "Project role actors"
      ],
      "summary": "Set actors for project role",
      "operationId": "setActors"
    },
    {
      "path": "/rest/api/3/project/{projectIdOrKey}/version",
      "method": "GET",
      "tags": [
        "Project versions"
      ],
      "summary": "Get project versions paginated",
      "operationId": "getProjectVersionsPaginated"
    },
    {
      "path": "/rest/api/3/project/{projectId}/email",
      "method": "PUT",
      "tags": [
        "Project email"
      ],
      "summary": "Set project's sender email",
      "operationId": "updateProjectEmail"
    },
    {
      "path": "/rest/api/3/project/{projectKeyOrId}/notificationscheme",
      "method": "GET",
      "tags": [
        "Projects"
      ],
      "summary": "Get project notification scheme",
      "operationId": "getNotificationSchemeForProject"
    },
    {
      "path": "/rest/api/3/project/{projectKeyOrId}/securitylevel",
      "method": "GET",
      "tags": [
        "Project permission schemes"
      ],
      "summary": "Get project issue security levels",
      "operationId": "getSecurityLevelsForProject"
    },
    {
      "path": "/rest/api/3/projectCategory/{id}",
      "method": "DELETE",
      "tags": [
        "Project categories"
      ],
      "summary": "Delete project category",
      "operationId": "removeProjectCategory"
    },
    {
      "path": "/rest/api/3/projectvalidate/key",
      "method": "GET",
      "tags": [
        "Project key and name validation"
      ],
      "summary": "Validate project key",
      "operationId": "validateProjectKey"
    },
    {
      "path": "/rest/api/3/redact",
      "method": "POST",
      "tags": [
        "Issue redaction"
      ],
      "summary": "Redact",
      "operationId": "redact"
    },
    {
      "path": "/rest/api/3/resolution",
      "method": "POST",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Create resolution",
      "operationId": "createResolution"
    },
    {
      "path": "/rest/api/3/resolution/search",
      "method": "GET",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Search resolutions",
      "operationId": "searchResolutions"
    },
    {
      "path": "/rest/api/3/resolution/{id}",
      "method": "PUT",
      "tags": [
        "Issue resolutions"
      ],
      "summary": "Update resolution",
      "operationId": "updateResolution"
    },
    {
      "path": "/rest/api/3/role/{id}",
      "method": "DELETE",
      "tags": [
        "Project roles"
      ],
      "summary": "Delete project role",
      "operationId": "deleteProjectRole"
    },
    {
      "path": "/rest/api/3/role/{id}",
      "method": "PUT",
      "tags": [
        "Project roles"
      ],
      "summary": "Fully update project role",
      "operationId": "fullyUpdateProjectRole"
    },
    {
      "path": "/rest/api/3/role/{id}/actors",
      "method": "POST",
      "tags": [
        "Project role actors"
      ],
      "summary": "Add default actors to project role",
      "operationId": "addProjectRoleActorsToRole"
    },
    {
      "path": "/rest/api/3/screens/addToDefault/{fieldId}",
      "method": "POST",
      "tags": [
        "Screens"
      ],
      "summary": "Add field to default screen",
      "operationId": "addFieldToDefaultScreen"
    },
    {
      "path": "/rest/api/3/screens/{screenId}",
      "method": "PUT",
      "tags": [
        "Screens"
      ],
      "summary": "Update screen",
      "operationId": "updateScreen"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs",
      "method": "POST",
      "tags": [
        "Screen tabs"
      ],
      "summary": "Create screen tab",
      "operationId": "addScreenTab"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs/{tabId}/fields",
      "method": "GET",
      "tags": [
        "Screen tab fields"
      ],
      "summary": "Get all screen tab fields",
      "operationId": "getAllScreenTabFields"
    },
    {
      "path": "/rest/api/3/screens/{screenId}/tabs/{tabId}/fields/{id}/move",
      "method": "POST",
      "tags": [
        "Screen tab fields"
      ],
      "summary": "Move screen tab field",
      "operationId": "moveScreenTabField"
    },
    {
      "path": "/rest/api/3/screenscheme",
      "method": "POST",
      "tags": [
        "Screen schemes"
      ],
      "summary": "Create screen scheme",
      "operationId": "createScreenScheme"
    },
    {
      "path": "/rest/api/3/search",
      "method": "GET",
      "tags": [
        "Issue search"
      ],
      "summary": "Currently being removed. Search for issues using JQL (GET)",
      "operationId": "searchForIssuesUsingJql"
    },
    {
      "path": "/rest/api/3/search/jql",
      "method": "GET",
      "tags": [
        "Issue search"
      ],
      "summary": "Search for issues using JQL enhanced search (GET)",
      "operationId": "searchAndReconsileIssuesUsingJql"
    },
    {
      "path": "/rest/api/3/serverInfo",
      "method": "GET",
      "tags": [
        "Server info"
      ],
      "summary": "Get Jira instance info",
      "operationId": "getServerInfo"
    },
    {
      "path": "/rest/api/3/status",
      "method": "GET",
      "tags": [
        "Workflow statuses"
      ],
      "summary": "Get all statuses",
      "operationId": "getStatuses"
    },
    {
      "path": "/rest/api/3/statuscategory/{idOrKey}",
      "method": "GET",
      "tags": [
        "Workflow status categories"
      ],
      "summary": "Get status category",
      "operationId": "getStatusCategory"
    },
    {
      "path": "/rest/api/3/statuses",
      "method": "POST",
      "tags": [
        "Status"
      ],
      "summary": "Bulk create statuses",
      "operationId": "createStatuses"
    },
    {
      "path": "/rest/api/3/statuses/search",
      "method": "GET",
      "tags": [
        "Status"
      ],
      "summary": "Search statuses paginated",
      "operationId": "search"
    },
    {
      "path": "/rest/api/3/statuses/{statusId}/workflowUsages",
      "method": "GET",
      "tags": [
        "Status"
      ],
      "summary": "Get workflow usages by status",
      "operationId": "getWorkflowUsagesForStatus"
    },
    {
      "path": "/rest/api/3/uiModifications",
      "method": "GET",
      "tags": [
        "UI modifications (apps)"
      ],
      "summary": "Get UI modifications",
      "operationId": "getUiModifications"
    },
    {
      "path": "/rest/api/3/uiModifications/{uiModificationId}",
      "method": "PUT",
      "tags": [
        "UI modifications (apps)"
      ],
      "summary": "Update UI modification",
      "operationId": "updateUiModification"
    },
    {
      "path": "/rest/api/3/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}",
      "method": "DELETE",
      "tags": [
        "Avatars"
      ],
      "summary": "Delete avatar",
      "operationId": "deleteAvatar"
    },
    {
      "path": "/rest/api/3/universal_avatar/view/type/{type}/owner/{entityId}",
      "method": "GET",
      "tags": [
        "Avatars"
      ],
      "summary": "Get avatar image by owner",
      "operationId": "getAvatarImageByOwner"
    },
    {
      "path": "/rest/api/3/user",
      "method": "POST",
      "tags": [
        "Users"
      ],
      "summary": "Create user",
      "operationId": "createUser"
    },
    {
      "path": "/rest/api/3/user/bulk",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Bulk get users",
      "operationId": "bulkGetUsers"
    },
    {
      "path": "/rest/api/3/user/columns",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get user default columns",
      "operationId": "getUserDefaultColumns"
    },
    {
      "path": "/rest/api/3/user/email/bulk",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get user email bulk",
      "operationId": "getUserEmailBulk"
    },
    {
      "path": "/rest/api/3/user/nav4-opt-property/{propertyKey}",
      "method": "PUT",
      "tags": [
        "usernavproperties"
      ],
      "summary": "Set user nav property",
      "operationId": "setUserNavProperty"
    },
    {
      "path": "/rest/api/3/user/properties",
      "method": "GET",
      "tags": [
        "User properties"
      ],
      "summary": "Get user property keys",
      "operationId": "getUserPropertyKeys"
    },
    {
      "path": "/rest/api/3/user/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "User properties"
      ],
      "summary": "Set user property",
      "operationId": "setUserProperty"
    },
    {
      "path": "/rest/api/3/user/search/query/key",
      "method": "GET",
      "tags": [
        "User search"
      ],
      "summary": "Find user keys by query",
      "operationId": "findUserKeysByQuery"
    },
    {
      "path": "/rest/api/3/users/search",
      "method": "GET",
      "tags": [
        "Users"
      ],
      "summary": "Get all users",
      "operationId": "getAllUsers"
    },
    {
      "path": "/rest/api/3/version/{id}",
      "method": "GET",
      "tags": [
        "Project versions"
      ],
      "summary": "Get version",
      "operationId": "getVersion"
    },
    {
      "path": "/rest/api/3/version/{id}/move",
      "method": "POST",
      "tags": [
        "Project versions"
      ],
      "summary": "Move version",
      "operationId": "moveVersion"
    },
    {
      "path": "/rest/api/3/version/{id}/relatedwork",
      "method": "POST",
      "tags": [
        "Project versions"
      ],
      "summary": "Create related work",
      "operationId": "createRelatedWork"
    },
    {
      "path": "/rest/api/3/version/{id}/unresolvedIssueCount",
      "method": "GET",
      "tags": [
        "Project versions"
      ],
      "summary": "Get version's unresolved issues count",
      "operationId": "getVersionUnresolvedIssues"
    },
    {
      "path": "/rest/api/3/webhook",
      "method": "GET",
      "tags": [
        "Webhooks"
      ],
      "summary": "Get dynamic webhooks for app",
      "operationId": "getDynamicWebhooksForApp"
    },
    {
      "path": "/rest/api/3/webhook/refresh",
      "method": "PUT",
      "tags": [
        "Webhooks"
      ],
      "summary": "Extend webhook life",
      "operationId": "refreshWebhooks"
    },
    {
      "path": "/rest/api/3/workflow/rule/config",
      "method": "GET",
      "tags": [
        "Workflow transition rules"
      ],
      "summary": "Get workflow transition rule configurations",
      "operationId": "getWorkflowTransitionRuleConfigurations"
    },
    {
      "path": "/rest/api/3/workflow/search",
      "method": "GET",
      "tags": [
        "Workflows"
      ],
      "summary": "Get workflows paginated",
      "operationId": "getWorkflowsPaginated"
    },
    {
      "path": "/rest/api/3/workflow/transitions/{transitionId}/properties",
      "method": "POST",
      "tags": [
        "Workflow transition properties"
      ],
      "summary": "Create workflow transition property",
      "operationId": "createWorkflowTransitionProperty"
    },
    {
      "path": "/rest/api/3/workflow/{workflowId}/project/{projectId}/issueTypeUsages",
      "method": "GET",
      "tags": [
        "Workflows"
      ],
      "summary": "Get issue types in a project that are using a given workflow",
      "operationId": "getWorkflowProjectIssueTypeUsages"
    },
    {
      "path": "/rest/api/3/workflows",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Bulk get workflows",
      "operationId": "readWorkflows"
    },
    {
      "path": "/rest/api/3/workflows/create/validation",
      "method": "POST",
      "tags": [
        "Workflows"
      ],
      "summary": "Validate create workflows",
      "operationId": "validateCreateWorkflows"
    },
    {
      "path": "/rest/api/3/workflows/search",
      "method": "GET",
      "tags": [
        "Workflows"
      ],
      "summary": "Search workflows",
      "operationId": "searchWorkflows"
    },
    {
      "path": "/rest/api/3/workflowscheme",
      "method": "GET",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Get all workflow schemes",
      "operationId": "getAllWorkflowSchemes"
    },
    {
      "path": "/rest/api/3/workflowscheme/project",
      "method": "PUT",
      "tags": [
        "Workflow scheme project associations"
      ],
      "summary": "Assign workflow scheme to project",
      "operationId": "assignSchemeToProject"
    },
    {
      "path": "/rest/api/3/workflowscheme/update/mappings",
      "method": "POST",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Get required status mappings for workflow scheme update",
      "operationId": "updateWorkflowSchemeMappings"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}",
      "method": "PUT",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Classic update workflow scheme",
      "operationId": "updateWorkflowScheme"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/default",
      "method": "GET",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Get default workflow",
      "operationId": "getDefaultWorkflow"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft",
      "method": "GET",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Get draft workflow scheme",
      "operationId": "getWorkflowSchemeDraft"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/default",
      "method": "GET",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Get draft default workflow",
      "operationId": "getDraftDefaultWorkflow"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/issuetype/{issueType}",
      "method": "GET",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Get workflow for issue type in draft workflow scheme",
      "operationId": "getWorkflowSchemeDraftIssueType"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/draft/workflow",
      "method": "DELETE",
      "tags": [
        "Workflow scheme drafts"
      ],
      "summary": "Delete issue types for workflow in draft workflow scheme",
      "operationId": "deleteDraftWorkflowMapping"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/issuetype/{issueType}",
      "method": "DELETE",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Delete workflow for issue type in workflow scheme",
      "operationId": "deleteWorkflowSchemeIssueType"
    },
    {
      "path": "/rest/api/3/workflowscheme/{id}/workflow",
      "method": "DELETE",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Delete issue types for workflow in workflow scheme",
      "operationId": "deleteWorkflowMapping"
    },
    {
      "path": "/rest/api/3/workflowscheme/{workflowSchemeId}/projectUsages",
      "method": "GET",
      "tags": [
        "Workflow schemes"
      ],
      "summary": "Get projects which are using a given workflow scheme",
      "operationId": "getProjectUsagesForWorkflowScheme"
    },
    {
      "path": "/rest/api/3/worklog/updated",
      "method": "GET",
      "tags": [
        "Issue worklogs"
      ],
      "summary": "Get IDs of updated worklogs",
      "operationId": "getIdsOfWorklogsModifiedSince"
    },
    {
      "path": "/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}",
      "method": "GET",
      "tags": [
        "App properties"
      ],
      "summary": "Get app property",
      "operationId": "AddonPropertiesResource.getAddonProperty_get"
    },
    {
      "path": "/rest/atlassian-connect/1/app/module/dynamic",
      "method": "GET",
      "tags": [
        "Dynamic modules"
      ],
      "summary": "Get modules",
      "operationId": "DynamicModulesResource.getModules_get"
    },
    {
      "path": "/rest/atlassian-connect/1/migration/properties/{entityType}",
      "method": "PUT",
      "tags": [
        "App migration"
      ],
      "summary": "Bulk update entity properties",
      "operationId": "MigrationResource.updateEntityPropertiesValue_put"
    },
    {
      "path": "/rest/forge/1/app/properties",
      "method": "GET",
      "tags": [
        "App properties"
      ],
      "summary": "Get app property keys (Forge)",
      "operationId": "getForgeAppPropertyKeys"
    },
    {
      "path": "/rest/forge/1/app/properties/{propertyKey}",
      "method": "PUT",
      "tags": [
        "App properties"
      ],
      "summary": "Set app property (Forge)",
      "operationId": "putForgeAppProperty"
    }
  ]
}