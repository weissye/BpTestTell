{
  "api_name": "stripe",
  "spec_file": "openapi.yaml",
  "shard_index": 1,
  "total_shards": 3,
  "instructions": "Generate non-deterministic GOLD examples for the operations listed in 'operations'. Return strict JSON with a top-level key 'gold' (array).",
  "operations": [
    {
      "operationId": "GetAccount",
      "method": "GET",
      "path": "/v1/account",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve account",
      "description": "<p>Retrieves the details of an account.</p>"
    },
    {
      "operationId": "PostAccountLinks",
      "method": "POST",
      "path": "/v1/account_links",
      "tags": [
        "untagged"
      ],
      "summary": "Create an account link",
      "description": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>"
    },
    {
      "operationId": "PostAccountSessions",
      "method": "POST",
      "path": "/v1/account_sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create an Account Session",
      "description": "<p>Creates a AccountSession object that includes a single-use token that the platform can use on their front-end to grant client-side API access.</p>"
    },
    {
      "operationId": "GetAccounts",
      "method": "GET",
      "path": "/v1/accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List all connected accounts",
      "description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>"
    },
    {
      "operationId": "PostAccounts",
      "method": "POST",
      "path": "/v1/accounts",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>\n\n<p>If you’ve already collected information for your connected accounts, you <a href=\"/docs/connect/best-practices#onboarding\">can prefill that information</a> when\ncreating the account. Connect Onboarding won’t ask for the prefilled information during account onboarding.\nYou can prefill any information on the account.</p>"
    },
    {
      "operationId": "DeleteAccountsAccount",
      "method": "DELETE",
      "path": "/v1/accounts/{account}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete an account",
      "description": "<p>With <a href=\"/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Test-mode accounts can be deleted at any time.</p>\n\n<p>Live-mode accounts that have access to the standard dashboard and Stripe is responsible for negative account balances cannot be deleted, which includes Standard accounts. All other Live-mode accounts, can be deleted when all <a href=\"/api/balance/balance_object\">balances</a> are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">account information tab in your account settings</a> instead.</p>"
    },
    {
      "operationId": "GetAccountsAccount",
      "method": "GET",
      "path": "/v1/accounts/{account}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve account",
      "description": "<p>Retrieves the details of an account.</p>"
    },
    {
      "operationId": "PostAccountsAccount",
      "method": "POST",
      "path": "/v1/accounts/{account}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an account",
      "description": "<p>Updates a <a href=\"/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are\nleft unchanged.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>application</code>, which includes Custom accounts, you can update any information on the account.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>stripe</code>, which includes Standard and Express accounts, you can update all information until you create\nan <a href=\"/api/account_links\">Account Link</a> or <a href=\"/api/account_sessions\">Account Session</a> to start Connect onboarding,\nafter which some properties can no longer be updated.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">Dashboard</a>. Refer to our\n<a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>"
    },
    {
      "operationId": "PostAccountsAccountBankAccounts",
      "method": "POST",
      "path": "/v1/accounts/{account}/bank_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "Create an external account",
      "description": "<p>Create an external account for a given account.</p>"
    },
    {
      "operationId": "DeleteAccountsAccountBankAccountsId",
      "method": "DELETE",
      "path": "/v1/accounts/{account}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete an external account",
      "description": "<p>Delete a specified external account for a given account.</p>"
    },
    {
      "operationId": "GetAccountsAccountBankAccountsId",
      "method": "GET",
      "path": "/v1/accounts/{account}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an external account",
      "description": "<p>Retrieve a specified external account for a given account.</p>"
    },
    {
      "operationId": "PostAccountsAccountBankAccountsId",
      "method": "POST",
      "path": "/v1/accounts/{account}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>"
    },
    {
      "operationId": "GetAccountsAccountCapabilities",
      "method": "GET",
      "path": "/v1/accounts/{account}/capabilities",
      "tags": [
        "untagged"
      ],
      "summary": "List all account capabilities",
      "description": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>"
    },
    {
      "operationId": "GetAccountsAccountCapabilitiesCapability",
      "method": "GET",
      "path": "/v1/accounts/{account}/capabilities/{capability}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an Account Capability",
      "description": "<p>Retrieves information about the specified Account Capability.</p>"
    },
    {
      "operationId": "PostAccountsAccountCapabilitiesCapability",
      "method": "POST",
      "path": "/v1/accounts/{account}/capabilities/{capability}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an Account Capability",
      "description": "<p>Updates an existing Account Capability. Request or remove a capability by updating its <code>requested</code> parameter.</p>"
    },
    {
      "operationId": "GetAccountsAccountExternalAccounts",
      "method": "GET",
      "path": "/v1/accounts/{account}/external_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List all external accounts",
      "description": "<p>List external accounts for an account.</p>"
    },
    {
      "operationId": "PostAccountsAccountExternalAccounts",
      "method": "POST",
      "path": "/v1/accounts/{account}/external_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "Create an external account",
      "description": "<p>Create an external account for a given account.</p>"
    },
    {
      "operationId": "DeleteAccountsAccountExternalAccountsId",
      "method": "DELETE",
      "path": "/v1/accounts/{account}/external_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete an external account",
      "description": "<p>Delete a specified external account for a given account.</p>"
    },
    {
      "operationId": "GetAccountsAccountExternalAccountsId",
      "method": "GET",
      "path": "/v1/accounts/{account}/external_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an external account",
      "description": "<p>Retrieve a specified external account for a given account.</p>"
    },
    {
      "operationId": "PostAccountsAccountExternalAccountsId",
      "method": "POST",
      "path": "/v1/accounts/{account}/external_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>"
    },
    {
      "operationId": "PostAccountsAccountLoginLinks",
      "method": "POST",
      "path": "/v1/accounts/{account}/login_links",
      "tags": [
        "untagged"
      ],
      "summary": "Create a login link",
      "description": "<p>Creates a login link for a connected account to access the Express Dashboard.</p>\n\n<p><strong>You can only create login links for accounts that use the <a href=\"/connect/express-dashboard\">Express Dashboard</a> and are connected to your platform</strong>.</p>"
    },
    {
      "operationId": "GetAccountsAccountPeople",
      "method": "GET",
      "path": "/v1/accounts/{account}/people",
      "tags": [
        "untagged"
      ],
      "summary": "List all persons",
      "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>"
    },
    {
      "operationId": "PostAccountsAccountPeople",
      "method": "POST",
      "path": "/v1/accounts/{account}/people",
      "tags": [
        "untagged"
      ],
      "summary": "Create a person",
      "description": "<p>Creates a new person.</p>"
    },
    {
      "operationId": "DeleteAccountsAccountPeoplePerson",
      "method": "DELETE",
      "path": "/v1/accounts/{account}/people/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a person",
      "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>"
    },
    {
      "operationId": "GetAccountsAccountPeoplePerson",
      "method": "GET",
      "path": "/v1/accounts/{account}/people/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a person",
      "description": "<p>Retrieves an existing person.</p>"
    },
    {
      "operationId": "PostAccountsAccountPeoplePerson",
      "method": "POST",
      "path": "/v1/accounts/{account}/people/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a person",
      "description": "<p>Updates an existing person.</p>"
    },
    {
      "operationId": "GetAccountsAccountPersons",
      "method": "GET",
      "path": "/v1/accounts/{account}/persons",
      "tags": [
        "untagged"
      ],
      "summary": "List all persons",
      "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>"
    },
    {
      "operationId": "PostAccountsAccountPersons",
      "method": "POST",
      "path": "/v1/accounts/{account}/persons",
      "tags": [
        "untagged"
      ],
      "summary": "Create a person",
      "description": "<p>Creates a new person.</p>"
    },
    {
      "operationId": "DeleteAccountsAccountPersonsPerson",
      "method": "DELETE",
      "path": "/v1/accounts/{account}/persons/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a person",
      "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>"
    },
    {
      "operationId": "GetAccountsAccountPersonsPerson",
      "method": "GET",
      "path": "/v1/accounts/{account}/persons/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a person",
      "description": "<p>Retrieves an existing person.</p>"
    },
    {
      "operationId": "PostAccountsAccountPersonsPerson",
      "method": "POST",
      "path": "/v1/accounts/{account}/persons/{person}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a person",
      "description": "<p>Updates an existing person.</p>"
    },
    {
      "operationId": "PostAccountsAccountReject",
      "method": "POST",
      "path": "/v1/accounts/{account}/reject",
      "tags": [
        "untagged"
      ],
      "summary": "Reject an account",
      "description": "<p>With <a href=\"/connect\">Connect</a>, you can reject accounts that you have flagged as suspicious.</p>\n\n<p>Only accounts where your platform is liable for negative account balances, which includes Custom and Express accounts, can be rejected. Test-mode accounts can be rejected at any time. Live-mode accounts can only be rejected after all balances are zero.</p>"
    },
    {
      "operationId": "GetApplePayDomains",
      "method": "GET",
      "path": "/v1/apple_pay/domains",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>List apple pay domains.</p>"
    },
    {
      "operationId": "PostApplePayDomains",
      "method": "POST",
      "path": "/v1/apple_pay/domains",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Create an apple pay domain.</p>"
    },
    {
      "operationId": "DeleteApplePayDomainsDomain",
      "method": "DELETE",
      "path": "/v1/apple_pay/domains/{domain}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Delete an apple pay domain.</p>"
    },
    {
      "operationId": "GetApplePayDomainsDomain",
      "method": "GET",
      "path": "/v1/apple_pay/domains/{domain}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Retrieve an apple pay domain.</p>"
    },
    {
      "operationId": "GetApplicationFees",
      "method": "GET",
      "path": "/v1/application_fees",
      "tags": [
        "untagged"
      ],
      "summary": "List all application fees",
      "description": "<p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>"
    },
    {
      "operationId": "GetApplicationFeesFeeRefundsId",
      "method": "GET",
      "path": "/v1/application_fees/{fee}/refunds/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an application fee refund",
      "description": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>"
    },
    {
      "operationId": "PostApplicationFeesFeeRefundsId",
      "method": "POST",
      "path": "/v1/application_fees/{fee}/refunds/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an application fee refund",
      "description": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>"
    },
    {
      "operationId": "GetApplicationFeesId",
      "method": "GET",
      "path": "/v1/application_fees/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an application fee",
      "description": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>"
    },
    {
      "operationId": "PostApplicationFeesIdRefund",
      "method": "POST",
      "path": "/v1/application_fees/{id}/refund",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": ""
    },
    {
      "operationId": "GetApplicationFeesIdRefunds",
      "method": "GET",
      "path": "/v1/application_fees/{id}/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "List all application fee refunds",
      "description": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>"
    },
    {
      "operationId": "PostApplicationFeesIdRefunds",
      "method": "POST",
      "path": "/v1/application_fees/{id}/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "Create an application fee refund",
      "description": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can’t be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>"
    },
    {
      "operationId": "GetAppsSecrets",
      "method": "GET",
      "path": "/v1/apps/secrets",
      "tags": [
        "untagged"
      ],
      "summary": "List secrets",
      "description": "<p>List all secrets stored on the given scope.</p>"
    },
    {
      "operationId": "PostAppsSecrets",
      "method": "POST",
      "path": "/v1/apps/secrets",
      "tags": [
        "untagged"
      ],
      "summary": "Set a Secret",
      "description": "<p>Create or replace a secret in the secret store.</p>"
    },
    {
      "operationId": "PostAppsSecretsDelete",
      "method": "POST",
      "path": "/v1/apps/secrets/delete",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a Secret",
      "description": "<p>Deletes a secret from the secret store by name and scope.</p>"
    },
    {
      "operationId": "GetAppsSecretsFind",
      "method": "GET",
      "path": "/v1/apps/secrets/find",
      "tags": [
        "untagged"
      ],
      "summary": "Find a Secret",
      "description": "<p>Finds a secret in the secret store by name and scope.</p>"
    },
    {
      "operationId": "GetBalance",
      "method": "GET",
      "path": "/v1/balance",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve balance",
      "description": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>"
    },
    {
      "operationId": "GetBalanceHistory",
      "method": "GET",
      "path": "/v1/balance/history",
      "tags": [
        "untagged"
      ],
      "summary": "List all balance transactions",
      "description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>"
    },
    {
      "operationId": "GetBalanceHistoryId",
      "method": "GET",
      "path": "/v1/balance/history/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a balance transaction",
      "description": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>"
    },
    {
      "operationId": "GetBalanceSettings",
      "method": "GET",
      "path": "/v1/balance_settings",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve balance settings",
      "description": "<p>Retrieves balance settings for a given connected account.\n Related guide: <a href=\"/connect/authentication\">Making API calls for connected accounts</a></p>"
    },
    {
      "operationId": "PostBalanceSettings",
      "method": "POST",
      "path": "/v1/balance_settings",
      "tags": [
        "untagged"
      ],
      "summary": "Update balance settings",
      "description": "<p>Updates balance settings for a given connected account.\n Related guide: <a href=\"/connect/authentication\">Making API calls for connected accounts</a></p>"
    },
    {
      "operationId": "GetBalanceTransactions",
      "method": "GET",
      "path": "/v1/balance_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List all balance transactions",
      "description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>"
    },
    {
      "operationId": "GetBalanceTransactionsId",
      "method": "GET",
      "path": "/v1/balance_transactions/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a balance transaction",
      "description": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>"
    },
    {
      "operationId": "GetBillingAlerts",
      "method": "GET",
      "path": "/v1/billing/alerts",
      "tags": [
        "untagged"
      ],
      "summary": "List billing alerts",
      "description": "<p>Lists billing active and inactive alerts</p>"
    },
    {
      "operationId": "PostBillingAlerts",
      "method": "POST",
      "path": "/v1/billing/alerts",
      "tags": [
        "untagged"
      ],
      "summary": "Create a billing alert",
      "description": "<p>Creates a billing alert</p>"
    },
    {
      "operationId": "GetBillingAlertsId",
      "method": "GET",
      "path": "/v1/billing/alerts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a billing alert",
      "description": "<p>Retrieves a billing alert given an ID</p>"
    },
    {
      "operationId": "PostBillingAlertsIdActivate",
      "method": "POST",
      "path": "/v1/billing/alerts/{id}/activate",
      "tags": [
        "untagged"
      ],
      "summary": "Activate a billing alert",
      "description": "<p>Reactivates this alert, allowing it to trigger again.</p>"
    },
    {
      "operationId": "PostBillingAlertsIdArchive",
      "method": "POST",
      "path": "/v1/billing/alerts/{id}/archive",
      "tags": [
        "untagged"
      ],
      "summary": "Archive a billing alert",
      "description": "<p>Archives this alert, removing it from the list view and APIs. This is non-reversible.</p>"
    },
    {
      "operationId": "PostBillingAlertsIdDeactivate",
      "method": "POST",
      "path": "/v1/billing/alerts/{id}/deactivate",
      "tags": [
        "untagged"
      ],
      "summary": "Deactivate a billing alert",
      "description": "<p>Deactivates this alert, preventing it from triggering.</p>"
    },
    {
      "operationId": "GetBillingCreditBalanceSummary",
      "method": "GET",
      "path": "/v1/billing/credit_balance_summary",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve the credit balance summary for a customer",
      "description": "<p>Retrieves the credit balance summary for a customer.</p>"
    },
    {
      "operationId": "GetBillingCreditBalanceTransactions",
      "method": "GET",
      "path": "/v1/billing/credit_balance_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List credit balance transactions",
      "description": "<p>Retrieve a list of credit balance transactions.</p>"
    },
    {
      "operationId": "GetBillingCreditBalanceTransactionsId",
      "method": "GET",
      "path": "/v1/billing/credit_balance_transactions/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a credit balance transaction",
      "description": "<p>Retrieves a credit balance transaction.</p>"
    },
    {
      "operationId": "GetBillingCreditGrants",
      "method": "GET",
      "path": "/v1/billing/credit_grants",
      "tags": [
        "untagged"
      ],
      "summary": "List credit grants",
      "description": "<p>Retrieve a list of credit grants.</p>"
    },
    {
      "operationId": "PostBillingCreditGrants",
      "method": "POST",
      "path": "/v1/billing/credit_grants",
      "tags": [
        "untagged"
      ],
      "summary": "Create a credit grant",
      "description": "<p>Creates a credit grant.</p>"
    },
    {
      "operationId": "GetBillingCreditGrantsId",
      "method": "GET",
      "path": "/v1/billing/credit_grants/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a credit grant",
      "description": "<p>Retrieves a credit grant.</p>"
    },
    {
      "operationId": "PostBillingCreditGrantsId",
      "method": "POST",
      "path": "/v1/billing/credit_grants/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a credit grant",
      "description": "<p>Updates a credit grant.</p>"
    },
    {
      "operationId": "PostBillingCreditGrantsIdExpire",
      "method": "POST",
      "path": "/v1/billing/credit_grants/{id}/expire",
      "tags": [
        "untagged"
      ],
      "summary": "Expire a credit grant",
      "description": "<p>Expires a credit grant.</p>"
    },
    {
      "operationId": "PostBillingCreditGrantsIdVoid",
      "method": "POST",
      "path": "/v1/billing/credit_grants/{id}/void",
      "tags": [
        "untagged"
      ],
      "summary": "Void a credit grant",
      "description": "<p>Voids a credit grant.</p>"
    },
    {
      "operationId": "PostBillingMeterEventAdjustments",
      "method": "POST",
      "path": "/v1/billing/meter_event_adjustments",
      "tags": [
        "untagged"
      ],
      "summary": "Create a billing meter event adjustment",
      "description": "<p>Creates a billing meter event adjustment.</p>"
    },
    {
      "operationId": "PostBillingMeterEvents",
      "method": "POST",
      "path": "/v1/billing/meter_events",
      "tags": [
        "untagged"
      ],
      "summary": "Create a billing meter event",
      "description": "<p>Creates a billing meter event.</p>"
    },
    {
      "operationId": "GetBillingMeters",
      "method": "GET",
      "path": "/v1/billing/meters",
      "tags": [
        "untagged"
      ],
      "summary": "List billing meters",
      "description": "<p>Retrieve a list of billing meters.</p>"
    },
    {
      "operationId": "PostBillingMeters",
      "method": "POST",
      "path": "/v1/billing/meters",
      "tags": [
        "untagged"
      ],
      "summary": "Create a billing meter",
      "description": "<p>Creates a billing meter.</p>"
    },
    {
      "operationId": "GetBillingMetersId",
      "method": "GET",
      "path": "/v1/billing/meters/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a billing meter",
      "description": "<p>Retrieves a billing meter given an ID.</p>"
    },
    {
      "operationId": "PostBillingMetersId",
      "method": "POST",
      "path": "/v1/billing/meters/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a billing meter",
      "description": "<p>Updates a billing meter.</p>"
    },
    {
      "operationId": "PostBillingMetersIdDeactivate",
      "method": "POST",
      "path": "/v1/billing/meters/{id}/deactivate",
      "tags": [
        "untagged"
      ],
      "summary": "Deactivate a billing meter",
      "description": "<p>When a meter is deactivated, no more meter events will be accepted for this meter. You can’t attach a deactivated meter to a price.</p>"
    },
    {
      "operationId": "GetBillingMetersIdEventSummaries",
      "method": "GET",
      "path": "/v1/billing/meters/{id}/event_summaries",
      "tags": [
        "untagged"
      ],
      "summary": "List billing meter event summaries",
      "description": "<p>Retrieve a list of billing meter event summaries.</p>"
    },
    {
      "operationId": "PostBillingMetersIdReactivate",
      "method": "POST",
      "path": "/v1/billing/meters/{id}/reactivate",
      "tags": [
        "untagged"
      ],
      "summary": "Reactivate a billing meter",
      "description": "<p>When a meter is reactivated, events for this meter can be accepted and you can attach the meter to a price.</p>"
    },
    {
      "operationId": "GetBillingPortalConfigurations",
      "method": "GET",
      "path": "/v1/billing_portal/configurations",
      "tags": [
        "untagged"
      ],
      "summary": "List portal configurations",
      "description": "<p>Returns a list of configurations that describe the functionality of the customer portal.</p>"
    },
    {
      "operationId": "PostBillingPortalConfigurations",
      "method": "POST",
      "path": "/v1/billing_portal/configurations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a portal configuration",
      "description": "<p>Creates a configuration that describes the functionality and behavior of a PortalSession</p>"
    },
    {
      "operationId": "GetBillingPortalConfigurationsConfiguration",
      "method": "GET",
      "path": "/v1/billing_portal/configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a portal configuration",
      "description": "<p>Retrieves a configuration that describes the functionality of the customer portal.</p>"
    },
    {
      "operationId": "PostBillingPortalConfigurationsConfiguration",
      "method": "POST",
      "path": "/v1/billing_portal/configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a portal configuration",
      "description": "<p>Updates a configuration that describes the functionality of the customer portal.</p>"
    },
    {
      "operationId": "PostBillingPortalSessions",
      "method": "POST",
      "path": "/v1/billing_portal/sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a portal session",
      "description": "<p>Creates a session of the customer portal.</p>"
    },
    {
      "operationId": "GetCharges",
      "method": "GET",
      "path": "/v1/charges",
      "tags": [
        "untagged"
      ],
      "summary": "List all charges",
      "description": "<p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>"
    },
    {
      "operationId": "PostCharges",
      "method": "POST",
      "path": "/v1/charges",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>This method is no longer recommended—use the <a href=\"/docs/api/payment_intents\">Payment Intents API</a>\nto initiate a new payment instead. Confirmation of the PaymentIntent creates the <code>Charge</code>\nobject used to request payment.</p>"
    },
    {
      "operationId": "GetChargesSearch",
      "method": "GET",
      "path": "/v1/charges/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search charges",
      "description": "<p>Search for charges you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "GetChargesCharge",
      "method": "GET",
      "path": "/v1/charges/{charge}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a charge",
      "description": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>"
    },
    {
      "operationId": "PostChargesCharge",
      "method": "POST",
      "path": "/v1/charges/{charge}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a charge",
      "description": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "PostChargesChargeCapture",
      "method": "POST",
      "path": "/v1/charges/{charge}/capture",
      "tags": [
        "untagged"
      ],
      "summary": "Capture a payment",
      "description": "<p>Capture the payment of an existing, uncaptured charge that was created with the <code>capture</code> option set to false.</p>\n\n<p>Uncaptured payments expire a set number of days after they are created (<a href=\"/docs/charges/placing-a-hold\">7 by default</a>), after which they are marked as refunded and capture attempts will fail.</p>\n\n<p>Don’t use this method to capture a PaymentIntent-initiated charge. Use <a href=\"/docs/api/payment_intents/capture\">Capture a PaymentIntent</a>.</p>"
    },
    {
      "operationId": "GetChargesChargeDispute",
      "method": "GET",
      "path": "/v1/charges/{charge}/dispute",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Retrieve a dispute for a specified charge.</p>"
    },
    {
      "operationId": "PostChargesChargeDispute",
      "method": "POST",
      "path": "/v1/charges/{charge}/dispute",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": ""
    },
    {
      "operationId": "PostChargesChargeDisputeClose",
      "method": "POST",
      "path": "/v1/charges/{charge}/dispute/close",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": ""
    },
    {
      "operationId": "PostChargesChargeRefund",
      "method": "POST",
      "path": "/v1/charges/{charge}/refund",
      "tags": [
        "untagged"
      ],
      "summary": "Create a refund",
      "description": "<p>When you create a new refund, you must specify either a Charge or a PaymentIntent object.</p>\n\n<p>This action refunds a previously created charge that’s not refunded yet.\nFunds are refunded to the credit or debit card that’s originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can repeat this until the entire charge is refunded.</p>\n\n<p>After you entirely refund a charge, you can’t refund it again.\nThis method raises an error when it’s called on an already-refunded charge,\nor when you attempt to refund more money than is left on a charge.</p>"
    },
    {
      "operationId": "GetChargesChargeRefunds",
      "method": "GET",
      "path": "/v1/charges/{charge}/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "List all refunds",
      "description": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>"
    },
    {
      "operationId": "PostChargesChargeRefunds",
      "method": "POST",
      "path": "/v1/charges/{charge}/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "Create customer balance refund",
      "description": "<p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can’t be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>"
    },
    {
      "operationId": "GetChargesChargeRefundsRefund",
      "method": "GET",
      "path": "/v1/charges/{charge}/refunds/{refund}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Retrieves the details of an existing refund.</p>"
    },
    {
      "operationId": "PostChargesChargeRefundsRefund",
      "method": "POST",
      "path": "/v1/charges/{charge}/refunds/{refund}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Update a specified refund.</p>"
    },
    {
      "operationId": "GetCheckoutSessions",
      "method": "GET",
      "path": "/v1/checkout/sessions",
      "tags": [
        "untagged"
      ],
      "summary": "List all Checkout Sessions",
      "description": "<p>Returns a list of Checkout Sessions.</p>"
    },
    {
      "operationId": "PostCheckoutSessions",
      "method": "POST",
      "path": "/v1/checkout/sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Checkout Session",
      "description": "<p>Creates a Checkout Session object.</p>"
    },
    {
      "operationId": "GetCheckoutSessionsSession",
      "method": "GET",
      "path": "/v1/checkout/sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Checkout Session",
      "description": "<p>Retrieves a Checkout Session object.</p>"
    },
    {
      "operationId": "PostCheckoutSessionsSession",
      "method": "POST",
      "path": "/v1/checkout/sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a Checkout Session",
      "description": "<p>Updates a Checkout Session object.</p>\n\n<p>Related guide: <a href=\"/payments/checkout/dynamic-updates\">Dynamically update Checkout</a></p>"
    },
    {
      "operationId": "PostCheckoutSessionsSessionExpire",
      "method": "POST",
      "path": "/v1/checkout/sessions/{session}/expire",
      "tags": [
        "untagged"
      ],
      "summary": "Expire a Checkout Session",
      "description": "<p>A Checkout Session can be expired when it is in one of these statuses: <code>open</code> </p>\n\n<p>After it expires, a customer can’t complete a Checkout Session and customers loading the Checkout Session see a message saying the Checkout Session is expired.</p>"
    },
    {
      "operationId": "GetCheckoutSessionsSessionLineItems",
      "method": "GET",
      "path": "/v1/checkout/sessions/{session}/line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Checkout Session's line items",
      "description": "<p>When retrieving a Checkout Session, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "GetClimateOrders",
      "method": "GET",
      "path": "/v1/climate/orders",
      "tags": [
        "untagged"
      ],
      "summary": "List orders",
      "description": "<p>Lists all Climate order objects. The orders are returned sorted by creation date, with the\nmost recently created orders appearing first.</p>"
    },
    {
      "operationId": "PostClimateOrders",
      "method": "POST",
      "path": "/v1/climate/orders",
      "tags": [
        "untagged"
      ],
      "summary": "Create an order",
      "description": "<p>Creates a Climate order object for a given Climate product. The order will be processed immediately\nafter creation and payment will be deducted your Stripe balance.</p>"
    },
    {
      "operationId": "GetClimateOrdersOrder",
      "method": "GET",
      "path": "/v1/climate/orders/{order}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an order",
      "description": "<p>Retrieves the details of a Climate order object with the given ID.</p>"
    },
    {
      "operationId": "PostClimateOrdersOrder",
      "method": "POST",
      "path": "/v1/climate/orders/{order}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an order",
      "description": "<p>Updates the specified order by setting the values of the parameters passed.</p>"
    },
    {
      "operationId": "PostClimateOrdersOrderCancel",
      "method": "POST",
      "path": "/v1/climate/orders/{order}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel an order",
      "description": "<p>Cancels a Climate order. You can cancel an order within 24 hours of creation. Stripe refunds the\nreservation <code>amount_subtotal</code>, but not the <code>amount_fees</code> for user-triggered cancellations. Frontier\nmight cancel reservations if suppliers fail to deliver. If Frontier cancels the reservation, Stripe\nprovides 90 days advance notice and refunds the <code>amount_total</code>.</p>"
    },
    {
      "operationId": "GetClimateProducts",
      "method": "GET",
      "path": "/v1/climate/products",
      "tags": [
        "untagged"
      ],
      "summary": "List products",
      "description": "<p>Lists all available Climate product objects.</p>"
    },
    {
      "operationId": "GetClimateProductsProduct",
      "method": "GET",
      "path": "/v1/climate/products/{product}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a product",
      "description": "<p>Retrieves the details of a Climate product with the given ID.</p>"
    },
    {
      "operationId": "GetClimateSuppliers",
      "method": "GET",
      "path": "/v1/climate/suppliers",
      "tags": [
        "untagged"
      ],
      "summary": "List suppliers",
      "description": "<p>Lists all available Climate supplier objects.</p>"
    },
    {
      "operationId": "GetClimateSuppliersSupplier",
      "method": "GET",
      "path": "/v1/climate/suppliers/{supplier}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a supplier",
      "description": "<p>Retrieves a Climate supplier object.</p>"
    },
    {
      "operationId": "GetConfirmationTokensConfirmationToken",
      "method": "GET",
      "path": "/v1/confirmation_tokens/{confirmation_token}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a ConfirmationToken",
      "description": "<p>Retrieves an existing ConfirmationToken object</p>"
    },
    {
      "operationId": "GetCountrySpecs",
      "method": "GET",
      "path": "/v1/country_specs",
      "tags": [
        "untagged"
      ],
      "summary": "List Country Specs",
      "description": "<p>Lists all Country Spec objects available in the API.</p>"
    },
    {
      "operationId": "GetCountrySpecsCountry",
      "method": "GET",
      "path": "/v1/country_specs/{country}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Country Spec",
      "description": "<p>Returns a Country Spec for a given Country code.</p>"
    },
    {
      "operationId": "GetCoupons",
      "method": "GET",
      "path": "/v1/coupons",
      "tags": [
        "untagged"
      ],
      "summary": "List all coupons",
      "description": "<p>Returns a list of your coupons.</p>"
    },
    {
      "operationId": "PostCoupons",
      "method": "POST",
      "path": "/v1/coupons",
      "tags": [
        "untagged"
      ],
      "summary": "Create a coupon",
      "description": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>\n\n<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>"
    },
    {
      "operationId": "DeleteCouponsCoupon",
      "method": "DELETE",
      "path": "/v1/coupons/{coupon}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a coupon",
      "description": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>"
    },
    {
      "operationId": "GetCouponsCoupon",
      "method": "GET",
      "path": "/v1/coupons/{coupon}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a coupon",
      "description": "<p>Retrieves the coupon with the given ID.</p>"
    },
    {
      "operationId": "PostCouponsCoupon",
      "method": "POST",
      "path": "/v1/coupons/{coupon}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a coupon",
      "description": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>"
    },
    {
      "operationId": "GetCreditNotes",
      "method": "GET",
      "path": "/v1/credit_notes",
      "tags": [
        "untagged"
      ],
      "summary": "List all credit notes",
      "description": "<p>Returns a list of credit notes.</p>"
    },
    {
      "operationId": "PostCreditNotes",
      "method": "POST",
      "path": "/v1/credit_notes",
      "tags": [
        "untagged"
      ],
      "summary": "Create a credit note",
      "description": "<p>Issue a credit note to adjust the amount of a finalized invoice. A credit note will first reduce the invoice’s <code>amount_remaining</code> (and <code>amount_due</code>), but not below zero.\nThis amount is indicated by the credit note’s <code>pre_payment_amount</code>. The excess amount is indicated by <code>post_payment_amount</code>, and it can result in any combination of the following:</p>\n\n<ul>\n<li>Refunds: create a new refund (using <code>refund_amount</code>) or link existing refunds (using <code>refunds</code>).</li>\n<li>Customer balance credit: credit the customer’s balance (using <code>credit_amount</code>) which will be automatically applied to their next invoice when it’s finalized.</li>\n<li>Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using <code>out_of_band_amount</code>).</li>\n</ul>\n\n<p>The sum of refunds, customer balance credits, and outside of Stripe credits must equal the <code>post_payment_amount</code>.</p>\n\n<p>You may issue multiple credit notes for an invoice. Each credit note may increment the invoice’s <code>pre_payment_credit_notes_amount</code>,\n<code>post_payment_credit_notes_amount</code>, or both, depending on the invoice’s <code>amount_remaining</code> at the time of credit note creation.</p>"
    },
    {
      "operationId": "GetCreditNotesPreview",
      "method": "GET",
      "path": "/v1/credit_notes/preview",
      "tags": [
        "untagged"
      ],
      "summary": "Preview a credit note",
      "description": "<p>Get a preview of a credit note without creating it.</p>"
    },
    {
      "operationId": "GetCreditNotesPreviewLines",
      "method": "GET",
      "path": "/v1/credit_notes/preview/lines",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a credit note preview's line items",
      "description": "<p>When retrieving a credit note preview, you’ll get a <strong>lines</strong> property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "GetCreditNotesCreditNoteLines",
      "method": "GET",
      "path": "/v1/credit_notes/{credit_note}/lines",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a credit note's line items",
      "description": "<p>When retrieving a credit note, you’ll get a <strong>lines</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "GetCreditNotesId",
      "method": "GET",
      "path": "/v1/credit_notes/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a credit note",
      "description": "<p>Retrieves the credit note object with the given identifier.</p>"
    },
    {
      "operationId": "PostCreditNotesId",
      "method": "POST",
      "path": "/v1/credit_notes/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a credit note",
      "description": "<p>Updates an existing credit note.</p>"
    },
    {
      "operationId": "PostCreditNotesIdVoid",
      "method": "POST",
      "path": "/v1/credit_notes/{id}/void",
      "tags": [
        "untagged"
      ],
      "summary": "Void a credit note",
      "description": "<p>Marks a credit note as void. Learn more about <a href=\"/docs/billing/invoices/credit-notes#voiding\">voiding credit notes</a>.</p>"
    },
    {
      "operationId": "PostCustomerSessions",
      "method": "POST",
      "path": "/v1/customer_sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Customer Session",
      "description": "<p>Creates a Customer Session object that includes a single-use client secret that you can use on your front-end to grant client-side API access for certain customer resources.</p>"
    },
    {
      "operationId": "GetCustomers",
      "method": "GET",
      "path": "/v1/customers",
      "tags": [
        "untagged"
      ],
      "summary": "List all customers",
      "description": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>"
    },
    {
      "operationId": "PostCustomers",
      "method": "POST",
      "path": "/v1/customers",
      "tags": [
        "untagged"
      ],
      "summary": "Create a customer",
      "description": "<p>Creates a new customer object.</p>"
    },
    {
      "operationId": "GetCustomersSearch",
      "method": "GET",
      "path": "/v1/customers/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search customers",
      "description": "<p>Search for customers you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomer",
      "method": "DELETE",
      "path": "/v1/customers/{customer}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer",
      "description": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomer",
      "method": "GET",
      "path": "/v1/customers/{customer}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a customer",
      "description": "<p>Retrieves a Customer object.</p>"
    },
    {
      "operationId": "PostCustomersCustomer",
      "method": "POST",
      "path": "/v1/customers/{customer}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a customer",
      "description": "<p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>\n\n<p>This request accepts mostly the same arguments as the customer creation call.</p>"
    },
    {
      "operationId": "GetCustomersCustomerBalanceTransactions",
      "method": "GET",
      "path": "/v1/customers/{customer}/balance_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List customer balance transactions",
      "description": "<p>Returns a list of transactions that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>"
    },
    {
      "operationId": "PostCustomersCustomerBalanceTransactions",
      "method": "POST",
      "path": "/v1/customers/{customer}/balance_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a customer balance transaction",
      "description": "<p>Creates an immutable transaction that updates the customer’s credit <a href=\"/docs/billing/customer/balance\">balance</a>.</p>"
    },
    {
      "operationId": "GetCustomersCustomerBalanceTransactionsTransaction",
      "method": "GET",
      "path": "/v1/customers/{customer}/balance_transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a customer balance transaction",
      "description": "<p>Retrieves a specific customer balance transaction that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>"
    },
    {
      "operationId": "PostCustomersCustomerBalanceTransactionsTransaction",
      "method": "POST",
      "path": "/v1/customers/{customer}/balance_transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a customer credit balance transaction",
      "description": "<p>Most credit balance transaction fields are immutable, but you may update its <code>description</code> and <code>metadata</code>.</p>"
    },
    {
      "operationId": "GetCustomersCustomerBankAccounts",
      "method": "GET",
      "path": "/v1/customers/{customer}/bank_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List all bank accounts",
      "description": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>"
    },
    {
      "operationId": "PostCustomersCustomerBankAccounts",
      "method": "POST",
      "path": "/v1/customers/{customer}/bank_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "Create a card",
      "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerBankAccountsId",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer source",
      "description": "<p>Delete a specified source for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerBankAccountsId",
      "method": "GET",
      "path": "/v1/customers/{customer}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a bank account",
      "description": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>"
    },
    {
      "operationId": "PostCustomersCustomerBankAccountsId",
      "method": "POST",
      "path": "/v1/customers/{customer}/bank_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Update a specified source for a given customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerBankAccountsIdVerify",
      "method": "POST",
      "path": "/v1/customers/{customer}/bank_accounts/{id}/verify",
      "tags": [
        "untagged"
      ],
      "summary": "Verify a bank account",
      "description": "<p>Verify a specified bank account for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerCards",
      "method": "GET",
      "path": "/v1/customers/{customer}/cards",
      "tags": [
        "untagged"
      ],
      "summary": "List all cards",
      "description": "<p>You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the <code>Customer</code> object.\nIf you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>"
    },
    {
      "operationId": "PostCustomersCustomerCards",
      "method": "POST",
      "path": "/v1/customers/{customer}/cards",
      "tags": [
        "untagged"
      ],
      "summary": "Create a card",
      "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerCardsId",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/cards/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer source",
      "description": "<p>Delete a specified source for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerCardsId",
      "method": "GET",
      "path": "/v1/customers/{customer}/cards/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a card",
      "description": "<p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerCardsId",
      "method": "POST",
      "path": "/v1/customers/{customer}/cards/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Update a specified source for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerCashBalance",
      "method": "GET",
      "path": "/v1/customers/{customer}/cash_balance",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a cash balance",
      "description": "<p>Retrieves a customer’s cash balance.</p>"
    },
    {
      "operationId": "PostCustomersCustomerCashBalance",
      "method": "POST",
      "path": "/v1/customers/{customer}/cash_balance",
      "tags": [
        "untagged"
      ],
      "summary": "Update a cash balance's settings",
      "description": "<p>Changes the settings on a customer’s cash balance.</p>"
    },
    {
      "operationId": "GetCustomersCustomerCashBalanceTransactions",
      "method": "GET",
      "path": "/v1/customers/{customer}/cash_balance_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List cash balance transactions",
      "description": "<p>Returns a list of transactions that modified the customer’s <a href=\"/docs/payments/customer-balance\">cash balance</a>.</p>"
    },
    {
      "operationId": "GetCustomersCustomerCashBalanceTransactionsTransaction",
      "method": "GET",
      "path": "/v1/customers/{customer}/cash_balance_transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a cash balance transaction",
      "description": "<p>Retrieves a specific cash balance transaction, which updated the customer’s <a href=\"/docs/payments/customer-balance\">cash balance</a>.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerDiscount",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/discount",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer discount",
      "description": "<p>Removes the currently applied discount on a customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerDiscount",
      "method": "GET",
      "path": "/v1/customers/{customer}/discount",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": ""
    },
    {
      "operationId": "PostCustomersCustomerFundingInstructions",
      "method": "POST",
      "path": "/v1/customers/{customer}/funding_instructions",
      "tags": [
        "untagged"
      ],
      "summary": "Create or retrieve funding instructions for a customer cash balance",
      "description": "<p>Retrieve funding instructions for a customer cash balance. If funding instructions do not yet exist for the customer, new\nfunding instructions will be created. If funding instructions have already been created for a given customer, the same\nfunding instructions will be retrieved. In other words, we will return the same funding instructions each time.</p>"
    },
    {
      "operationId": "GetCustomersCustomerPaymentMethods",
      "method": "GET",
      "path": "/v1/customers/{customer}/payment_methods",
      "tags": [
        "untagged"
      ],
      "summary": "List a Customer's PaymentMethods",
      "description": "<p>Returns a list of PaymentMethods for a given Customer</p>"
    },
    {
      "operationId": "GetCustomersCustomerPaymentMethodsPaymentMethod",
      "method": "GET",
      "path": "/v1/customers/{customer}/payment_methods/{payment_method}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Customer's PaymentMethod",
      "description": "<p>Retrieves a PaymentMethod object for a given Customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerSources",
      "method": "GET",
      "path": "/v1/customers/{customer}/sources",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>List sources for a specified customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerSources",
      "method": "POST",
      "path": "/v1/customers/{customer}/sources",
      "tags": [
        "untagged"
      ],
      "summary": "Create a card",
      "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerSourcesId",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/sources/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer source",
      "description": "<p>Delete a specified source for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerSourcesId",
      "method": "GET",
      "path": "/v1/customers/{customer}/sources/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Retrieve a specified source for a given customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerSourcesId",
      "method": "POST",
      "path": "/v1/customers/{customer}/sources/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Update a specified source for a given customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerSourcesIdVerify",
      "method": "POST",
      "path": "/v1/customers/{customer}/sources/{id}/verify",
      "tags": [
        "untagged"
      ],
      "summary": "Verify a bank account",
      "description": "<p>Verify a specified bank account for a given customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerSubscriptions",
      "method": "GET",
      "path": "/v1/customers/{customer}/subscriptions",
      "tags": [
        "untagged"
      ],
      "summary": "List active subscriptions",
      "description": "<p>You can see a list of the customer’s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>"
    },
    {
      "operationId": "PostCustomersCustomerSubscriptions",
      "method": "POST",
      "path": "/v1/customers/{customer}/subscriptions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a subscription",
      "description": "<p>Creates a new subscription on an existing customer.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a subscription",
      "description": "<p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>"
    },
    {
      "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedId",
      "method": "GET",
      "path": "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a subscription",
      "description": "<p>Retrieves the subscription with the given ID.</p>"
    },
    {
      "operationId": "PostCustomersCustomerSubscriptionsSubscriptionExposedId",
      "method": "POST",
      "path": "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a subscription on a customer",
      "description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a customer discount",
      "description": "<p>Removes the currently applied discount on a customer.</p>"
    },
    {
      "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
      "method": "GET",
      "path": "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": ""
    },
    {
      "operationId": "GetCustomersCustomerTaxIds",
      "method": "GET",
      "path": "/v1/customers/{customer}/tax_ids",
      "tags": [
        "untagged"
      ],
      "summary": "List all Customer tax IDs",
      "description": "<p>Returns a list of tax IDs for a customer.</p>"
    },
    {
      "operationId": "PostCustomersCustomerTaxIds",
      "method": "POST",
      "path": "/v1/customers/{customer}/tax_ids",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Customer tax ID",
      "description": "<p>Creates a new <code>tax_id</code> object for a customer.</p>"
    },
    {
      "operationId": "DeleteCustomersCustomerTaxIdsId",
      "method": "DELETE",
      "path": "/v1/customers/{customer}/tax_ids/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a Customer tax ID",
      "description": "<p>Deletes an existing <code>tax_id</code> object.</p>"
    },
    {
      "operationId": "GetCustomersCustomerTaxIdsId",
      "method": "GET",
      "path": "/v1/customers/{customer}/tax_ids/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Customer tax ID",
      "description": "<p>Retrieves the <code>tax_id</code> object with the given identifier.</p>"
    },
    {
      "operationId": "GetDisputes",
      "method": "GET",
      "path": "/v1/disputes",
      "tags": [
        "untagged"
      ],
      "summary": "List all disputes",
      "description": "<p>Returns a list of your disputes.</p>"
    },
    {
      "operationId": "GetDisputesDispute",
      "method": "GET",
      "path": "/v1/disputes/{dispute}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a dispute",
      "description": "<p>Retrieves the dispute with the given ID.</p>"
    },
    {
      "operationId": "PostDisputesDispute",
      "method": "POST",
      "path": "/v1/disputes/{dispute}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a dispute",
      "description": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>\n\n<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>"
    },
    {
      "operationId": "PostDisputesDisputeClose",
      "method": "POST",
      "path": "/v1/disputes/{dispute}/close",
      "tags": [
        "untagged"
      ],
      "summary": "Close a dispute",
      "description": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>\n\n<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>"
    },
    {
      "operationId": "GetEntitlementsActiveEntitlements",
      "method": "GET",
      "path": "/v1/entitlements/active_entitlements",
      "tags": [
        "untagged"
      ],
      "summary": "List all active entitlements",
      "description": "<p>Retrieve a list of active entitlements for a customer</p>"
    },
    {
      "operationId": "GetEntitlementsActiveEntitlementsId",
      "method": "GET",
      "path": "/v1/entitlements/active_entitlements/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an active entitlement",
      "description": "<p>Retrieve an active entitlement</p>"
    },
    {
      "operationId": "GetEntitlementsFeatures",
      "method": "GET",
      "path": "/v1/entitlements/features",
      "tags": [
        "untagged"
      ],
      "summary": "List all features",
      "description": "<p>Retrieve a list of features</p>"
    },
    {
      "operationId": "PostEntitlementsFeatures",
      "method": "POST",
      "path": "/v1/entitlements/features",
      "tags": [
        "untagged"
      ],
      "summary": "Create a feature",
      "description": "<p>Creates a feature</p>"
    },
    {
      "operationId": "GetEntitlementsFeaturesId",
      "method": "GET",
      "path": "/v1/entitlements/features/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a feature",
      "description": "<p>Retrieves a feature</p>"
    },
    {
      "operationId": "PostEntitlementsFeaturesId",
      "method": "POST",
      "path": "/v1/entitlements/features/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Updates a feature",
      "description": "<p>Update a feature’s metadata or permanently deactivate it.</p>"
    },
    {
      "operationId": "PostEphemeralKeys",
      "method": "POST",
      "path": "/v1/ephemeral_keys",
      "tags": [
        "untagged"
      ],
      "summary": "Create an ephemeral key",
      "description": "<p>Creates a short-lived API key for a given resource.</p>"
    },
    {
      "operationId": "DeleteEphemeralKeysKey",
      "method": "DELETE",
      "path": "/v1/ephemeral_keys/{key}",
      "tags": [
        "untagged"
      ],
      "summary": "Immediately invalidate an ephemeral key",
      "description": "<p>Invalidates a short-lived API key for a given resource.</p>"
    },
    {
      "operationId": "GetEvents",
      "method": "GET",
      "path": "/v1/events",
      "tags": [
        "untagged"
      ],
      "summary": "List all events",
      "description": "<p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href=\"https://docs.stripe.com/api/events/object\">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>"
    },
    {
      "operationId": "GetEventsId",
      "method": "GET",
      "path": "/v1/events/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an event",
      "description": "<p>Retrieves the details of an event if it was created in the last 30 days. Supply the unique identifier of the event, which you might have received in a webhook.</p>"
    },
    {
      "operationId": "GetExchangeRates",
      "method": "GET",
      "path": "/v1/exchange_rates",
      "tags": [
        "untagged"
      ],
      "summary": "List all exchange rates",
      "description": "<p>[Deprecated] The <code>ExchangeRate</code> APIs are deprecated. Please use the <a href=\"https://docs.stripe.com/payments/currencies/localize-prices/fx-quotes-api\">FX Quotes API</a> instead.</p>\n\n<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>"
    },
    {
      "operationId": "GetExchangeRatesRateId",
      "method": "GET",
      "path": "/v1/exchange_rates/{rate_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an exchange rate",
      "description": "<p>[Deprecated] The <code>ExchangeRate</code> APIs are deprecated. Please use the <a href=\"https://docs.stripe.com/payments/currencies/localize-prices/fx-quotes-api\">FX Quotes API</a> instead.</p>\n\n<p>Retrieves the exchange rates from the given currency to every supported currency.</p>"
    },
    {
      "operationId": "PostExternalAccountsId",
      "method": "POST",
      "path": "/v1/external_accounts/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>"
    },
    {
      "operationId": "GetFileLinks",
      "method": "GET",
      "path": "/v1/file_links",
      "tags": [
        "untagged"
      ],
      "summary": "List all file links",
      "description": "<p>Returns a list of file links.</p>"
    },
    {
      "operationId": "PostFileLinks",
      "method": "POST",
      "path": "/v1/file_links",
      "tags": [
        "untagged"
      ],
      "summary": "Create a file link",
      "description": "<p>Creates a new file link object.</p>"
    },
    {
      "operationId": "GetFileLinksLink",
      "method": "GET",
      "path": "/v1/file_links/{link}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a file link",
      "description": "<p>Retrieves the file link with the given ID.</p>"
    },
    {
      "operationId": "PostFileLinksLink",
      "method": "POST",
      "path": "/v1/file_links/{link}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a file link",
      "description": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>"
    },
    {
      "operationId": "GetFiles",
      "method": "GET",
      "path": "/v1/files",
      "tags": [
        "untagged"
      ],
      "summary": "List all files",
      "description": "<p>Returns a list of the files that your account has access to. Stripe sorts and returns the files by their creation dates, placing the most recently created files at the top.</p>"
    },
    {
      "operationId": "PostFiles",
      "method": "POST",
      "path": "/v1/files",
      "tags": [
        "untagged"
      ],
      "summary": "Create a file",
      "description": "<p>To upload a file to Stripe, you need to send a request of type <code>multipart/form-data</code>. Include the file you want to upload in the request, and the parameters for creating a file.</p>\n\n<p>All of Stripe’s officially supported Client libraries support sending <code>multipart/form-data</code>.</p>"
    },
    {
      "operationId": "GetFilesFile",
      "method": "GET",
      "path": "/v1/files/{file}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a file",
      "description": "<p>Retrieves the details of an existing file object. After you supply a unique file ID, Stripe returns the corresponding file object. Learn how to <a href=\"/docs/file-upload#download-file-contents\">access file contents</a>.</p>"
    },
    {
      "operationId": "GetFinancialConnectionsAccounts",
      "method": "GET",
      "path": "/v1/financial_connections/accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List Accounts",
      "description": "<p>Returns a list of Financial Connections <code>Account</code> objects.</p>"
    },
    {
      "operationId": "GetFinancialConnectionsAccountsAccount",
      "method": "GET",
      "path": "/v1/financial_connections/accounts/{account}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an Account",
      "description": "<p>Retrieves the details of an Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "PostFinancialConnectionsAccountsAccountDisconnect",
      "method": "POST",
      "path": "/v1/financial_connections/accounts/{account}/disconnect",
      "tags": [
        "untagged"
      ],
      "summary": "Disconnect an Account",
      "description": "<p>Disables your access to a Financial Connections <code>Account</code>. You will no longer be able to access data associated with the account (e.g. balances, transactions).</p>"
    },
    {
      "operationId": "GetFinancialConnectionsAccountsAccountOwners",
      "method": "GET",
      "path": "/v1/financial_connections/accounts/{account}/owners",
      "tags": [
        "untagged"
      ],
      "summary": "List Account Owners",
      "description": "<p>Lists all owners for a given <code>Account</code></p>"
    },
    {
      "operationId": "PostFinancialConnectionsAccountsAccountRefresh",
      "method": "POST",
      "path": "/v1/financial_connections/accounts/{account}/refresh",
      "tags": [
        "untagged"
      ],
      "summary": "Refresh Account data",
      "description": "<p>Refreshes the data associated with a Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "PostFinancialConnectionsAccountsAccountSubscribe",
      "method": "POST",
      "path": "/v1/financial_connections/accounts/{account}/subscribe",
      "tags": [
        "untagged"
      ],
      "summary": "Subscribe to data refreshes for an Account",
      "description": "<p>Subscribes to periodic refreshes of data associated with a Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "PostFinancialConnectionsAccountsAccountUnsubscribe",
      "method": "POST",
      "path": "/v1/financial_connections/accounts/{account}/unsubscribe",
      "tags": [
        "untagged"
      ],
      "summary": "Unsubscribe from data refreshes for an Account",
      "description": "<p>Unsubscribes from periodic refreshes of data associated with a Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "PostFinancialConnectionsSessions",
      "method": "POST",
      "path": "/v1/financial_connections/sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Session",
      "description": "<p>To launch the Financial Connections authorization flow, create a <code>Session</code>. The session’s <code>client_secret</code> can be used to launch the flow using Stripe.js.</p>"
    },
    {
      "operationId": "GetFinancialConnectionsSessionsSession",
      "method": "GET",
      "path": "/v1/financial_connections/sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Session",
      "description": "<p>Retrieves the details of a Financial Connections <code>Session</code></p>"
    },
    {
      "operationId": "GetFinancialConnectionsTransactions",
      "method": "GET",
      "path": "/v1/financial_connections/transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List Transactions",
      "description": "<p>Returns a list of Financial Connections <code>Transaction</code> objects.</p>"
    },
    {
      "operationId": "GetFinancialConnectionsTransactionsTransaction",
      "method": "GET",
      "path": "/v1/financial_connections/transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Transaction",
      "description": "<p>Retrieves the details of a Financial Connections <code>Transaction</code></p>"
    },
    {
      "operationId": "GetForwardingRequests",
      "method": "GET",
      "path": "/v1/forwarding/requests",
      "tags": [
        "untagged"
      ],
      "summary": "List all ForwardingRequests",
      "description": "<p>Lists all ForwardingRequest objects.</p>"
    },
    {
      "operationId": "PostForwardingRequests",
      "method": "POST",
      "path": "/v1/forwarding/requests",
      "tags": [
        "untagged"
      ],
      "summary": "Create a ForwardingRequest",
      "description": "<p>Creates a ForwardingRequest object.</p>"
    },
    {
      "operationId": "GetForwardingRequestsId",
      "method": "GET",
      "path": "/v1/forwarding/requests/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a ForwardingRequest",
      "description": "<p>Retrieves a ForwardingRequest object.</p>"
    },
    {
      "operationId": "GetIdentityVerificationReports",
      "method": "GET",
      "path": "/v1/identity/verification_reports",
      "tags": [
        "untagged"
      ],
      "summary": "List VerificationReports",
      "description": "<p>List all verification reports.</p>"
    },
    {
      "operationId": "GetIdentityVerificationReportsReport",
      "method": "GET",
      "path": "/v1/identity/verification_reports/{report}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a VerificationReport",
      "description": "<p>Retrieves an existing VerificationReport</p>"
    },
    {
      "operationId": "GetIdentityVerificationSessions",
      "method": "GET",
      "path": "/v1/identity/verification_sessions",
      "tags": [
        "untagged"
      ],
      "summary": "List VerificationSessions",
      "description": "<p>Returns a list of VerificationSessions</p>"
    },
    {
      "operationId": "PostIdentityVerificationSessions",
      "method": "POST",
      "path": "/v1/identity/verification_sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a VerificationSession",
      "description": "<p>Creates a VerificationSession object.</p>\n\n<p>After the VerificationSession is created, display a verification modal using the session <code>client_secret</code> or send your users to the session’s <code>url</code>.</p>\n\n<p>If your API key is in test mode, verification checks won’t actually process, though everything else will occur as if in live mode.</p>\n\n<p>Related guide: <a href=\"/docs/identity/verify-identity-documents\">Verify your users’ identity documents</a></p>"
    },
    {
      "operationId": "GetIdentityVerificationSessionsSession",
      "method": "GET",
      "path": "/v1/identity/verification_sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a VerificationSession",
      "description": "<p>Retrieves the details of a VerificationSession that was previously created.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to retrieve a valid\n<code>client_secret</code> or <code>url</code> to allow re-submission.</p>"
    },
    {
      "operationId": "PostIdentityVerificationSessionsSession",
      "method": "POST",
      "path": "/v1/identity/verification_sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a VerificationSession",
      "description": "<p>Updates a VerificationSession object.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to update the\nverification check and options.</p>"
    },
    {
      "operationId": "PostIdentityVerificationSessionsSessionCancel",
      "method": "POST",
      "path": "/v1/identity/verification_sessions/{session}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a VerificationSession",
      "description": "<p>A VerificationSession object can be canceled when it is in <code>requires_input</code> <a href=\"/docs/identity/how-sessions-work\">status</a>.</p>\n\n<p>Once canceled, future submission attempts are disabled. This cannot be undone. <a href=\"/docs/identity/verification-sessions#cancel\">Learn more</a>.</p>"
    },
    {
      "operationId": "PostIdentityVerificationSessionsSessionRedact",
      "method": "POST",
      "path": "/v1/identity/verification_sessions/{session}/redact",
      "tags": [
        "untagged"
      ],
      "summary": "Redact a VerificationSession",
      "description": "<p>Redact a VerificationSession to remove all collected information from Stripe. This will redact\nthe VerificationSession and all objects related to it, including VerificationReports, Events,\nrequest logs, etc.</p>\n\n<p>A VerificationSession object can be redacted when it is in <code>requires_input</code> or <code>verified</code>\n<a href=\"/docs/identity/how-sessions-work\">status</a>. Redacting a VerificationSession in <code>requires_action</code>\nstate will automatically cancel it.</p>\n\n<p>The redaction process may take up to four days. When the redaction process is in progress, the\nVerificationSession’s <code>redaction.status</code> field will be set to <code>processing</code>; when the process is\nfinished, it will change to <code>redacted</code> and an <code>identity.verification_session.redacted</code> event\nwill be emitted.</p>\n\n<p>Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all the\nfields that contain personal data will be replaced by the string <code>[redacted]</code> or a similar\nplaceholder. The <code>metadata</code> field will also be erased. Redacted objects cannot be updated or\nused for any purpose.</p>\n\n<p><a href=\"/docs/identity/verification-sessions#redact\">Learn more</a>.</p>"
    },
    {
      "operationId": "GetInvoicePayments",
      "method": "GET",
      "path": "/v1/invoice_payments",
      "tags": [
        "untagged"
      ],
      "summary": "List all payments for an invoice",
      "description": "<p>When retrieving an invoice, there is an includable payments property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of payments.</p>"
    },
    {
      "operationId": "GetInvoicePaymentsInvoicePayment",
      "method": "GET",
      "path": "/v1/invoice_payments/{invoice_payment}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an InvoicePayment",
      "description": "<p>Retrieves the invoice payment with the given ID.</p>"
    },
    {
      "operationId": "GetInvoiceRenderingTemplates",
      "method": "GET",
      "path": "/v1/invoice_rendering_templates",
      "tags": [
        "untagged"
      ],
      "summary": "List all invoice rendering templates",
      "description": "<p>List all templates, ordered by creation date, with the most recently created template appearing first.</p>"
    },
    {
      "operationId": "GetInvoiceRenderingTemplatesTemplate",
      "method": "GET",
      "path": "/v1/invoice_rendering_templates/{template}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an invoice rendering template",
      "description": "<p>Retrieves an invoice rendering template with the given ID. It by default returns the latest version of the template. Optionally, specify a version to see previous versions.</p>"
    },
    {
      "operationId": "PostInvoiceRenderingTemplatesTemplateArchive",
      "method": "POST",
      "path": "/v1/invoice_rendering_templates/{template}/archive",
      "tags": [
        "untagged"
      ],
      "summary": "Archive an invoice rendering template",
      "description": "<p>Updates the status of an invoice rendering template to ‘archived’ so no new Stripe objects (customers, invoices, etc.) can reference it. The template can also no longer be updated. However, if the template is already set on a Stripe object, it will continue to be applied on invoices generated by it.</p>"
    },
    {
      "operationId": "PostInvoiceRenderingTemplatesTemplateUnarchive",
      "method": "POST",
      "path": "/v1/invoice_rendering_templates/{template}/unarchive",
      "tags": [
        "untagged"
      ],
      "summary": "Unarchive an invoice rendering template",
      "description": "<p>Unarchive an invoice rendering template so it can be used on new Stripe objects again.</p>"
    },
    {
      "operationId": "GetInvoiceitems",
      "method": "GET",
      "path": "/v1/invoiceitems",
      "tags": [
        "untagged"
      ],
      "summary": "List all invoice items",
      "description": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>"
    },
    {
      "operationId": "PostInvoiceitems",
      "method": "POST",
      "path": "/v1/invoiceitems",
      "tags": [
        "untagged"
      ],
      "summary": "Create an invoice item",
      "description": "<p>Creates an item to be added to a draft invoice (up to 250 items per invoice). If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>"
    },
    {
      "operationId": "DeleteInvoiceitemsInvoiceitem",
      "method": "DELETE",
      "path": "/v1/invoiceitems/{invoiceitem}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete an invoice item",
      "description": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they’re not attached to invoices, or if it’s attached to a draft invoice.</p>"
    },
    {
      "operationId": "GetInvoiceitemsInvoiceitem",
      "method": "GET",
      "path": "/v1/invoiceitems/{invoiceitem}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an invoice item",
      "description": "<p>Retrieves the invoice item with the given ID.</p>"
    },
    {
      "operationId": "PostInvoiceitemsInvoiceitem",
      "method": "POST",
      "path": "/v1/invoiceitems/{invoiceitem}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an invoice item",
      "description": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>"
    },
    {
      "operationId": "GetInvoices",
      "method": "GET",
      "path": "/v1/invoices",
      "tags": [
        "untagged"
      ],
      "summary": "List all invoices",
      "description": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>"
    },
    {
      "operationId": "PostInvoices",
      "method": "POST",
      "path": "/v1/invoices",
      "tags": [
        "untagged"
      ],
      "summary": "Create an invoice",
      "description": "<p>This endpoint creates a draft invoice for a given customer. The invoice remains a draft until you <a href=\"#finalize_invoice\">finalize</a> the invoice, which allows you to <a href=\"#pay_invoice\">pay</a> or <a href=\"#send_invoice\">send</a> the invoice to your customers.</p>"
    },
    {
      "operationId": "PostInvoicesCreatePreview",
      "method": "POST",
      "path": "/v1/invoices/create_preview",
      "tags": [
        "untagged"
      ],
      "summary": "Create a preview invoice",
      "description": "<p>At any time, you can preview the upcoming invoice for a subscription or subscription schedule. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>\n\n<p>You can also preview the effects of creating or updating a subscription or subscription schedule, including a preview of any prorations that will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass the <code>subscription_details.proration_date</code> parameter when doing the actual subscription update.</p>\n\n<p>The recommended way to get only the prorations being previewed on the invoice is to consider line items where <code>parent.subscription_item_details.proration</code> is <code>true</code>.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>\n\n<p>Note: Currency conversion calculations use the latest exchange rates. Exchange rates may vary between the time of the preview and the time of the actual invoice creation. <a href=\"https://docs.stripe.com/currencies/conversions\">Learn more</a></p>"
    },
    {
      "operationId": "GetInvoicesSearch",
      "method": "GET",
      "path": "/v1/invoices/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search invoices",
      "description": "<p>Search for invoices you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "DeleteInvoicesInvoice",
      "method": "DELETE",
      "path": "/v1/invoices/{invoice}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a draft invoice",
      "description": "<p>Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be <a href=\"#void_invoice\">voided</a>.</p>"
    },
    {
      "operationId": "GetInvoicesInvoice",
      "method": "GET",
      "path": "/v1/invoices/{invoice}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an invoice",
      "description": "<p>Retrieves the invoice with the given ID.</p>"
    },
    {
      "operationId": "PostInvoicesInvoice",
      "method": "POST",
      "path": "/v1/invoices/{invoice}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an invoice",
      "description": "<p>Draft invoices are fully editable. Once an invoice is <a href=\"/docs/billing/invoices/workflow#finalized\">finalized</a>,\nmonetary values, as well as <code>collection_method</code>, become uneditable.</p>\n\n<p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or <a href=\"/docs/billing/invoices/reconciliation\">automatically reconciling</a> invoices, pass\n<code>auto_advance=false</code>.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceAddLines",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/add_lines",
      "tags": [
        "untagged"
      ],
      "summary": "Bulk add invoice line items",
      "description": "<p>Adds multiple line items to an invoice. This is only possible when an invoice is still a draft.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceAttachPayment",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/attach_payment",
      "tags": [
        "untagged"
      ],
      "summary": "Attach a payment to an Invoice",
      "description": "<p>Attaches a PaymentIntent or an Out of Band Payment to the invoice, adding it to the list of <code>payments</code>.</p>\n\n<p>For the PaymentIntent, when the PaymentIntent’s status changes to <code>succeeded</code>, the payment is credited\nto the invoice, increasing its <code>amount_paid</code>. When the invoice is fully paid, the\ninvoice’s status becomes <code>paid</code>.</p>\n\n<p>If the PaymentIntent’s status is already <code>succeeded</code> when it’s attached, it’s\ncredited to the invoice immediately.</p>\n\n<p>See: <a href=\"/docs/invoicing/partial-payments\">Partial payments</a> to learn more.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceFinalize",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/finalize",
      "tags": [
        "untagged"
      ],
      "summary": "Finalize an invoice",
      "description": "<p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you’d like to finalize a draft invoice manually, you can do so using this method.</p>"
    },
    {
      "operationId": "GetInvoicesInvoiceLines",
      "method": "GET",
      "path": "/v1/invoices/{invoice}/lines",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an invoice's line items",
      "description": "<p>When retrieving an invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceLinesLineItemId",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/lines/{line_item_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an invoice's line item",
      "description": "<p>Updates an invoice’s line item. Some fields, such as <code>tax_amounts</code>, only live on the invoice line item,\nso they can only be updated through this endpoint. Other fields, such as <code>amount</code>, live on both the invoice\nitem and the invoice line item, so updates on this endpoint will propagate to the invoice item as well.\nUpdating an invoice’s line item is only possible before the invoice is finalized.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceMarkUncollectible",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/mark_uncollectible",
      "tags": [
        "untagged"
      ],
      "summary": "Mark an invoice as uncollectible",
      "description": "<p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>"
    },
    {
      "operationId": "PostInvoicesInvoicePay",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/pay",
      "tags": [
        "untagged"
      ],
      "summary": "Pay an invoice",
      "description": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceRemoveLines",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/remove_lines",
      "tags": [
        "untagged"
      ],
      "summary": "Bulk remove invoice line items",
      "description": "<p>Removes multiple line items from an invoice. This is only possible when an invoice is still a draft.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceSend",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/send",
      "tags": [
        "untagged"
      ],
      "summary": "Send an invoice for manual payment",
      "description": "<p>Stripe will automatically send invoices to customers according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>\n\n<p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceUpdateLines",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/update_lines",
      "tags": [
        "untagged"
      ],
      "summary": "Bulk update invoice line items",
      "description": "<p>Updates multiple line items on an invoice. This is only possible when an invoice is still a draft.</p>"
    },
    {
      "operationId": "PostInvoicesInvoiceVoid",
      "method": "POST",
      "path": "/v1/invoices/{invoice}/void",
      "tags": [
        "untagged"
      ],
      "summary": "Void an invoice",
      "description": "<p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href=\"#delete_invoice\">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>\n\n<p>Consult with local regulations to determine whether and how an invoice might be amended, canceled, or voided in the jurisdiction you’re doing business in. You might need to <a href=\"#create_invoice\">issue another invoice</a> or <a href=\"#create_credit_note\">credit note</a> instead. Stripe recommends that you consult with your legal counsel for advice specific to your business.</p>"
    },
    {
      "operationId": "GetIssuingAuthorizations",
      "method": "GET",
      "path": "/v1/issuing/authorizations",
      "tags": [
        "untagged"
      ],
      "summary": "List all authorizations",
      "description": "<p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "GetIssuingAuthorizationsAuthorization",
      "method": "GET",
      "path": "/v1/issuing/authorizations/{authorization}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an authorization",
      "description": "<p>Retrieves an Issuing <code>Authorization</code> object.</p>"
    },
    {
      "operationId": "PostIssuingAuthorizationsAuthorization",
      "method": "POST",
      "path": "/v1/issuing/authorizations/{authorization}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an authorization",
      "description": "<p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "PostIssuingAuthorizationsAuthorizationApprove",
      "method": "POST",
      "path": "/v1/issuing/authorizations/{authorization}/approve",
      "tags": [
        "untagged"
      ],
      "summary": "Approve an authorization",
      "description": "<p>[Deprecated] Approves a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real-time authorization</a> flow. \nThis method is deprecated. Instead, <a href=\"/docs/issuing/controls/real-time-authorizations#authorization-handling\">respond directly to the webhook request to approve an authorization</a>.</p>"
    },
    {
      "operationId": "PostIssuingAuthorizationsAuthorizationDecline",
      "method": "POST",
      "path": "/v1/issuing/authorizations/{authorization}/decline",
      "tags": [
        "untagged"
      ],
      "summary": "Decline an authorization",
      "description": "<p>[Deprecated] Declines a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real time authorization</a> flow.\nThis method is deprecated. Instead, <a href=\"/docs/issuing/controls/real-time-authorizations#authorization-handling\">respond directly to the webhook request to decline an authorization</a>.</p>"
    },
    {
      "operationId": "GetIssuingCardholders",
      "method": "GET",
      "path": "/v1/issuing/cardholders",
      "tags": [
        "untagged"
      ],
      "summary": "List all cardholders",
      "description": "<p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostIssuingCardholders",
      "method": "POST",
      "path": "/v1/issuing/cardholders",
      "tags": [
        "untagged"
      ],
      "summary": "Create a cardholder",
      "description": "<p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>"
    },
    {
      "operationId": "GetIssuingCardholdersCardholder",
      "method": "GET",
      "path": "/v1/issuing/cardholders/{cardholder}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a cardholder",
      "description": "<p>Retrieves an Issuing <code>Cardholder</code> object.</p>"
    },
    {
      "operationId": "PostIssuingCardholdersCardholder",
      "method": "POST",
      "path": "/v1/issuing/cardholders/{cardholder}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a cardholder",
      "description": "<p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "GetIssuingCards",
      "method": "GET",
      "path": "/v1/issuing/cards",
      "tags": [
        "untagged"
      ],
      "summary": "List all cards",
      "description": "<p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostIssuingCards",
      "method": "POST",
      "path": "/v1/issuing/cards",
      "tags": [
        "untagged"
      ],
      "summary": "Create a card",
      "description": "<p>Creates an Issuing <code>Card</code> object.</p>"
    },
    {
      "operationId": "GetIssuingCardsCard",
      "method": "GET",
      "path": "/v1/issuing/cards/{card}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a card",
      "description": "<p>Retrieves an Issuing <code>Card</code> object.</p>"
    },
    {
      "operationId": "PostIssuingCardsCard",
      "method": "POST",
      "path": "/v1/issuing/cards/{card}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a card",
      "description": "<p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "GetIssuingDisputes",
      "method": "GET",
      "path": "/v1/issuing/disputes",
      "tags": [
        "untagged"
      ],
      "summary": "List all disputes",
      "description": "<p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostIssuingDisputes",
      "method": "POST",
      "path": "/v1/issuing/disputes",
      "tags": [
        "untagged"
      ],
      "summary": "Create a dispute",
      "description": "<p>Creates an Issuing <code>Dispute</code> object. Individual pieces of evidence within the <code>evidence</code> object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a> for more details about evidence requirements.</p>"
    },
    {
      "operationId": "GetIssuingDisputesDispute",
      "method": "GET",
      "path": "/v1/issuing/disputes/{dispute}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a dispute",
      "description": "<p>Retrieves an Issuing <code>Dispute</code> object.</p>"
    },
    {
      "operationId": "PostIssuingDisputesDispute",
      "method": "POST",
      "path": "/v1/issuing/disputes/{dispute}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a dispute",
      "description": "<p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the <code>evidence</code> object can be unset by passing in an empty string.</p>"
    },
    {
      "operationId": "PostIssuingDisputesDisputeSubmit",
      "method": "POST",
      "path": "/v1/issuing/disputes/{dispute}/submit",
      "tags": [
        "untagged"
      ],
      "summary": "Submit a dispute",
      "description": "<p>Submits an Issuing <code>Dispute</code> to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a>.</p>"
    },
    {
      "operationId": "GetIssuingPersonalizationDesigns",
      "method": "GET",
      "path": "/v1/issuing/personalization_designs",
      "tags": [
        "untagged"
      ],
      "summary": "List all personalization designs",
      "description": "<p>Returns a list of personalization design objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostIssuingPersonalizationDesigns",
      "method": "POST",
      "path": "/v1/issuing/personalization_designs",
      "tags": [
        "untagged"
      ],
      "summary": "Create a personalization design",
      "description": "<p>Creates a personalization design object.</p>"
    },
    {
      "operationId": "GetIssuingPersonalizationDesignsPersonalizationDesign",
      "method": "GET",
      "path": "/v1/issuing/personalization_designs/{personalization_design}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a personalization design",
      "description": "<p>Retrieves a personalization design object.</p>"
    },
    {
      "operationId": "PostIssuingPersonalizationDesignsPersonalizationDesign",
      "method": "POST",
      "path": "/v1/issuing/personalization_designs/{personalization_design}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a personalization design",
      "description": "<p>Updates a card personalization object.</p>"
    },
    {
      "operationId": "GetIssuingPhysicalBundles",
      "method": "GET",
      "path": "/v1/issuing/physical_bundles",
      "tags": [
        "untagged"
      ],
      "summary": "List all physical bundles",
      "description": "<p>Returns a list of physical bundle objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "GetIssuingPhysicalBundlesPhysicalBundle",
      "method": "GET",
      "path": "/v1/issuing/physical_bundles/{physical_bundle}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a physical bundle",
      "description": "<p>Retrieves a physical bundle object.</p>"
    },
    {
      "operationId": "GetIssuingSettlementsSettlement",
      "method": "GET",
      "path": "/v1/issuing/settlements/{settlement}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a settlement",
      "description": "<p>Retrieves an Issuing <code>Settlement</code> object.</p>"
    },
    {
      "operationId": "PostIssuingSettlementsSettlement",
      "method": "POST",
      "path": "/v1/issuing/settlements/{settlement}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a settlement",
      "description": "<p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "GetIssuingTokens",
      "method": "GET",
      "path": "/v1/issuing/tokens",
      "tags": [
        "untagged"
      ],
      "summary": "List all issuing tokens for card",
      "description": "<p>Lists all Issuing <code>Token</code> objects for a given card.</p>"
    },
    {
      "operationId": "GetIssuingTokensToken",
      "method": "GET",
      "path": "/v1/issuing/tokens/{token}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an issuing token",
      "description": "<p>Retrieves an Issuing <code>Token</code> object.</p>"
    },
    {
      "operationId": "PostIssuingTokensToken",
      "method": "POST",
      "path": "/v1/issuing/tokens/{token}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a token status",
      "description": "<p>Attempts to update the specified Issuing <code>Token</code> object to the status specified.</p>"
    },
    {
      "operationId": "GetIssuingTransactions",
      "method": "GET",
      "path": "/v1/issuing/transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List all transactions",
      "description": "<p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "GetIssuingTransactionsTransaction",
      "method": "GET",
      "path": "/v1/issuing/transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a transaction",
      "description": "<p>Retrieves an Issuing <code>Transaction</code> object.</p>"
    },
    {
      "operationId": "PostIssuingTransactionsTransaction",
      "method": "POST",
      "path": "/v1/issuing/transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a transaction",
      "description": "<p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "PostLinkAccountSessions",
      "method": "POST",
      "path": "/v1/link_account_sessions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Session",
      "description": "<p>To launch the Financial Connections authorization flow, create a <code>Session</code>. The session’s <code>client_secret</code> can be used to launch the flow using Stripe.js.</p>"
    },
    {
      "operationId": "GetLinkAccountSessionsSession",
      "method": "GET",
      "path": "/v1/link_account_sessions/{session}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Session",
      "description": "<p>Retrieves the details of a Financial Connections <code>Session</code></p>"
    },
    {
      "operationId": "GetLinkedAccounts",
      "method": "GET",
      "path": "/v1/linked_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List Accounts",
      "description": "<p>Returns a list of Financial Connections <code>Account</code> objects.</p>"
    },
    {
      "operationId": "GetLinkedAccountsAccount",
      "method": "GET",
      "path": "/v1/linked_accounts/{account}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an Account",
      "description": "<p>Retrieves the details of an Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "PostLinkedAccountsAccountDisconnect",
      "method": "POST",
      "path": "/v1/linked_accounts/{account}/disconnect",
      "tags": [
        "untagged"
      ],
      "summary": "Disconnect an Account",
      "description": "<p>Disables your access to a Financial Connections <code>Account</code>. You will no longer be able to access data associated with the account (e.g. balances, transactions).</p>"
    },
    {
      "operationId": "GetLinkedAccountsAccountOwners",
      "method": "GET",
      "path": "/v1/linked_accounts/{account}/owners",
      "tags": [
        "untagged"
      ],
      "summary": "List Account Owners",
      "description": "<p>Lists all owners for a given <code>Account</code></p>"
    },
    {
      "operationId": "PostLinkedAccountsAccountRefresh",
      "method": "POST",
      "path": "/v1/linked_accounts/{account}/refresh",
      "tags": [
        "untagged"
      ],
      "summary": "Refresh Account data",
      "description": "<p>Refreshes the data associated with a Financial Connections <code>Account</code>.</p>"
    },
    {
      "operationId": "GetMandatesMandate",
      "method": "GET",
      "path": "/v1/mandates/{mandate}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Mandate",
      "description": "<p>Retrieves a Mandate object.</p>"
    },
    {
      "operationId": "GetPaymentIntents",
      "method": "GET",
      "path": "/v1/payment_intents",
      "tags": [
        "untagged"
      ],
      "summary": "List all PaymentIntents",
      "description": "<p>Returns a list of PaymentIntents.</p>"
    },
    {
      "operationId": "PostPaymentIntents",
      "method": "POST",
      "path": "/v1/payment_intents",
      "tags": [
        "untagged"
      ],
      "summary": "Create a PaymentIntent",
      "description": "<p>Creates a PaymentIntent object.</p>\n\n<p>After the PaymentIntent is created, attach a payment method and <a href=\"/docs/api/payment_intents/confirm\">confirm</a>\nto continue the payment. Learn more about <a href=\"/docs/payments/payment-intents\">the available payment flows\nwith the Payment Intents API</a>.</p>\n\n<p>When you use <code>confirm=true</code> during creation, it’s equivalent to creating\nand confirming the PaymentIntent in the same call. You can use any parameters\navailable in the <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> when you supply\n<code>confirm=true</code>.</p>"
    },
    {
      "operationId": "GetPaymentIntentsSearch",
      "method": "GET",
      "path": "/v1/payment_intents/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search PaymentIntents",
      "description": "<p>Search for PaymentIntents you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "GetPaymentIntentsIntent",
      "method": "GET",
      "path": "/v1/payment_intents/{intent}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a PaymentIntent",
      "description": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p>\n\n<p>You can retrieve a PaymentIntent client-side using a publishable key when the <code>client_secret</code> is in the query string. </p>\n\n<p>If you retrieve a PaymentIntent with a publishable key, it only returns a subset of properties. Refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntent",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a PaymentIntent",
      "description": "<p>Updates properties on a PaymentIntent object without confirming.</p>\n\n<p>Depending on which properties you update, you might need to confirm the\nPaymentIntent again. For example, updating the <code>payment_method</code>\nalways requires you to confirm the PaymentIntent again. If you prefer to\nupdate and confirm at the same time, we recommend updating properties through\nthe <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> instead.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentApplyCustomerBalance",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/apply_customer_balance",
      "tags": [
        "untagged"
      ],
      "summary": "Reconcile a customer_balance PaymentIntent",
      "description": "<p>Manually reconcile the remaining amount for a <code>customer_balance</code> PaymentIntent.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentCancel",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a PaymentIntent",
      "description": "<p>You can cancel a PaymentIntent object when it’s in one of these statuses: <code>requires_payment_method</code>, <code>requires_capture</code>, <code>requires_confirmation</code>, <code>requires_action</code> or, <a href=\"/docs/payments/intents\">in rare cases</a>, <code>processing</code>. </p>\n\n<p>After it’s canceled, no additional charges are made by the PaymentIntent and any operations on the PaymentIntent fail with an error. For PaymentIntents with a <code>status</code> of <code>requires_capture</code>, the remaining <code>amount_capturable</code> is automatically refunded. </p>\n\n<p>You can’t cancel the PaymentIntent for a Checkout Session. <a href=\"/docs/api/checkout/sessions/expire\">Expire the Checkout Session</a> instead.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentCapture",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/capture",
      "tags": [
        "untagged"
      ],
      "summary": "Capture a PaymentIntent",
      "description": "<p>Capture the funds of an existing uncaptured PaymentIntent when its status is <code>requires_capture</code>.</p>\n\n<p>Uncaptured PaymentIntents are cancelled a set number of days (7 by default) after their creation.</p>\n\n<p>Learn more about <a href=\"/docs/payments/capture-later\">separate authorization and capture</a>.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentConfirm",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/confirm",
      "tags": [
        "untagged"
      ],
      "summary": "Confirm a PaymentIntent",
      "description": "<p>Confirm that your customer intends to pay with current or provided\npayment method. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.</p>\n\n<p>If the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If payment fails,\nthe PaymentIntent transitions to the <code>requires_payment_method</code> status or the\n<code>canceled</code> status if the confirmation limit is reached. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>\n\n<p>If the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted\nusing our <a href=\"/docs/stripe-js/reference#stripe-handle-card-payment\">client SDKs</a>\nand the PaymentIntent’s <a href=\"#payment_intent_object-client_secret\">client_secret</a>.\nAfter <code>next_action</code>s are handled by the client, no additional\nconfirmation is required to complete the payment.</p>\n\n<p>If the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be\ninitiated using a secret key.</p>\n\n<p>If any actions are required for the payment, the PaymentIntent will\nreturn to the <code>requires_confirmation</code> state\nafter those actions are completed. Your server needs to then\nexplicitly re-confirm the PaymentIntent to initiate the next payment\nattempt.</p>\n\n<p>There is a variable upper limit on how many times a PaymentIntent can be confirmed.\nAfter this limit is reached, any further calls to this endpoint will\ntransition the PaymentIntent to the <code>canceled</code> state.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentIncrementAuthorization",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/increment_authorization",
      "tags": [
        "untagged"
      ],
      "summary": "Increment an authorization",
      "description": "<p>Perform an incremental authorization on an eligible\n<a href=\"/docs/api/payment_intents/object\">PaymentIntent</a>. To be eligible, the\nPaymentIntent’s status must be <code>requires_capture</code> and\n<a href=\"/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported\">incremental_authorization_supported</a>\nmust be <code>true</code>.</p>\n\n<p>Incremental authorizations attempt to increase the authorized amount on\nyour customer’s card to the new, higher <code>amount</code> provided. Similar to the\ninitial authorization, incremental authorizations can be declined. A\nsingle PaymentIntent can call this endpoint multiple times to further\nincrease the authorized amount.</p>\n\n<p>If the incremental authorization succeeds, the PaymentIntent object\nreturns with the updated\n<a href=\"/docs/api/payment_intents/object#payment_intent_object-amount\">amount</a>.\nIf the incremental authorization fails, a\n<a href=\"/docs/error-codes#card-declined\">card_declined</a> error returns, and no other\nfields on the PaymentIntent or Charge update. The PaymentIntent\nobject remains capturable for the previously authorized amount.</p>\n\n<p>Each PaymentIntent can have a maximum of 10 incremental authorization attempts, including declines.\nAfter it’s captured, a PaymentIntent can no longer be incremented.</p>\n\n<p>Learn more about <a href=\"/docs/terminal/features/incremental-authorizations\">incremental authorizations</a>.</p>"
    },
    {
      "operationId": "PostPaymentIntentsIntentVerifyMicrodeposits",
      "method": "POST",
      "path": "/v1/payment_intents/{intent}/verify_microdeposits",
      "tags": [
        "untagged"
      ],
      "summary": "Verify microdeposits on a PaymentIntent",
      "description": "<p>Verifies microdeposits on a PaymentIntent object.</p>"
    },
    {
      "operationId": "GetPaymentLinks",
      "method": "GET",
      "path": "/v1/payment_links",
      "tags": [
        "untagged"
      ],
      "summary": "List all payment links",
      "description": "<p>Returns a list of your payment links.</p>"
    },
    {
      "operationId": "PostPaymentLinks",
      "method": "POST",
      "path": "/v1/payment_links",
      "tags": [
        "untagged"
      ],
      "summary": "Create a payment link",
      "description": "<p>Creates a payment link.</p>"
    },
    {
      "operationId": "GetPaymentLinksPaymentLink",
      "method": "GET",
      "path": "/v1/payment_links/{payment_link}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve payment link",
      "description": "<p>Retrieve a payment link.</p>"
    },
    {
      "operationId": "PostPaymentLinksPaymentLink",
      "method": "POST",
      "path": "/v1/payment_links/{payment_link}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a payment link",
      "description": "<p>Updates a payment link.</p>"
    },
    {
      "operationId": "GetPaymentLinksPaymentLinkLineItems",
      "method": "GET",
      "path": "/v1/payment_links/{payment_link}/line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a payment link's line items",
      "description": "<p>When retrieving a payment link, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "GetPaymentMethodConfigurations",
      "method": "GET",
      "path": "/v1/payment_method_configurations",
      "tags": [
        "untagged"
      ],
      "summary": "List payment method configurations",
      "description": "<p>List payment method configurations</p>"
    },
    {
      "operationId": "PostPaymentMethodConfigurations",
      "method": "POST",
      "path": "/v1/payment_method_configurations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a payment method configuration",
      "description": "<p>Creates a payment method configuration</p>"
    },
    {
      "operationId": "GetPaymentMethodConfigurationsConfiguration",
      "method": "GET",
      "path": "/v1/payment_method_configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve payment method configuration",
      "description": "<p>Retrieve payment method configuration</p>"
    },
    {
      "operationId": "PostPaymentMethodConfigurationsConfiguration",
      "method": "POST",
      "path": "/v1/payment_method_configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Update payment method configuration",
      "description": "<p>Update payment method configuration</p>"
    },
    {
      "operationId": "GetPaymentMethodDomains",
      "method": "GET",
      "path": "/v1/payment_method_domains",
      "tags": [
        "untagged"
      ],
      "summary": "List payment method domains",
      "description": "<p>Lists the details of existing payment method domains.</p>"
    },
    {
      "operationId": "PostPaymentMethodDomains",
      "method": "POST",
      "path": "/v1/payment_method_domains",
      "tags": [
        "untagged"
      ],
      "summary": "Create a payment method domain",
      "description": "<p>Creates a payment method domain.</p>"
    },
    {
      "operationId": "GetPaymentMethodDomainsPaymentMethodDomain",
      "method": "GET",
      "path": "/v1/payment_method_domains/{payment_method_domain}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a payment method domain",
      "description": "<p>Retrieves the details of an existing payment method domain.</p>"
    },
    {
      "operationId": "PostPaymentMethodDomainsPaymentMethodDomain",
      "method": "POST",
      "path": "/v1/payment_method_domains/{payment_method_domain}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a payment method domain",
      "description": "<p>Updates an existing payment method domain.</p>"
    },
    {
      "operationId": "PostPaymentMethodDomainsPaymentMethodDomainValidate",
      "method": "POST",
      "path": "/v1/payment_method_domains/{payment_method_domain}/validate",
      "tags": [
        "untagged"
      ],
      "summary": "Validate an existing payment method domain",
      "description": "<p>Some payment methods might require additional steps to register a domain. If the requirements weren’t satisfied when the domain was created, the payment method will be inactive on the domain.\nThe payment method doesn’t appear in Elements or Embedded Checkout for this domain until it is active.</p>\n\n<p>To activate a payment method on an existing payment method domain, complete the required registration steps specific to the payment method, and then validate the payment method domain with this endpoint.</p>\n\n<p>Related guides: <a href=\"/docs/payments/payment-methods/pmd-registration\">Payment method domains</a>.</p>"
    },
    {
      "operationId": "GetPaymentMethods",
      "method": "GET",
      "path": "/v1/payment_methods",
      "tags": [
        "untagged"
      ],
      "summary": "List PaymentMethods",
      "description": "<p>Returns a list of PaymentMethods for Treasury flows. If you want to list the PaymentMethods attached to a Customer for payments, you should use the <a href=\"/docs/api/payment_methods/customer_list\">List a Customer’s PaymentMethods</a> API instead.</p>"
    },
    {
      "operationId": "PostPaymentMethods",
      "method": "POST",
      "path": "/v1/payment_methods",
      "tags": [
        "untagged"
      ],
      "summary": "Shares a PaymentMethod",
      "description": "<p>Creates a PaymentMethod object. Read the <a href=\"/docs/stripe-js/reference#stripe-create-payment-method\">Stripe.js reference</a> to learn how to create PaymentMethods via Stripe.js.</p>\n\n<p>Instead of creating a PaymentMethod directly, we recommend using the <a href=\"/docs/payments/accept-a-payment\">PaymentIntents</a> API to accept a payment immediately or the <a href=\"/docs/payments/save-and-reuse\">SetupIntent</a> API to collect payment method details ahead of a future payment.</p>"
    },
    {
      "operationId": "GetPaymentMethodsPaymentMethod",
      "method": "GET",
      "path": "/v1/payment_methods/{payment_method}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a PaymentMethod",
      "description": "<p>Retrieves a PaymentMethod object attached to the StripeAccount. To retrieve a payment method attached to a Customer, you should use <a href=\"/docs/api/payment_methods/customer\">Retrieve a Customer’s PaymentMethods</a></p>"
    },
    {
      "operationId": "PostPaymentMethodsPaymentMethod",
      "method": "POST",
      "path": "/v1/payment_methods/{payment_method}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a PaymentMethod",
      "description": "<p>Updates a PaymentMethod object. A PaymentMethod must be attached to a customer to be updated.</p>"
    },
    {
      "operationId": "PostPaymentMethodsPaymentMethodAttach",
      "method": "POST",
      "path": "/v1/payment_methods/{payment_method}/attach",
      "tags": [
        "untagged"
      ],
      "summary": "Attach a PaymentMethod to a Customer",
      "description": "<p>Attaches a PaymentMethod object to a Customer.</p>\n\n<p>To attach a new PaymentMethod to a customer for future payments, we recommend you use a <a href=\"/docs/api/setup_intents\">SetupIntent</a>\nor a PaymentIntent with <a href=\"/docs/api/payment_intents/create#create_payment_intent-setup_future_usage\">setup_future_usage</a>.\nThese approaches will perform any necessary steps to set up the PaymentMethod for future payments. Using the <code>/v1/payment_methods/:id/attach</code>\nendpoint without first using a SetupIntent or PaymentIntent with <code>setup_future_usage</code> does not optimize the PaymentMethod for\nfuture use, which makes later declines and payment friction more likely.\nSee <a href=\"/docs/payments/payment-intents#future-usage\">Optimizing cards for future payments</a> for more information about setting up\nfuture payments.</p>\n\n<p>To use this PaymentMethod as the default for invoice or subscription payments,\nset <a href=\"/docs/api/customers/update#update_customer-invoice_settings-default_payment_method\"><code>invoice_settings.default_payment_method</code></a>,\non the Customer to the PaymentMethod’s ID.</p>"
    },
    {
      "operationId": "PostPaymentMethodsPaymentMethodDetach",
      "method": "POST",
      "path": "/v1/payment_methods/{payment_method}/detach",
      "tags": [
        "untagged"
      ],
      "summary": "Detach a PaymentMethod from a Customer",
      "description": "<p>Detaches a PaymentMethod object from a Customer. After a PaymentMethod is detached, it can no longer be used for a payment or re-attached to a Customer.</p>"
    },
    {
      "operationId": "GetPayouts",
      "method": "GET",
      "path": "/v1/payouts",
      "tags": [
        "untagged"
      ],
      "summary": "List all payouts",
      "description": "<p>Returns a list of existing payouts sent to third-party bank accounts or payouts that Stripe sent to you. The payouts return in sorted order, with the most recently created payouts appearing first.</p>"
    },
    {
      "operationId": "PostPayouts",
      "method": "POST",
      "path": "/v1/payouts",
      "tags": [
        "untagged"
      ],
      "summary": "Create a payout",
      "description": "<p>To send funds to your own bank account, create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must cover the payout amount. If it doesn’t, you receive an “Insufficient Funds” error.</p>\n\n<p>If your API key is in test mode, money won’t actually be sent, though every other action occurs as if you’re in live mode.</p>\n\n<p>If you create a manual payout on a Stripe account that uses multiple payment source types, you need to specify the source type balance that the payout draws from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>"
    },
    {
      "operationId": "GetPayoutsPayout",
      "method": "GET",
      "path": "/v1/payouts/{payout}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a payout",
      "description": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list. Stripe returns the corresponding payout information.</p>"
    },
    {
      "operationId": "PostPayoutsPayout",
      "method": "POST",
      "path": "/v1/payouts/{payout}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a payout",
      "description": "<p>Updates the specified payout by setting the values of the parameters you pass. We don’t change parameters that you don’t provide. This request only accepts the metadata as arguments.</p>"
    },
    {
      "operationId": "PostPayoutsPayoutCancel",
      "method": "POST",
      "path": "/v1/payouts/{payout}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a payout",
      "description": "<p>You can cancel a previously created payout if its status is <code>pending</code>. Stripe refunds the funds to your available balance. You can’t cancel automatic Stripe payouts.</p>"
    },
    {
      "operationId": "PostPayoutsPayoutReverse",
      "method": "POST",
      "path": "/v1/payouts/{payout}/reverse",
      "tags": [
        "untagged"
      ],
      "summary": "Reverse a payout",
      "description": "<p>Reverses a payout by debiting the destination bank account. At this time, you can only reverse payouts for connected accounts to US bank accounts. If the payout is manual and in the <code>pending</code> status, use <code>/v1/payouts/:id/cancel</code> instead.</p>\n\n<p>By requesting a reversal through <code>/v1/payouts/:id/reverse</code>, you confirm that the authorized signatory of the selected bank account authorizes the debit on the bank account and that no other authorization is required.</p>"
    },
    {
      "operationId": "GetPlans",
      "method": "GET",
      "path": "/v1/plans",
      "tags": [
        "untagged"
      ],
      "summary": "List all plans",
      "description": "<p>Returns a list of your plans.</p>"
    },
    {
      "operationId": "PostPlans",
      "method": "POST",
      "path": "/v1/plans",
      "tags": [
        "untagged"
      ],
      "summary": "Create a plan",
      "description": "<p>You can now model subscriptions more flexibly using the <a href=\"#prices\">Prices API</a>. It replaces the Plans API and is backwards compatible to simplify your migration.</p>"
    },
    {
      "operationId": "DeletePlansPlan",
      "method": "DELETE",
      "path": "/v1/plans/{plan}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a plan",
      "description": "<p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>"
    },
    {
      "operationId": "GetPlansPlan",
      "method": "GET",
      "path": "/v1/plans/{plan}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a plan",
      "description": "<p>Retrieves the plan with the given ID.</p>"
    },
    {
      "operationId": "PostPlansPlan",
      "method": "POST",
      "path": "/v1/plans/{plan}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a plan",
      "description": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>"
    },
    {
      "operationId": "GetPrices",
      "method": "GET",
      "path": "/v1/prices",
      "tags": [
        "untagged"
      ],
      "summary": "List all prices",
      "description": "<p>Returns a list of your active prices, excluding <a href=\"/docs/products-prices/pricing-models#inline-pricing\">inline prices</a>. For the list of inactive prices, set <code>active</code> to false.</p>"
    },
    {
      "operationId": "PostPrices",
      "method": "POST",
      "path": "/v1/prices",
      "tags": [
        "untagged"
      ],
      "summary": "Create a price",
      "description": "<p>Creates a new <a href=\"https://docs.stripe.com/api/prices\">Price</a> for an existing <a href=\"https://docs.stripe.com/api/products\">Product</a>. The Price can be recurring or one-time.</p>"
    },
    {
      "operationId": "GetPricesSearch",
      "method": "GET",
      "path": "/v1/prices/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search prices",
      "description": "<p>Search for prices you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "GetPricesPrice",
      "method": "GET",
      "path": "/v1/prices/{price}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a price",
      "description": "<p>Retrieves the price with the given ID.</p>"
    },
    {
      "operationId": "PostPricesPrice",
      "method": "POST",
      "path": "/v1/prices/{price}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a price",
      "description": "<p>Updates the specified price by setting the values of the parameters passed. Any parameters not provided are left unchanged.</p>"
    },
    {
      "operationId": "GetProducts",
      "method": "GET",
      "path": "/v1/products",
      "tags": [
        "untagged"
      ],
      "summary": "List all products",
      "description": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>"
    },
    {
      "operationId": "PostProducts",
      "method": "POST",
      "path": "/v1/products",
      "tags": [
        "untagged"
      ],
      "summary": "Create a product",
      "description": "<p>Creates a new product object.</p>"
    },
    {
      "operationId": "GetProductsSearch",
      "method": "GET",
      "path": "/v1/products/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search products",
      "description": "<p>Search for products you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "DeleteProductsId",
      "method": "DELETE",
      "path": "/v1/products/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a product",
      "description": "<p>Delete a product. Deleting a product is only possible if it has no prices associated with it. Additionally, deleting a product with <code>type=good</code> is only possible if it has no SKUs associated with it.</p>"
    },
    {
      "operationId": "GetProductsId",
      "method": "GET",
      "path": "/v1/products/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a product",
      "description": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>"
    },
    {
      "operationId": "PostProductsId",
      "method": "POST",
      "path": "/v1/products/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a product",
      "description": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "GetProductsProductFeatures",
      "method": "GET",
      "path": "/v1/products/{product}/features",
      "tags": [
        "untagged"
      ],
      "summary": "List all features attached to a product",
      "description": "<p>Retrieve a list of features for a product</p>"
    },
    {
      "operationId": "PostProductsProductFeatures",
      "method": "POST",
      "path": "/v1/products/{product}/features",
      "tags": [
        "untagged"
      ],
      "summary": "Attach a feature to a product",
      "description": "<p>Creates a product_feature, which represents a feature attachment to a product</p>"
    },
    {
      "operationId": "DeleteProductsProductFeaturesId",
      "method": "DELETE",
      "path": "/v1/products/{product}/features/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Remove a feature from a product",
      "description": "<p>Deletes the feature attachment to a product</p>"
    },
    {
      "operationId": "GetProductsProductFeaturesId",
      "method": "GET",
      "path": "/v1/products/{product}/features/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a product_feature",
      "description": "<p>Retrieves a product_feature, which represents a feature attachment to a product</p>"
    },
    {
      "operationId": "GetPromotionCodes",
      "method": "GET",
      "path": "/v1/promotion_codes",
      "tags": [
        "untagged"
      ],
      "summary": "List all promotion codes",
      "description": "<p>Returns a list of your promotion codes.</p>"
    },
    {
      "operationId": "PostPromotionCodes",
      "method": "POST",
      "path": "/v1/promotion_codes",
      "tags": [
        "untagged"
      ],
      "summary": "Create a promotion code",
      "description": "<p>A promotion code points to an underlying promotion. You can optionally restrict the code to a specific customer, redemption limit, and expiration date.</p>"
    },
    {
      "operationId": "GetPromotionCodesPromotionCode",
      "method": "GET",
      "path": "/v1/promotion_codes/{promotion_code}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a promotion code",
      "description": "<p>Retrieves the promotion code with the given ID. In order to retrieve a promotion code by the customer-facing <code>code</code> use <a href=\"/docs/api/promotion_codes/list\">list</a> with the desired <code>code</code>.</p>"
    },
    {
      "operationId": "PostPromotionCodesPromotionCode",
      "method": "POST",
      "path": "/v1/promotion_codes/{promotion_code}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a promotion code",
      "description": "<p>Updates the specified promotion code by setting the values of the parameters passed. Most fields are, by design, not editable.</p>"
    },
    {
      "operationId": "GetQuotes",
      "method": "GET",
      "path": "/v1/quotes",
      "tags": [
        "untagged"
      ],
      "summary": "List all quotes",
      "description": "<p>Returns a list of your quotes.</p>"
    },
    {
      "operationId": "PostQuotes",
      "method": "POST",
      "path": "/v1/quotes",
      "tags": [
        "untagged"
      ],
      "summary": "Create a quote",
      "description": "<p>A quote models prices and services for a customer. Default options for <code>header</code>, <code>description</code>, <code>footer</code>, and <code>expires_at</code> can be set in the dashboard via the <a href=\"https://dashboard.stripe.com/settings/billing/quote\">quote template</a>.</p>"
    },
    {
      "operationId": "GetQuotesQuote",
      "method": "GET",
      "path": "/v1/quotes/{quote}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a quote",
      "description": "<p>Retrieves the quote with the given ID.</p>"
    },
    {
      "operationId": "PostQuotesQuote",
      "method": "POST",
      "path": "/v1/quotes/{quote}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a quote",
      "description": "<p>A quote models prices and services for a customer.</p>"
    },
    {
      "operationId": "PostQuotesQuoteAccept",
      "method": "POST",
      "path": "/v1/quotes/{quote}/accept",
      "tags": [
        "untagged"
      ],
      "summary": "Accept a quote",
      "description": "<p>Accepts the specified quote.</p>"
    },
    {
      "operationId": "PostQuotesQuoteCancel",
      "method": "POST",
      "path": "/v1/quotes/{quote}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a quote",
      "description": "<p>Cancels the quote.</p>"
    },
    {
      "operationId": "GetQuotesQuoteComputedUpfrontLineItems",
      "method": "GET",
      "path": "/v1/quotes/{quote}/computed_upfront_line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a quote's upfront line items",
      "description": "<p>When retrieving a quote, there is an includable <a href=\"https://stripe.com/docs/api/quotes/object#quote_object-computed-upfront-line_items\"><strong>computed.upfront.line_items</strong></a> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of upfront line items.</p>"
    },
    {
      "operationId": "PostQuotesQuoteFinalize",
      "method": "POST",
      "path": "/v1/quotes/{quote}/finalize",
      "tags": [
        "untagged"
      ],
      "summary": "Finalize a quote",
      "description": "<p>Finalizes the quote.</p>"
    },
    {
      "operationId": "GetQuotesQuoteLineItems",
      "method": "GET",
      "path": "/v1/quotes/{quote}/line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a quote's line items",
      "description": "<p>When retrieving a quote, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
    },
    {
      "operationId": "GetQuotesQuotePdf",
      "method": "GET",
      "path": "/v1/quotes/{quote}/pdf",
      "tags": [
        "untagged"
      ],
      "summary": "Download quote PDF",
      "description": "<p>Download the PDF for a finalized quote. Explanation for special handling can be found <a href=\"https://docs.stripe.com/quotes/overview#quote_pdf\">here</a></p>"
    },
    {
      "operationId": "GetRadarEarlyFraudWarnings",
      "method": "GET",
      "path": "/v1/radar/early_fraud_warnings",
      "tags": [
        "untagged"
      ],
      "summary": "List all early fraud warnings",
      "description": "<p>Returns a list of early fraud warnings.</p>"
    },
    {
      "operationId": "GetRadarEarlyFraudWarningsEarlyFraudWarning",
      "method": "GET",
      "path": "/v1/radar/early_fraud_warnings/{early_fraud_warning}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an early fraud warning",
      "description": "<p>Retrieves the details of an early fraud warning that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#early_fraud_warning_object\">early fraud warning</a> object reference for more details.</p>"
    },
    {
      "operationId": "GetRadarValueListItems",
      "method": "GET",
      "path": "/v1/radar/value_list_items",
      "tags": [
        "untagged"
      ],
      "summary": "List all value list items",
      "description": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostRadarValueListItems",
      "method": "POST",
      "path": "/v1/radar/value_list_items",
      "tags": [
        "untagged"
      ],
      "summary": "Create a value list item",
      "description": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>"
    },
    {
      "operationId": "DeleteRadarValueListItemsItem",
      "method": "DELETE",
      "path": "/v1/radar/value_list_items/{item}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a value list item",
      "description": "<p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>"
    },
    {
      "operationId": "GetRadarValueListItemsItem",
      "method": "GET",
      "path": "/v1/radar/value_list_items/{item}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a value list item",
      "description": "<p>Retrieves a <code>ValueListItem</code> object.</p>"
    },
    {
      "operationId": "GetRadarValueLists",
      "method": "GET",
      "path": "/v1/radar/value_lists",
      "tags": [
        "untagged"
      ],
      "summary": "List all value lists",
      "description": "<p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "PostRadarValueLists",
      "method": "POST",
      "path": "/v1/radar/value_lists",
      "tags": [
        "untagged"
      ],
      "summary": "Create a value list",
      "description": "<p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>"
    },
    {
      "operationId": "DeleteRadarValueListsValueList",
      "method": "DELETE",
      "path": "/v1/radar/value_lists/{value_list}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a value list",
      "description": "<p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>"
    },
    {
      "operationId": "GetRadarValueListsValueList",
      "method": "GET",
      "path": "/v1/radar/value_lists/{value_list}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a value list",
      "description": "<p>Retrieves a <code>ValueList</code> object.</p>"
    },
    {
      "operationId": "PostRadarValueListsValueList",
      "method": "POST",
      "path": "/v1/radar/value_lists/{value_list}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a value list",
      "description": "<p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>"
    },
    {
      "operationId": "GetRefunds",
      "method": "GET",
      "path": "/v1/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "List all refunds",
      "description": "<p>Returns a list of all refunds you created. We return the refunds in sorted order, with the most recent refunds appearing first. The 10 most recent refunds are always available by default on the Charge object.</p>"
    },
    {
      "operationId": "PostRefunds",
      "method": "POST",
      "path": "/v1/refunds",
      "tags": [
        "untagged"
      ],
      "summary": "Create customer balance refund",
      "description": "<p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can’t be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>"
    },
    {
      "operationId": "GetRefundsRefund",
      "method": "GET",
      "path": "/v1/refunds/{refund}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a refund",
      "description": "<p>Retrieves the details of an existing refund.</p>"
    },
    {
      "operationId": "PostRefundsRefund",
      "method": "POST",
      "path": "/v1/refunds/{refund}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a refund",
      "description": "<p>Updates the refund that you specify by setting the values of the passed parameters. Any parameters that you don’t provide remain unchanged.</p>\n\n<p>This request only accepts <code>metadata</code> as an argument.</p>"
    },
    {
      "operationId": "PostRefundsRefundCancel",
      "method": "POST",
      "path": "/v1/refunds/{refund}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a refund",
      "description": "<p>Cancels a refund with a status of <code>requires_action</code>.</p>\n\n<p>You can’t cancel refunds in other states. Only refunds for payment methods that require customer action can enter the <code>requires_action</code> state.</p>"
    },
    {
      "operationId": "GetReportingReportRuns",
      "method": "GET",
      "path": "/v1/reporting/report_runs",
      "tags": [
        "untagged"
      ],
      "summary": "List all Report Runs",
      "description": "<p>Returns a list of Report Runs, with the most recent appearing first.</p>"
    },
    {
      "operationId": "PostReportingReportRuns",
      "method": "POST",
      "path": "/v1/reporting/report_runs",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Report Run",
      "description": "<p>Creates a new object and begin running the report. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
    },
    {
      "operationId": "GetReportingReportRunsReportRun",
      "method": "GET",
      "path": "/v1/reporting/report_runs/{report_run}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Report Run",
      "description": "<p>Retrieves the details of an existing Report Run.</p>"
    },
    {
      "operationId": "GetReportingReportTypes",
      "method": "GET",
      "path": "/v1/reporting/report_types",
      "tags": [
        "untagged"
      ],
      "summary": "List all Report Types",
      "description": "<p>Returns a full list of Report Types.</p>"
    },
    {
      "operationId": "GetReportingReportTypesReportType",
      "method": "GET",
      "path": "/v1/reporting/report_types/{report_type}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Report Type",
      "description": "<p>Retrieves the details of a Report Type. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
    },
    {
      "operationId": "GetReviews",
      "method": "GET",
      "path": "/v1/reviews",
      "tags": [
        "untagged"
      ],
      "summary": "List all open reviews",
      "description": "<p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>"
    },
    {
      "operationId": "GetReviewsReview",
      "method": "GET",
      "path": "/v1/reviews/{review}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a review",
      "description": "<p>Retrieves a <code>Review</code> object.</p>"
    },
    {
      "operationId": "PostReviewsReviewApprove",
      "method": "POST",
      "path": "/v1/reviews/{review}/approve",
      "tags": [
        "untagged"
      ],
      "summary": "Approve a review",
      "description": "<p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>"
    },
    {
      "operationId": "GetSetupAttempts",
      "method": "GET",
      "path": "/v1/setup_attempts",
      "tags": [
        "untagged"
      ],
      "summary": "List all SetupAttempts",
      "description": "<p>Returns a list of SetupAttempts that associate with a provided SetupIntent.</p>"
    },
    {
      "operationId": "GetSetupIntents",
      "method": "GET",
      "path": "/v1/setup_intents",
      "tags": [
        "untagged"
      ],
      "summary": "List all SetupIntents",
      "description": "<p>Returns a list of SetupIntents.</p>"
    },
    {
      "operationId": "PostSetupIntents",
      "method": "POST",
      "path": "/v1/setup_intents",
      "tags": [
        "untagged"
      ],
      "summary": "Create a SetupIntent",
      "description": "<p>Creates a SetupIntent object.</p>\n\n<p>After you create the SetupIntent, attach a payment method and <a href=\"/docs/api/setup_intents/confirm\">confirm</a>\nit to collect any required permissions to charge the payment method later.</p>"
    },
    {
      "operationId": "GetSetupIntentsIntent",
      "method": "GET",
      "path": "/v1/setup_intents/{intent}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a SetupIntent",
      "description": "<p>Retrieves the details of a SetupIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#setup_intent_object\">SetupIntent</a> object reference for more details.</p>"
    },
    {
      "operationId": "PostSetupIntentsIntent",
      "method": "POST",
      "path": "/v1/setup_intents/{intent}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a SetupIntent",
      "description": "<p>Updates a SetupIntent object.</p>"
    },
    {
      "operationId": "PostSetupIntentsIntentCancel",
      "method": "POST",
      "path": "/v1/setup_intents/{intent}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a SetupIntent",
      "description": "<p>You can cancel a SetupIntent object when it’s in one of these statuses: <code>requires_payment_method</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>\n\n<p>After you cancel it, setup is abandoned and any operations on the SetupIntent fail with an error. You can’t cancel the SetupIntent for a Checkout Session. <a href=\"/docs/api/checkout/sessions/expire\">Expire the Checkout Session</a> instead.</p>"
    },
    {
      "operationId": "PostSetupIntentsIntentConfirm",
      "method": "POST",
      "path": "/v1/setup_intents/{intent}/confirm",
      "tags": [
        "untagged"
      ],
      "summary": "Confirm a SetupIntent",
      "description": "<p>Confirm that your customer intends to set up the current or\nprovided payment method. For example, you would confirm a SetupIntent\nwhen a customer hits the “Save” button on a payment method management\npage on your website.</p>\n\n<p>If the selected payment method does not require any additional\nsteps from the customer, the SetupIntent will transition to the\n<code>succeeded</code> status.</p>\n\n<p>Otherwise, it will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If setup fails,\nthe SetupIntent will transition to the\n<code>requires_payment_method</code> status or the <code>canceled</code> status if the\nconfirmation limit is reached.</p>"
    },
    {
      "operationId": "PostSetupIntentsIntentVerifyMicrodeposits",
      "method": "POST",
      "path": "/v1/setup_intents/{intent}/verify_microdeposits",
      "tags": [
        "untagged"
      ],
      "summary": "Verify microdeposits on a SetupIntent",
      "description": "<p>Verifies microdeposits on a SetupIntent object.</p>"
    },
    {
      "operationId": "GetShippingRates",
      "method": "GET",
      "path": "/v1/shipping_rates",
      "tags": [
        "untagged"
      ],
      "summary": "List all shipping rates",
      "description": "<p>Returns a list of your shipping rates.</p>"
    },
    {
      "operationId": "PostShippingRates",
      "method": "POST",
      "path": "/v1/shipping_rates",
      "tags": [
        "untagged"
      ],
      "summary": "Create a shipping rate",
      "description": "<p>Creates a new shipping rate object.</p>"
    },
    {
      "operationId": "GetShippingRatesShippingRateToken",
      "method": "GET",
      "path": "/v1/shipping_rates/{shipping_rate_token}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a shipping rate",
      "description": "<p>Returns the shipping rate object with the given ID.</p>"
    },
    {
      "operationId": "PostShippingRatesShippingRateToken",
      "method": "POST",
      "path": "/v1/shipping_rates/{shipping_rate_token}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a shipping rate",
      "description": "<p>Updates an existing shipping rate object.</p>"
    },
    {
      "operationId": "PostSigmaSavedQueriesId",
      "method": "POST",
      "path": "/v1/sigma/saved_queries/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update an existing Sigma Query",
      "description": "<p>Update an existing Sigma query that previously exists</p>"
    },
    {
      "operationId": "GetSigmaScheduledQueryRuns",
      "method": "GET",
      "path": "/v1/sigma/scheduled_query_runs",
      "tags": [
        "untagged"
      ],
      "summary": "List all scheduled query runs",
      "description": "<p>Returns a list of scheduled query runs.</p>"
    },
    {
      "operationId": "GetSigmaScheduledQueryRunsScheduledQueryRun",
      "method": "GET",
      "path": "/v1/sigma/scheduled_query_runs/{scheduled_query_run}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a scheduled query run",
      "description": "<p>Retrieves the details of an scheduled query run.</p>"
    },
    {
      "operationId": "PostSources",
      "method": "POST",
      "path": "/v1/sources",
      "tags": [
        "untagged"
      ],
      "summary": "Shares a source",
      "description": "<p>Creates a new source object.</p>"
    },
    {
      "operationId": "GetSourcesSource",
      "method": "GET",
      "path": "/v1/sources/{source}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a source",
      "description": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>"
    },
    {
      "operationId": "PostSourcesSource",
      "method": "POST",
      "path": "/v1/sources/{source}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a source",
      "description": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>"
    },
    {
      "operationId": "GetSourcesSourceMandateNotificationsMandateNotification",
      "method": "GET",
      "path": "/v1/sources/{source}/mandate_notifications/{mandate_notification}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Source MandateNotification",
      "description": "<p>Retrieves a new Source MandateNotification.</p>"
    },
    {
      "operationId": "GetSourcesSourceSourceTransactions",
      "method": "GET",
      "path": "/v1/sources/{source}/source_transactions",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>List source transactions for a given source.</p>"
    },
    {
      "operationId": "GetSourcesSourceSourceTransactionsSourceTransaction",
      "method": "GET",
      "path": "/v1/sources/{source}/source_transactions/{source_transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a source transaction",
      "description": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>"
    },
    {
      "operationId": "PostSourcesSourceVerify",
      "method": "POST",
      "path": "/v1/sources/{source}/verify",
      "tags": [
        "untagged"
      ],
      "summary": "",
      "description": "<p>Verify a given source.</p>"
    },
    {
      "operationId": "GetSubscriptionItems",
      "method": "GET",
      "path": "/v1/subscription_items",
      "tags": [
        "untagged"
      ],
      "summary": "List all subscription items",
      "description": "<p>Returns a list of your subscription items for a given subscription.</p>"
    },
    {
      "operationId": "PostSubscriptionItems",
      "method": "POST",
      "path": "/v1/subscription_items",
      "tags": [
        "untagged"
      ],
      "summary": "Create a subscription item",
      "description": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>"
    },
    {
      "operationId": "DeleteSubscriptionItemsItem",
      "method": "DELETE",
      "path": "/v1/subscription_items/{item}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a subscription item",
      "description": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>"
    },
    {
      "operationId": "GetSubscriptionItemsItem",
      "method": "GET",
      "path": "/v1/subscription_items/{item}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a subscription item",
      "description": "<p>Retrieves the subscription item with the given ID.</p>"
    },
    {
      "operationId": "PostSubscriptionItemsItem",
      "method": "POST",
      "path": "/v1/subscription_items/{item}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a subscription item",
      "description": "<p>Updates the plan or quantity of an item on a current subscription.</p>"
    },
    {
      "operationId": "GetSubscriptionSchedules",
      "method": "GET",
      "path": "/v1/subscription_schedules",
      "tags": [
        "untagged"
      ],
      "summary": "List all schedules",
      "description": "<p>Retrieves the list of your subscription schedules.</p>"
    },
    {
      "operationId": "PostSubscriptionSchedules",
      "method": "POST",
      "path": "/v1/subscription_schedules",
      "tags": [
        "untagged"
      ],
      "summary": "Create a schedule",
      "description": "<p>Creates a new subscription schedule object. Each customer can have up to 500 active or scheduled subscriptions.</p>"
    },
    {
      "operationId": "GetSubscriptionSchedulesSchedule",
      "method": "GET",
      "path": "/v1/subscription_schedules/{schedule}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a schedule",
      "description": "<p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>"
    },
    {
      "operationId": "PostSubscriptionSchedulesSchedule",
      "method": "POST",
      "path": "/v1/subscription_schedules/{schedule}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a schedule",
      "description": "<p>Updates an existing subscription schedule.</p>"
    },
    {
      "operationId": "PostSubscriptionSchedulesScheduleCancel",
      "method": "POST",
      "path": "/v1/subscription_schedules/{schedule}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a schedule",
      "description": "<p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>"
    },
    {
      "operationId": "PostSubscriptionSchedulesScheduleRelease",
      "method": "POST",
      "path": "/v1/subscription_schedules/{schedule}/release",
      "tags": [
        "untagged"
      ],
      "summary": "Release a schedule",
      "description": "<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription’s ID to the <code>released_subscription</code> property.</p>"
    },
    {
      "operationId": "GetSubscriptions",
      "method": "GET",
      "path": "/v1/subscriptions",
      "tags": [
        "untagged"
      ],
      "summary": "List subscriptions",
      "description": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>"
    },
    {
      "operationId": "PostSubscriptions",
      "method": "POST",
      "path": "/v1/subscriptions",
      "tags": [
        "untagged"
      ],
      "summary": "Create a subscription",
      "description": "<p>Creates a new subscription on an existing customer. Each customer can have up to 500 active or scheduled subscriptions.</p>\n\n<p>When you create a subscription with <code>collection_method=charge_automatically</code>, the first invoice is finalized as part of the request.\nThe <code>payment_behavior</code> parameter determines the exact behavior of the initial payment.</p>\n\n<p>To start subscriptions where the first invoice always begins in a <code>draft</code> status, use <a href=\"/docs/billing/subscriptions/subscription-schedules#managing\">subscription schedules</a> instead.\nSchedules provide the flexibility to model more complex billing configurations that change over time.</p>"
    },
    {
      "operationId": "GetSubscriptionsSearch",
      "method": "GET",
      "path": "/v1/subscriptions/search",
      "tags": [
        "untagged"
      ],
      "summary": "Search subscriptions",
      "description": "<p>Search for subscriptions you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>"
    },
    {
      "operationId": "DeleteSubscriptionsSubscriptionExposedId",
      "method": "DELETE",
      "path": "/v1/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a subscription",
      "description": "<p>Cancels a customer’s subscription immediately. The customer won’t be charged again for the subscription. After it’s canceled, you can no longer update the subscription or its <a href=\"/metadata\">metadata</a>.</p>\n\n<p>Any pending invoice items that you’ve created are still charged at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations are also left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations are removed if <code>invoice_now</code> and <code>prorate</code> are both set to true.</p>\n\n<p>By default, upon subscription cancellation, Stripe stops automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>"
    },
    {
      "operationId": "GetSubscriptionsSubscriptionExposedId",
      "method": "GET",
      "path": "/v1/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a subscription",
      "description": "<p>Retrieves the subscription with the given ID.</p>"
    },
    {
      "operationId": "PostSubscriptionsSubscriptionExposedId",
      "method": "POST",
      "path": "/v1/subscriptions/{subscription_exposed_id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a subscription",
      "description": "<p>Updates an existing subscription to match the specified parameters.\nWhen changing prices or quantities, we optionally prorate the price we charge next month to make up for any price changes.\nTo preview how the proration is calculated, use the <a href=\"/docs/api/invoices/create_preview\">create preview</a> endpoint.</p>\n\n<p>By default, we prorate subscription changes. For example, if a customer signs up on May 1 for a <currency>100</currency> price, they’ll be billed <currency>100</currency> immediately. If on May 15 they switch to a <currency>200</currency> price, then on June 1 they’ll be billed <currency>250</currency> (<currency>200</currency> for a renewal of her subscription, plus a <currency>50</currency> prorating adjustment for half of the previous month’s <currency>100</currency> difference). Similarly, a downgrade generates a credit that is applied to the next invoice. We also prorate when you make quantity changes.</p>\n\n<p>Switching prices does not normally change the billing date or generate an immediate charge unless:</p>\n\n<ul>\n<li>The billing interval is changed (for example, from monthly to yearly).</li>\n<li>The subscription moves from free to paid.</li>\n<li>A trial starts or ends.</li>\n</ul>\n\n<p>In these cases, we apply a credit for the unused time on the previous price, immediately charge the customer using the new price, and reset the billing date. Learn about how <a href=\"/docs/billing/subscriptions/upgrade-downgrade#immediate-payment\">Stripe immediately attempts payment for subscription changes</a>.</p>\n\n<p>If you want to charge for an upgrade immediately, pass <code>proration_behavior</code> as <code>always_invoice</code> to create prorations, automatically invoice the customer for those proration adjustments, and attempt to collect payment. If you pass <code>create_prorations</code>, the prorations are created but not automatically invoiced. If you want to bill the customer for the prorations before the subscription’s renewal date, you need to manually <a href=\"/docs/api/invoices/create\">invoice the customer</a>.</p>\n\n<p>If you don’t want to prorate, set the <code>proration_behavior</code> option to <code>none</code>. With this option, the customer is billed <currency>100</currency> on May 1 and <currency>200</currency> on June 1. Similarly, if you set <code>proration_behavior</code> to <code>none</code> when switching between different billing intervals (for example, from monthly to yearly), we don’t generate any credits for the old subscription’s unused time. We still reset the billing date and bill immediately for the new subscription.</p>\n\n<p>Updating the quantity on a subscription many times in an hour may result in <a href=\"/docs/rate-limits\">rate limiting</a>. If you need to bill for a frequently changing quantity, consider integrating <a href=\"/docs/billing/subscriptions/usage-based\">usage-based billing</a> instead.</p>"
    },
    {
      "operationId": "DeleteSubscriptionsSubscriptionExposedIdDiscount",
      "method": "DELETE",
      "path": "/v1/subscriptions/{subscription_exposed_id}/discount",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a subscription discount",
      "description": "<p>Removes the currently applied discount on a subscription.</p>"
    },
    {
      "operationId": "PostSubscriptionsSubscriptionMigrate",
      "method": "POST",
      "path": "/v1/subscriptions/{subscription}/migrate",
      "tags": [
        "untagged"
      ],
      "summary": "Migrate a subscription",
      "description": "<p>Upgrade the billing_mode of an existing subscription.</p>"
    },
    {
      "operationId": "PostSubscriptionsSubscriptionResume",
      "method": "POST",
      "path": "/v1/subscriptions/{subscription}/resume",
      "tags": [
        "untagged"
      ],
      "summary": "Resume a subscription",
      "description": "<p>Initiates resumption of a paused subscription, optionally resetting the billing cycle anchor and creating prorations. If a resumption invoice is generated, it must be paid or marked uncollectible before the subscription will be unpaused. If payment succeeds the subscription will become <code>active</code>, and if payment fails the subscription will be <code>past_due</code>. The resumption invoice will void automatically if not paid by the expiration date.</p>"
    },
    {
      "operationId": "PostTaxCalculations",
      "method": "POST",
      "path": "/v1/tax/calculations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Tax Calculation",
      "description": "<p>Calculates tax based on the input and returns a Tax <code>Calculation</code> object.</p>"
    },
    {
      "operationId": "GetTaxCalculationsCalculation",
      "method": "GET",
      "path": "/v1/tax/calculations/{calculation}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Tax Calculation",
      "description": "<p>Retrieves a Tax <code>Calculation</code> object, if the calculation hasn’t expired.</p>"
    },
    {
      "operationId": "GetTaxCalculationsCalculationLineItems",
      "method": "GET",
      "path": "/v1/tax/calculations/{calculation}/line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a calculation's line items",
      "description": "<p>Retrieves the line items of a tax calculation as a collection, if the calculation hasn’t expired.</p>"
    },
    {
      "operationId": "GetTaxRegistrations",
      "method": "GET",
      "path": "/v1/tax/registrations",
      "tags": [
        "untagged"
      ],
      "summary": "List registrations",
      "description": "<p>Returns a list of Tax <code>Registration</code> objects.</p>"
    },
    {
      "operationId": "PostTaxRegistrations",
      "method": "POST",
      "path": "/v1/tax/registrations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a registration",
      "description": "<p>Creates a new Tax <code>Registration</code> object.</p>"
    },
    {
      "operationId": "GetTaxRegistrationsId",
      "method": "GET",
      "path": "/v1/tax/registrations/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a registration",
      "description": "<p>Returns a Tax <code>Registration</code> object.</p>"
    },
    {
      "operationId": "PostTaxRegistrationsId",
      "method": "POST",
      "path": "/v1/tax/registrations/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a registration",
      "description": "<p>Updates an existing Tax <code>Registration</code> object.</p>\n\n<p>A registration cannot be deleted after it has been created. If you wish to end a registration you may do so by setting <code>expires_at</code>.</p>"
    },
    {
      "operationId": "GetTaxSettings",
      "method": "GET",
      "path": "/v1/tax/settings",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve settings",
      "description": "<p>Retrieves Tax <code>Settings</code> for a merchant.</p>"
    },
    {
      "operationId": "PostTaxSettings",
      "method": "POST",
      "path": "/v1/tax/settings",
      "tags": [
        "untagged"
      ],
      "summary": "Update settings",
      "description": "<p>Updates Tax <code>Settings</code> parameters used in tax calculations. All parameters are editable but none can be removed once set.</p>"
    },
    {
      "operationId": "PostTaxTransactionsCreateFromCalculation",
      "method": "POST",
      "path": "/v1/tax/transactions/create_from_calculation",
      "tags": [
        "untagged"
      ],
      "summary": "Create a transaction from a calculation",
      "description": "<p>Creates a Tax Transaction from a calculation, if that calculation hasn’t expired. Calculations expire after 90 days.</p>"
    },
    {
      "operationId": "PostTaxTransactionsCreateReversal",
      "method": "POST",
      "path": "/v1/tax/transactions/create_reversal",
      "tags": [
        "untagged"
      ],
      "summary": "Create a reversal transaction",
      "description": "<p>Partially or fully reverses a previously created <code>Transaction</code>.</p>"
    },
    {
      "operationId": "GetTaxTransactionsTransaction",
      "method": "GET",
      "path": "/v1/tax/transactions/{transaction}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a transaction",
      "description": "<p>Retrieves a Tax <code>Transaction</code> object.</p>"
    },
    {
      "operationId": "GetTaxTransactionsTransactionLineItems",
      "method": "GET",
      "path": "/v1/tax/transactions/{transaction}/line_items",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a transaction's line items",
      "description": "<p>Retrieves the line items of a committed standalone transaction as a collection.</p>"
    },
    {
      "operationId": "GetTaxCodes",
      "method": "GET",
      "path": "/v1/tax_codes",
      "tags": [
        "untagged"
      ],
      "summary": "List all tax codes",
      "description": "<p>A list of <a href=\"https://stripe.com/docs/tax/tax-categories\">all tax codes available</a> to add to Products in order to allow specific tax calculations.</p>"
    },
    {
      "operationId": "GetTaxCodesId",
      "method": "GET",
      "path": "/v1/tax_codes/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a tax code",
      "description": "<p>Retrieves the details of an existing tax code. Supply the unique tax code ID and Stripe will return the corresponding tax code information.</p>"
    },
    {
      "operationId": "GetTaxIds",
      "method": "GET",
      "path": "/v1/tax_ids",
      "tags": [
        "untagged"
      ],
      "summary": "List all tax IDs",
      "description": "<p>Returns a list of tax IDs.</p>"
    },
    {
      "operationId": "PostTaxIds",
      "method": "POST",
      "path": "/v1/tax_ids",
      "tags": [
        "untagged"
      ],
      "summary": "Create a tax ID",
      "description": "<p>Creates a new account or customer <code>tax_id</code> object.</p>"
    },
    {
      "operationId": "DeleteTaxIdsId",
      "method": "DELETE",
      "path": "/v1/tax_ids/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a tax ID",
      "description": "<p>Deletes an existing account or customer <code>tax_id</code> object.</p>"
    },
    {
      "operationId": "GetTaxIdsId",
      "method": "GET",
      "path": "/v1/tax_ids/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a tax ID",
      "description": "<p>Retrieves an account or customer <code>tax_id</code> object.</p>"
    },
    {
      "operationId": "GetTaxRates",
      "method": "GET",
      "path": "/v1/tax_rates",
      "tags": [
        "untagged"
      ],
      "summary": "List all tax rates",
      "description": "<p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>"
    },
    {
      "operationId": "PostTaxRates",
      "method": "POST",
      "path": "/v1/tax_rates",
      "tags": [
        "untagged"
      ],
      "summary": "Create a tax rate",
      "description": "<p>Creates a new tax rate.</p>"
    },
    {
      "operationId": "GetTaxRatesTaxRate",
      "method": "GET",
      "path": "/v1/tax_rates/{tax_rate}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a tax rate",
      "description": "<p>Retrieves a tax rate with the given ID</p>"
    },
    {
      "operationId": "PostTaxRatesTaxRate",
      "method": "POST",
      "path": "/v1/tax_rates/{tax_rate}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a tax rate",
      "description": "<p>Updates an existing tax rate.</p>"
    },
    {
      "operationId": "GetTerminalConfigurations",
      "method": "GET",
      "path": "/v1/terminal/configurations",
      "tags": [
        "untagged"
      ],
      "summary": "List all Configurations",
      "description": "<p>Returns a list of <code>Configuration</code> objects.</p>"
    },
    {
      "operationId": "PostTerminalConfigurations",
      "method": "POST",
      "path": "/v1/terminal/configurations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Configuration",
      "description": "<p>Creates a new <code>Configuration</code> object.</p>"
    },
    {
      "operationId": "DeleteTerminalConfigurationsConfiguration",
      "method": "DELETE",
      "path": "/v1/terminal/configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a Configuration",
      "description": "<p>Deletes a <code>Configuration</code> object.</p>"
    },
    {
      "operationId": "GetTerminalConfigurationsConfiguration",
      "method": "GET",
      "path": "/v1/terminal/configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Configuration",
      "description": "<p>Retrieves a <code>Configuration</code> object.</p>"
    },
    {
      "operationId": "PostTerminalConfigurationsConfiguration",
      "method": "POST",
      "path": "/v1/terminal/configurations/{configuration}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a Configuration",
      "description": "<p>Updates a new <code>Configuration</code> object.</p>"
    },
    {
      "operationId": "PostTerminalConnectionTokens",
      "method": "POST",
      "path": "/v1/terminal/connection_tokens",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Connection Token",
      "description": "<p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>"
    },
    {
      "operationId": "GetTerminalLocations",
      "method": "GET",
      "path": "/v1/terminal/locations",
      "tags": [
        "untagged"
      ],
      "summary": "List all Locations",
      "description": "<p>Returns a list of <code>Location</code> objects.</p>"
    },
    {
      "operationId": "PostTerminalLocations",
      "method": "POST",
      "path": "/v1/terminal/locations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Location",
      "description": "<p>Creates a new <code>Location</code> object.\nFor further details, including which address fields are required in each country, see the <a href=\"/docs/terminal/fleet/locations\">Manage locations</a> guide.</p>"
    },
    {
      "operationId": "DeleteTerminalLocationsLocation",
      "method": "DELETE",
      "path": "/v1/terminal/locations/{location}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a Location",
      "description": "<p>Deletes a <code>Location</code> object.</p>"
    },
    {
      "operationId": "GetTerminalLocationsLocation",
      "method": "GET",
      "path": "/v1/terminal/locations/{location}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Location",
      "description": "<p>Retrieves a <code>Location</code> object.</p>"
    },
    {
      "operationId": "PostTerminalLocationsLocation",
      "method": "POST",
      "path": "/v1/terminal/locations/{location}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a Location",
      "description": "<p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "GetTerminalReaders",
      "method": "GET",
      "path": "/v1/terminal/readers",
      "tags": [
        "untagged"
      ],
      "summary": "List all Readers",
      "description": "<p>Returns a list of <code>Reader</code> objects.</p>"
    },
    {
      "operationId": "PostTerminalReaders",
      "method": "POST",
      "path": "/v1/terminal/readers",
      "tags": [
        "untagged"
      ],
      "summary": "Create a Reader",
      "description": "<p>Creates a new <code>Reader</code> object.</p>"
    },
    {
      "operationId": "DeleteTerminalReadersReader",
      "method": "DELETE",
      "path": "/v1/terminal/readers/{reader}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a Reader",
      "description": "<p>Deletes a <code>Reader</code> object.</p>"
    },
    {
      "operationId": "GetTerminalReadersReader",
      "method": "GET",
      "path": "/v1/terminal/readers/{reader}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Reader",
      "description": "<p>Retrieves a <code>Reader</code> object.</p>"
    },
    {
      "operationId": "PostTerminalReadersReader",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a Reader",
      "description": "<p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderCancelAction",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/cancel_action",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel the current reader action",
      "description": "<p>Cancels the current reader action.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderCollectInputs",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/collect_inputs",
      "tags": [
        "untagged"
      ],
      "summary": "Collect inputs using a Reader",
      "description": "<p>Initiates an input collection flow on a Reader.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderCollectPaymentMethod",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/collect_payment_method",
      "tags": [
        "untagged"
      ],
      "summary": "Hand off a PaymentIntent to a Reader and collect card details",
      "description": "<p>Initiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderConfirmPaymentIntent",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/confirm_payment_intent",
      "tags": [
        "untagged"
      ],
      "summary": "Confirm a PaymentIntent on the Reader",
      "description": "<p>Finalizes a payment on a Reader.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderProcessPaymentIntent",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/process_payment_intent",
      "tags": [
        "untagged"
      ],
      "summary": "Hand-off a PaymentIntent to a Reader",
      "description": "<p>Initiates a payment flow on a Reader.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderProcessSetupIntent",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/process_setup_intent",
      "tags": [
        "untagged"
      ],
      "summary": "Hand-off a SetupIntent to a Reader",
      "description": "<p>Initiates a setup intent flow on a Reader.</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderRefundPayment",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/refund_payment",
      "tags": [
        "untagged"
      ],
      "summary": "Refund a Charge or a PaymentIntent in-person",
      "description": "<p>Initiates a refund on a Reader</p>"
    },
    {
      "operationId": "PostTerminalReadersReaderSetReaderDisplay",
      "method": "POST",
      "path": "/v1/terminal/readers/{reader}/set_reader_display",
      "tags": [
        "untagged"
      ],
      "summary": "Set reader display",
      "description": "<p>Sets reader display to show cart details.</p>"
    },
    {
      "operationId": "PostTestHelpersConfirmationTokens",
      "method": "POST",
      "path": "/v1/test_helpers/confirmation_tokens",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test Confirmation Token",
      "description": "<p>Creates a test mode Confirmation Token server side for your integration tests.</p>"
    },
    {
      "operationId": "PostTestHelpersCustomersCustomerFundCashBalance",
      "method": "POST",
      "path": "/v1/test_helpers/customers/{customer}/fund_cash_balance",
      "tags": [
        "untagged"
      ],
      "summary": "Fund a test mode cash balance",
      "description": "<p>Create an incoming testmode bank transfer</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizations",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test-mode authorization",
      "description": "<p>Create a test-mode authorization.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationCapture",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/capture",
      "tags": [
        "untagged"
      ],
      "summary": "Capture a test-mode authorization",
      "description": "<p>Capture a test-mode authorization.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationExpire",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/expire",
      "tags": [
        "untagged"
      ],
      "summary": "Expire a test-mode authorization",
      "description": "<p>Expire a test-mode Authorization.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationFinalizeAmount",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/finalize_amount",
      "tags": [
        "untagged"
      ],
      "summary": "Finalize a test-mode authorization's amount",
      "description": "<p>Finalize the amount on an Authorization prior to capture, when the initial authorization was for an estimated amount.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationFraudChallengesRespond",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/fraud_challenges/respond",
      "tags": [
        "untagged"
      ],
      "summary": "Respond to fraud challenge",
      "description": "<p>Respond to a fraud challenge on a testmode Issuing authorization, simulating either a confirmation of fraud or a correction of legitimacy.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationIncrement",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/increment",
      "tags": [
        "untagged"
      ],
      "summary": "Increment a test-mode authorization",
      "description": "<p>Increment a test-mode Authorization.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationReverse",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/authorizations/{authorization}/reverse",
      "tags": [
        "untagged"
      ],
      "summary": "Reverse a test-mode authorization",
      "description": "<p>Reverse a test-mode Authorization.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingCardsCardShippingDeliver",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/cards/{card}/shipping/deliver",
      "tags": [
        "untagged"
      ],
      "summary": "Deliver a testmode card",
      "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>delivered</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingCardsCardShippingFail",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/cards/{card}/shipping/fail",
      "tags": [
        "untagged"
      ],
      "summary": "Fail a testmode card",
      "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>failure</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingCardsCardShippingReturn",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/cards/{card}/shipping/return",
      "tags": [
        "untagged"
      ],
      "summary": "Return a testmode card",
      "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>returned</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingCardsCardShippingShip",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/cards/{card}/shipping/ship",
      "tags": [
        "untagged"
      ],
      "summary": "Ship a testmode card",
      "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>shipped</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingCardsCardShippingSubmit",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/cards/{card}/shipping/submit",
      "tags": [
        "untagged"
      ],
      "summary": "Submit a testmode card",
      "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>submitted</code>. This method requires Stripe Version ‘2024-09-30.acacia’ or later.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignActivate",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate",
      "tags": [
        "untagged"
      ],
      "summary": "Activate a testmode personalization design",
      "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>active</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignDeactivate",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate",
      "tags": [
        "untagged"
      ],
      "summary": "Deactivate a testmode personalization design",
      "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>inactive</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject",
      "tags": [
        "untagged"
      ],
      "summary": "Reject a testmode personalization design",
      "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>rejected</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingSettlements",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/settlements",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test-mode settlement",
      "description": "<p>Allows the user to create an Issuing settlement.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingSettlementsSettlementComplete",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/settlements/{settlement}/complete",
      "tags": [
        "untagged"
      ],
      "summary": "Complete a test-mode settlement",
      "description": "<p>Allows the user to mark an Issuing settlement as complete.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingTransactionsCreateForceCapture",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/transactions/create_force_capture",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test-mode force capture",
      "description": "<p>Allows the user to capture an arbitrary amount, also known as a forced capture.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingTransactionsCreateUnlinkedRefund",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/transactions/create_unlinked_refund",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test-mode unlinked refund",
      "description": "<p>Allows the user to refund an arbitrary amount, also known as a unlinked refund.</p>"
    },
    {
      "operationId": "PostTestHelpersIssuingTransactionsTransactionRefund",
      "method": "POST",
      "path": "/v1/test_helpers/issuing/transactions/{transaction}/refund",
      "tags": [
        "untagged"
      ],
      "summary": "Refund a test-mode transaction",
      "description": "<p>Refund a test-mode Transaction.</p>"
    },
    {
      "operationId": "PostTestHelpersRefundsRefundExpire",
      "method": "POST",
      "path": "/v1/test_helpers/refunds/{refund}/expire",
      "tags": [
        "untagged"
      ],
      "summary": "Expire a pending refund.",
      "description": "<p>Expire a refund with a status of <code>requires_action</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersTerminalReadersReaderPresentPaymentMethod",
      "method": "POST",
      "path": "/v1/test_helpers/terminal/readers/{reader}/present_payment_method",
      "tags": [
        "untagged"
      ],
      "summary": "Simulate presenting a payment method",
      "description": "<p>Presents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.</p>"
    },
    {
      "operationId": "PostTestHelpersTerminalReadersReaderSucceedInputCollection",
      "method": "POST",
      "path": "/v1/test_helpers/terminal/readers/{reader}/succeed_input_collection",
      "tags": [
        "untagged"
      ],
      "summary": "Simulate a successful input collection",
      "description": "<p>Use this endpoint to trigger a successful input collection on a simulated reader.</p>"
    },
    {
      "operationId": "PostTestHelpersTerminalReadersReaderTimeoutInputCollection",
      "method": "POST",
      "path": "/v1/test_helpers/terminal/readers/{reader}/timeout_input_collection",
      "tags": [
        "untagged"
      ],
      "summary": "Simulate an input collection timeout",
      "description": "<p>Use this endpoint to complete an input collection with a timeout error on a simulated reader.</p>"
    },
    {
      "operationId": "GetTestHelpersTestClocks",
      "method": "GET",
      "path": "/v1/test_helpers/test_clocks",
      "tags": [
        "untagged"
      ],
      "summary": "List all test clocks",
      "description": "<p>Returns a list of your test clocks.</p>"
    },
    {
      "operationId": "PostTestHelpersTestClocks",
      "method": "POST",
      "path": "/v1/test_helpers/test_clocks",
      "tags": [
        "untagged"
      ],
      "summary": "Create a test clock",
      "description": "<p>Creates a new test clock that can be attached to new customers and quotes.</p>"
    },
    {
      "operationId": "DeleteTestHelpersTestClocksTestClock",
      "method": "DELETE",
      "path": "/v1/test_helpers/test_clocks/{test_clock}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a test clock",
      "description": "<p>Deletes a test clock.</p>"
    },
    {
      "operationId": "GetTestHelpersTestClocksTestClock",
      "method": "GET",
      "path": "/v1/test_helpers/test_clocks/{test_clock}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a test clock",
      "description": "<p>Retrieves a test clock.</p>"
    },
    {
      "operationId": "PostTestHelpersTestClocksTestClockAdvance",
      "method": "POST",
      "path": "/v1/test_helpers/test_clocks/{test_clock}/advance",
      "tags": [
        "untagged"
      ],
      "summary": "Advance a test clock",
      "description": "<p>Starts advancing a test clock to a specified time in the future. Advancement is done when status changes to <code>Ready</code>.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryInboundTransfersIdFail",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/fail",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Fail an InboundTransfer",
      "description": "<p>Transitions a test mode created InboundTransfer to the <code>failed</code> status. The InboundTransfer must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryInboundTransfersIdReturn",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/return",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Return an InboundTransfer",
      "description": "<p>Marks the test mode InboundTransfer object as returned and links the InboundTransfer to a ReceivedDebit. The InboundTransfer must already be in the <code>succeeded</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryInboundTransfersIdSucceed",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/succeed",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Succeed an InboundTransfer",
      "description": "<p>Transitions a test mode created InboundTransfer to the <code>succeeded</code> status. The InboundTransfer must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundPaymentsId",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_payments/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Update an OutboundPayment",
      "description": "<p>Updates a test mode created OutboundPayment with tracking details. The OutboundPayment must not be cancelable, and cannot be in the <code>canceled</code> or <code>failed</code> states.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdFail",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_payments/{id}/fail",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Fail an OutboundPayment",
      "description": "<p>Transitions a test mode created OutboundPayment to the <code>failed</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdPost",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_payments/{id}/post",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Post an OutboundPayment",
      "description": "<p>Transitions a test mode created OutboundPayment to the <code>posted</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdReturn",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_payments/{id}/return",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Return an OutboundPayment",
      "description": "<p>Transitions a test mode created OutboundPayment to the <code>returned</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransfer",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Update an OutboundTransfer",
      "description": "<p>Updates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the <code>canceled</code> or <code>failed</code> states.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferFail",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Fail an OutboundTransfer",
      "description": "<p>Transitions a test mode created OutboundTransfer to the <code>failed</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferPost",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Post an OutboundTransfer",
      "description": "<p>Transitions a test mode created OutboundTransfer to the <code>posted</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferReturn",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Return an OutboundTransfer",
      "description": "<p>Transitions a test mode created OutboundTransfer to the <code>returned</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryReceivedCredits",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/received_credits",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Create a ReceivedCredit",
      "description": "<p>Use this endpoint to simulate a test mode ReceivedCredit initiated by a third party. In live mode, you can’t directly create ReceivedCredits initiated by third parties.</p>"
    },
    {
      "operationId": "PostTestHelpersTreasuryReceivedDebits",
      "method": "POST",
      "path": "/v1/test_helpers/treasury/received_debits",
      "tags": [
        "untagged"
      ],
      "summary": "Test mode: Create a ReceivedDebit",
      "description": "<p>Use this endpoint to simulate a test mode ReceivedDebit initiated by a third party. In live mode, you can’t directly create ReceivedDebits initiated by third parties.</p>"
    },
    {
      "operationId": "PostTokens",
      "method": "POST",
      "path": "/v1/tokens",
      "tags": [
        "untagged"
      ],
      "summary": "Create a CVC update token",
      "description": "<p>Creates a single-use token that represents a bank account’s details.\nYou can use this token with any v1 API method in place of a bank account dictionary. You can only use this token once. To do so, attach it to a <a href=\"#accounts\">connected account</a> where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a> is <code>application</code>, which includes Custom accounts.</p>"
    },
    {
      "operationId": "GetTokensToken",
      "method": "GET",
      "path": "/v1/tokens/{token}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a token",
      "description": "<p>Retrieves the token with the given ID.</p>"
    },
    {
      "operationId": "GetTopups",
      "method": "GET",
      "path": "/v1/topups",
      "tags": [
        "untagged"
      ],
      "summary": "List all top-ups",
      "description": "<p>Returns a list of top-ups.</p>"
    },
    {
      "operationId": "PostTopups",
      "method": "POST",
      "path": "/v1/topups",
      "tags": [
        "untagged"
      ],
      "summary": "Create a top-up",
      "description": "<p>Top up the balance of an account</p>"
    },
    {
      "operationId": "GetTopupsTopup",
      "method": "GET",
      "path": "/v1/topups/{topup}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a top-up",
      "description": "<p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>"
    },
    {
      "operationId": "PostTopupsTopup",
      "method": "POST",
      "path": "/v1/topups/{topup}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a top-up",
      "description": "<p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>"
    },
    {
      "operationId": "PostTopupsTopupCancel",
      "method": "POST",
      "path": "/v1/topups/{topup}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel a top-up",
      "description": "<p>Cancels a top-up. Only pending top-ups can be canceled.</p>"
    },
    {
      "operationId": "GetTransfers",
      "method": "GET",
      "path": "/v1/transfers",
      "tags": [
        "untagged"
      ],
      "summary": "List all transfers",
      "description": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>"
    },
    {
      "operationId": "PostTransfers",
      "method": "POST",
      "path": "/v1/transfers",
      "tags": [
        "untagged"
      ],
      "summary": "Create a transfer",
      "description": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you’ll receive an “Insufficient Funds” error.</p>"
    },
    {
      "operationId": "GetTransfersIdReversals",
      "method": "GET",
      "path": "/v1/transfers/{id}/reversals",
      "tags": [
        "untagged"
      ],
      "summary": "List all reversals",
      "description": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>"
    },
    {
      "operationId": "PostTransfersIdReversals",
      "method": "POST",
      "path": "/v1/transfers/{id}/reversals",
      "tags": [
        "untagged"
      ],
      "summary": "Create a transfer reversal",
      "description": "<p>When you create a new reversal, you must specify a transfer to create it on.</p>\n\n<p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>\n\n<p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>"
    },
    {
      "operationId": "GetTransfersTransfer",
      "method": "GET",
      "path": "/v1/transfers/{transfer}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a transfer",
      "description": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>"
    },
    {
      "operationId": "PostTransfersTransfer",
      "method": "POST",
      "path": "/v1/transfers/{transfer}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a transfer",
      "description": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts only metadata as an argument.</p>"
    },
    {
      "operationId": "GetTransfersTransferReversalsId",
      "method": "GET",
      "path": "/v1/transfers/{transfer}/reversals/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a reversal",
      "description": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>"
    },
    {
      "operationId": "PostTransfersTransferReversalsId",
      "method": "POST",
      "path": "/v1/transfers/{transfer}/reversals/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a reversal",
      "description": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata and description as arguments.</p>"
    },
    {
      "operationId": "GetTreasuryCreditReversals",
      "method": "GET",
      "path": "/v1/treasury/credit_reversals",
      "tags": [
        "untagged"
      ],
      "summary": "List all CreditReversals",
      "description": "<p>Returns a list of CreditReversals.</p>"
    },
    {
      "operationId": "PostTreasuryCreditReversals",
      "method": "POST",
      "path": "/v1/treasury/credit_reversals",
      "tags": [
        "untagged"
      ],
      "summary": "Create a CreditReversal",
      "description": "<p>Reverses a ReceivedCredit and creates a CreditReversal object.</p>"
    },
    {
      "operationId": "GetTreasuryCreditReversalsCreditReversal",
      "method": "GET",
      "path": "/v1/treasury/credit_reversals/{credit_reversal}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a CreditReversal",
      "description": "<p>Retrieves the details of an existing CreditReversal by passing the unique CreditReversal ID from either the CreditReversal creation request or CreditReversal list</p>"
    },
    {
      "operationId": "GetTreasuryDebitReversals",
      "method": "GET",
      "path": "/v1/treasury/debit_reversals",
      "tags": [
        "untagged"
      ],
      "summary": "List all DebitReversals",
      "description": "<p>Returns a list of DebitReversals.</p>"
    },
    {
      "operationId": "PostTreasuryDebitReversals",
      "method": "POST",
      "path": "/v1/treasury/debit_reversals",
      "tags": [
        "untagged"
      ],
      "summary": "Create a DebitReversal",
      "description": "<p>Reverses a ReceivedDebit and creates a DebitReversal object.</p>"
    },
    {
      "operationId": "GetTreasuryDebitReversalsDebitReversal",
      "method": "GET",
      "path": "/v1/treasury/debit_reversals/{debit_reversal}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a DebitReversal",
      "description": "<p>Retrieves a DebitReversal object.</p>"
    },
    {
      "operationId": "GetTreasuryFinancialAccounts",
      "method": "GET",
      "path": "/v1/treasury/financial_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "List all FinancialAccounts",
      "description": "<p>Returns a list of FinancialAccounts.</p>"
    },
    {
      "operationId": "PostTreasuryFinancialAccounts",
      "method": "POST",
      "path": "/v1/treasury/financial_accounts",
      "tags": [
        "untagged"
      ],
      "summary": "Create a FinancialAccount",
      "description": "<p>Creates a new FinancialAccount. Each connected account can have up to three FinancialAccounts by default.</p>"
    },
    {
      "operationId": "GetTreasuryFinancialAccountsFinancialAccount",
      "method": "GET",
      "path": "/v1/treasury/financial_accounts/{financial_account}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a FinancialAccount",
      "description": "<p>Retrieves the details of a FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryFinancialAccountsFinancialAccount",
      "method": "POST",
      "path": "/v1/treasury/financial_accounts/{financial_account}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a FinancialAccount",
      "description": "<p>Updates the details of a FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryFinancialAccountsFinancialAccountClose",
      "method": "POST",
      "path": "/v1/treasury/financial_accounts/{financial_account}/close",
      "tags": [
        "untagged"
      ],
      "summary": "Close a FinancialAccount",
      "description": "<p>Closes a FinancialAccount. A FinancialAccount can only be closed if it has a zero balance, has no pending InboundTransfers, and has canceled all attached Issuing cards.</p>"
    },
    {
      "operationId": "GetTreasuryFinancialAccountsFinancialAccountFeatures",
      "method": "GET",
      "path": "/v1/treasury/financial_accounts/{financial_account}/features",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve FinancialAccount Features",
      "description": "<p>Retrieves Features information associated with the FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryFinancialAccountsFinancialAccountFeatures",
      "method": "POST",
      "path": "/v1/treasury/financial_accounts/{financial_account}/features",
      "tags": [
        "untagged"
      ],
      "summary": "Update FinancialAccount Features",
      "description": "<p>Updates the Features associated with a FinancialAccount.</p>"
    },
    {
      "operationId": "GetTreasuryInboundTransfers",
      "method": "GET",
      "path": "/v1/treasury/inbound_transfers",
      "tags": [
        "untagged"
      ],
      "summary": "List all InboundTransfers",
      "description": "<p>Returns a list of InboundTransfers sent from the specified FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryInboundTransfers",
      "method": "POST",
      "path": "/v1/treasury/inbound_transfers",
      "tags": [
        "untagged"
      ],
      "summary": "Create an InboundTransfer",
      "description": "<p>Creates an InboundTransfer.</p>"
    },
    {
      "operationId": "GetTreasuryInboundTransfersId",
      "method": "GET",
      "path": "/v1/treasury/inbound_transfers/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an InboundTransfer",
      "description": "<p>Retrieves the details of an existing InboundTransfer.</p>"
    },
    {
      "operationId": "PostTreasuryInboundTransfersInboundTransferCancel",
      "method": "POST",
      "path": "/v1/treasury/inbound_transfers/{inbound_transfer}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel an InboundTransfer",
      "description": "<p>Cancels an InboundTransfer.</p>"
    },
    {
      "operationId": "GetTreasuryOutboundPayments",
      "method": "GET",
      "path": "/v1/treasury/outbound_payments",
      "tags": [
        "untagged"
      ],
      "summary": "List all OutboundPayments",
      "description": "<p>Returns a list of OutboundPayments sent from the specified FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryOutboundPayments",
      "method": "POST",
      "path": "/v1/treasury/outbound_payments",
      "tags": [
        "untagged"
      ],
      "summary": "Create an OutboundPayment",
      "description": "<p>Creates an OutboundPayment.</p>"
    },
    {
      "operationId": "GetTreasuryOutboundPaymentsId",
      "method": "GET",
      "path": "/v1/treasury/outbound_payments/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an OutboundPayment",
      "description": "<p>Retrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment creation request or OutboundPayment list.</p>"
    },
    {
      "operationId": "PostTreasuryOutboundPaymentsIdCancel",
      "method": "POST",
      "path": "/v1/treasury/outbound_payments/{id}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel an OutboundPayment",
      "description": "<p>Cancel an OutboundPayment.</p>"
    },
    {
      "operationId": "GetTreasuryOutboundTransfers",
      "method": "GET",
      "path": "/v1/treasury/outbound_transfers",
      "tags": [
        "untagged"
      ],
      "summary": "List all OutboundTransfers",
      "description": "<p>Returns a list of OutboundTransfers sent from the specified FinancialAccount.</p>"
    },
    {
      "operationId": "PostTreasuryOutboundTransfers",
      "method": "POST",
      "path": "/v1/treasury/outbound_transfers",
      "tags": [
        "untagged"
      ],
      "summary": "Create an OutboundTransfer",
      "description": "<p>Creates an OutboundTransfer.</p>"
    },
    {
      "operationId": "GetTreasuryOutboundTransfersOutboundTransfer",
      "method": "GET",
      "path": "/v1/treasury/outbound_transfers/{outbound_transfer}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve an OutboundTransfer",
      "description": "<p>Retrieves the details of an existing OutboundTransfer by passing the unique OutboundTransfer ID from either the OutboundTransfer creation request or OutboundTransfer list.</p>"
    },
    {
      "operationId": "PostTreasuryOutboundTransfersOutboundTransferCancel",
      "method": "POST",
      "path": "/v1/treasury/outbound_transfers/{outbound_transfer}/cancel",
      "tags": [
        "untagged"
      ],
      "summary": "Cancel an OutboundTransfer",
      "description": "<p>An OutboundTransfer can be canceled if the funds have not yet been paid out.</p>"
    },
    {
      "operationId": "GetTreasuryReceivedCredits",
      "method": "GET",
      "path": "/v1/treasury/received_credits",
      "tags": [
        "untagged"
      ],
      "summary": "List all ReceivedCredits",
      "description": "<p>Returns a list of ReceivedCredits.</p>"
    },
    {
      "operationId": "GetTreasuryReceivedCreditsId",
      "method": "GET",
      "path": "/v1/treasury/received_credits/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a ReceivedCredit",
      "description": "<p>Retrieves the details of an existing ReceivedCredit by passing the unique ReceivedCredit ID from the ReceivedCredit list.</p>"
    },
    {
      "operationId": "GetTreasuryReceivedDebits",
      "method": "GET",
      "path": "/v1/treasury/received_debits",
      "tags": [
        "untagged"
      ],
      "summary": "List all ReceivedDebits",
      "description": "<p>Returns a list of ReceivedDebits.</p>"
    },
    {
      "operationId": "GetTreasuryReceivedDebitsId",
      "method": "GET",
      "path": "/v1/treasury/received_debits/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a ReceivedDebit",
      "description": "<p>Retrieves the details of an existing ReceivedDebit by passing the unique ReceivedDebit ID from the ReceivedDebit list</p>"
    },
    {
      "operationId": "GetTreasuryTransactionEntries",
      "method": "GET",
      "path": "/v1/treasury/transaction_entries",
      "tags": [
        "untagged"
      ],
      "summary": "List all TransactionEntries",
      "description": "<p>Retrieves a list of TransactionEntry objects.</p>"
    },
    {
      "operationId": "GetTreasuryTransactionEntriesId",
      "method": "GET",
      "path": "/v1/treasury/transaction_entries/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a TransactionEntry",
      "description": "<p>Retrieves a TransactionEntry object.</p>"
    },
    {
      "operationId": "GetTreasuryTransactions",
      "method": "GET",
      "path": "/v1/treasury/transactions",
      "tags": [
        "untagged"
      ],
      "summary": "List all Transactions",
      "description": "<p>Retrieves a list of Transaction objects.</p>"
    },
    {
      "operationId": "GetTreasuryTransactionsId",
      "method": "GET",
      "path": "/v1/treasury/transactions/{id}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a Transaction",
      "description": "<p>Retrieves the details of an existing Transaction.</p>"
    },
    {
      "operationId": "GetWebhookEndpoints",
      "method": "GET",
      "path": "/v1/webhook_endpoints",
      "tags": [
        "untagged"
      ],
      "summary": "List all webhook endpoints",
      "description": "<p>Returns a list of your webhook endpoints.</p>"
    },
    {
      "operationId": "PostWebhookEndpoints",
      "method": "POST",
      "path": "/v1/webhook_endpoints",
      "tags": [
        "untagged"
      ],
      "summary": "Create a webhook endpoint",
      "description": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>"
    },
    {
      "operationId": "DeleteWebhookEndpointsWebhookEndpoint",
      "method": "DELETE",
      "path": "/v1/webhook_endpoints/{webhook_endpoint}",
      "tags": [
        "untagged"
      ],
      "summary": "Delete a webhook endpoint",
      "description": "<p>You can also delete webhook endpoints via the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhook endpoint management</a> page of the Stripe dashboard.</p>"
    },
    {
      "operationId": "GetWebhookEndpointsWebhookEndpoint",
      "method": "GET",
      "path": "/v1/webhook_endpoints/{webhook_endpoint}",
      "tags": [
        "untagged"
      ],
      "summary": "Retrieve a webhook endpoint",
      "description": "<p>Retrieves the webhook endpoint with the given ID.</p>"
    },
    {
      "operationId": "PostWebhookEndpointsWebhookEndpoint",
      "method": "POST",
      "path": "/v1/webhook_endpoints/{webhook_endpoint}",
      "tags": [
        "untagged"
      ],
      "summary": "Update a webhook endpoint",
      "description": "<p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>"
    }
  ]
}