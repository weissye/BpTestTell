{
  "gold": [
    {
      "path": "/v1/realms/myrealm/attack-detection/brute-force/users",
      "method": "DELETE",
      "operationId": "deleteUsers",
      "summary": "",
      "user": "admin",
      "ideal": "Successfully deleted all brute force users in the realm."
    },
    {
      "path": "/v1/realms/myrealm/attack-detection/brute-force/users/12345",
      "method": "GET",
      "operationId": "getBruteForceUser",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieved details for brute force user with ID 12345."
    },
    {
      "path": "/v1/realms/myrealm/attack-detection/brute-force/users/12345",
      "method": "DELETE",
      "operationId": "deleteBruteForceUser",
      "summary": "",
      "user": "admin",
      "ideal": "Successfully deleted brute force user with ID 12345."
    },
    {
      "path": "/{realm}/authentication/authenticator-providers",
      "method": "GET",
      "operationId": "getAuthenticatorProviders",
      "summary": "",
      "user": "Admin user requesting a list of available authenticator providers for the specified realm.",
      "ideal": "Returns a list of authenticator providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/client-authenticator-providers",
      "method": "GET",
      "operationId": "getClientAuthenticatorProviders",
      "summary": "",
      "user": "Security officer checking client authenticator providers for a realm.",
      "ideal": "Provides a list of client authenticator providers configured for the realm."
    },
    {
      "path": "/{realm}/authentication/config",
      "method": "POST",
      "operationId": "postAuthenticationConfig",
      "summary": "",
      "user": "Admin user creating a new authentication configuration for the realm.",
      "ideal": "Creates a new authentication configuration and returns the created configuration details."
    },
    {
      "path": "/{realm}/authentication/config-description/{providerId}",
      "method": "GET",
      "operationId": "getConfigDescription",
      "summary": "",
      "user": "Developer seeking details about a specific authentication provider's configuration.",
      "ideal": "Returns the configuration description for the specified authentication provider."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "GET",
      "operationId": "getAuthenticationConfig",
      "summary": "",
      "user": "Admin user retrieving a specific authentication configuration by ID.",
      "ideal": "Returns the details of the specified authentication configuration."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "PUT",
      "operationId": "putAuthenticationConfig",
      "summary": "",
      "user": "Admin user updating an existing authentication configuration.",
      "ideal": "Updates the specified authentication configuration and returns the updated details."
    },
    {
      "path": "/{realm}/authentication/config/{id}",
      "method": "DELETE",
      "operationId": "deleteConfig",
      "summary": "",
      "user": "Admin user deleting an authentication configuration by ID.",
      "ideal": "Deletes the specified authentication configuration and confirms deletion."
    },
    {
      "path": "/{realm}/authentication/executions",
      "method": "POST",
      "operationId": "postExecutions",
      "summary": "",
      "user": "Admin user adding a new execution to the authentication flow.",
      "ideal": "Creates a new execution in the authentication flow and returns its details."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}",
      "method": "GET",
      "operationId": "getExecution",
      "summary": "",
      "user": "Admin user retrieving details of a specific execution by ID.",
      "ideal": "Returns the details of the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}",
      "method": "DELETE",
      "operationId": "deleteExecution",
      "summary": "",
      "user": "Admin user removing an execution from the authentication flow.",
      "ideal": "Deletes the specified execution and confirms deletion."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/config",
      "method": "POST",
      "operationId": "postExecutionConfig",
      "summary": "",
      "user": "Admin user configuring a specific execution in the authentication flow.",
      "ideal": "Creates or updates the configuration for the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/config/{id}",
      "method": "GET",
      "operationId": "getExecutionConfig",
      "summary": "",
      "user": "Admin user retrieving configuration details for a specific execution.",
      "ideal": "Returns the configuration details for the specified execution."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/lower-priority",
      "method": "POST",
      "operationId": "postExecutionLowerPriority",
      "summary": "",
      "user": "Admin user lowering the priority of a specific execution.",
      "ideal": "Updates the priority of the specified execution to a lower value."
    },
    {
      "path": "/{realm}/authentication/executions/{executionId}/raise-priority",
      "method": "POST",
      "operationId": "postExecutionRaisePriority",
      "summary": "",
      "user": "Admin user raising the priority of a specific execution.",
      "ideal": "Updates the priority of the specified execution to a higher value."
    },
    {
      "path": "/{realm}/authentication/flows",
      "method": "GET",
      "operationId": "getFlows",
      "summary": "",
      "user": "Admin user listing all authentication flows in the realm.",
      "ideal": "Returns a list of all authentication flows configured in the realm."
    },
    {
      "path": "/{realm}/authentication/flows",
      "method": "POST",
      "operationId": "postFlows",
      "summary": "",
      "user": "Admin user creating a new authentication flow.",
      "ideal": "Creates a new authentication flow and returns its details."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/copy",
      "method": "POST",
      "operationId": "postCopy",
      "summary": "",
      "user": "Admin user copying an existing authentication flow.",
      "ideal": "Creates a copy of the specified authentication flow and returns its details."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions",
      "method": "GET",
      "operationId": "getExecutions",
      "summary": "",
      "user": "Admin user retrieving executions for a specific authentication flow.",
      "ideal": "Returns a list of executions associated with the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions",
      "method": "PUT",
      "operationId": "putExecutions",
      "summary": "",
      "user": "Admin user updating executions for a specific authentication flow.",
      "ideal": "Updates the executions associated with the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions/execution",
      "method": "POST",
      "operationId": "postExecution",
      "summary": "",
      "user": "Admin user adding a new execution to a specific authentication flow.",
      "ideal": "Creates a new execution in the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{flowAlias}/executions/flow",
      "method": "POST",
      "operationId": "postFlow",
      "summary": "",
      "user": "Admin user adding a new flow to a specific authentication flow.",
      "ideal": "Creates a new flow in the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "GET",
      "operationId": "getFlow",
      "summary": "",
      "user": "Admin user retrieving details of a specific authentication flow by ID.",
      "ideal": "Returns the details of the specified authentication flow."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "PUT",
      "operationId": "putFlow",
      "summary": "",
      "user": "Admin user updating an existing authentication flow.",
      "ideal": "Updates the specified authentication flow and returns the updated details."
    },
    {
      "path": "/{realm}/authentication/flows/{id}",
      "method": "DELETE",
      "operationId": "deleteFlow",
      "summary": "",
      "user": "Admin user deleting a specific authentication flow by ID.",
      "ideal": "Deletes the specified authentication flow and confirms deletion."
    },
    {
      "path": "/{realm}/authentication/form-action-providers",
      "method": "GET",
      "operationId": "getFormActionProviders",
      "summary": "",
      "user": "Admin user listing all form action providers for the realm.",
      "ideal": "Returns a list of form action providers available in the specified realm."
    },
    {
      "path": "/{realm}/authentication/form-providers",
      "method": "GET",
      "operationId": "getFormProviders",
      "summary": "",
      "user": "Admin user retrieving all form providers for the realm.",
      "ideal": "Returns a list of form providers configured in the specified realm."
    },
    {
      "path": "/{realm}/authentication/per-client-config-description",
      "method": "GET",
      "operationId": "getPerClientConfigDescription",
      "summary": "",
      "user": "Admin user seeking per-client configuration descriptions.",
      "ideal": "Returns descriptions of per-client authentication configurations."
    },
    {
      "path": "/{realm}/authentication/register-required-action",
      "method": "POST",
      "operationId": "postRegisterRequiredAction",
      "summary": "",
      "user": "Admin user registering a new required action for authentication.",
      "ideal": "Creates a new required action and returns its details."
    },
    {
      "path": "/{realm}/authentication/required-actions",
      "method": "GET",
      "operationId": "getRequiredActions",
      "summary": "",
      "user": "Admin user listing all required actions for the realm.",
      "ideal": "Returns a list of all required actions configured in the realm."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "GET",
      "operationId": "getRequiredAction",
      "summary": "",
      "user": "Admin user retrieving details of a specific required action by alias.",
      "ideal": "Returns the details of the specified required action."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "PUT",
      "operationId": "putRequiredAction",
      "summary": "",
      "user": "Admin user updating a specific required action.",
      "ideal": "Updates the specified required action and returns the updated details."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}",
      "method": "DELETE",
      "operationId": "deleteRequiredAction",
      "summary": "",
      "user": "Admin user deleting a specific required action by alias.",
      "ideal": "Deletes the specified required action and confirms deletion."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}/lower-priority",
      "method": "POST",
      "operationId": "postRequiredActionLowerPriority",
      "summary": "",
      "user": "Admin user lowering the priority of a specific required action.",
      "ideal": "Updates the priority of the specified required action to a lower value."
    },
    {
      "path": "/{realm}/authentication/required-actions/{alias}/raise-priority",
      "method": "POST",
      "operationId": "postRequiredActionRaisePriority",
      "summary": "",
      "user": "Admin user raising the priority of a specific required action.",
      "ideal": "Updates the priority of the specified required action to a higher value."
    },
    {
      "path": "/{realm}/authentication/unregistered-required-actions",
      "method": "GET",
      "operationId": "getUnregisteredRequiredActions",
      "summary": "",
      "user": "Admin user checking for unregistered required actions in the realm.",
      "ideal": "Returns a list of unregistered required actions available for registration."
    },
    {
      "path": "/myrealm/clients/123/certificates/public",
      "method": "GET",
      "operationId": "getCertificate",
      "summary": "",
      "user": "Admin user requesting the public certificate for client 123 in realm 'myrealm'.",
      "ideal": "Returns the public certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/download",
      "method": "POST",
      "operationId": "postDownload",
      "summary": "",
      "user": "Admin user initiating a download of the private certificate for client 123.",
      "ideal": "Successfully downloads the private certificate for client 123."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/generate",
      "method": "POST",
      "operationId": "postGenerate",
      "summary": "",
      "user": "Admin user generating a new private certificate for client 123.",
      "ideal": "Generates a new private certificate for the specified client."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/generate-and-download",
      "method": "POST",
      "operationId": "postGenerateAndDownload",
      "summary": "",
      "user": "Admin user generating and downloading a new private certificate for client 123.",
      "ideal": "Generates and immediately downloads the new private certificate."
    },
    {
      "path": "/myrealm/clients/123/certificates/private/upload",
      "method": "POST",
      "operationId": "postUpload",
      "summary": "",
      "user": "Admin user uploading a new private certificate for client 123.",
      "ideal": "Successfully uploads the new private certificate for client 123."
    },
    {
      "path": "/myrealm/clients/123/certificates/public/upload-certificate",
      "method": "POST",
      "operationId": "postUploadCertificate",
      "summary": "",
      "user": "Admin user uploading a new public certificate for client 123.",
      "ideal": "Successfully uploads the new public certificate for client 123."
    },
    {
      "path": "/{realm}/clients-initial-access",
      "method": "GET",
      "operationId": "getClientsInitialAccess",
      "summary": "",
      "user": "As an admin, I want to retrieve the list of initial access tokens for clients in a specific realm so that I can manage client access effectively.",
      "ideal": "The response should return a JSON array of initial access tokens, including details such as token ID, client ID, and expiration time."
    },
    {
      "path": "/{realm}/clients-initial-access",
      "method": "POST",
      "operationId": "postClientsInitialAccess",
      "summary": "",
      "user": "As an admin, I want to create a new initial access token for a client in a specific realm so that I can grant temporary access for client registration.",
      "ideal": "The request should accept a JSON body with client ID and the number of tokens to create, and the response should return the created token details including token ID and expiration."
    },
    {
      "path": "/{realm}/clients-initial-access/{id}",
      "method": "DELETE",
      "operationId": "deleteClientsInitialAccess",
      "summary": "",
      "user": "As an admin, I want to delete a specific initial access token for a client in a realm so that I can revoke access when it's no longer needed.",
      "ideal": "The response should confirm the deletion of the token and return a success message indicating that the token has been removed."
    },
    {
      "path": "/{realm}/client-registration-policy/providers",
      "method": "GET",
      "operationId": "getProviders",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all client registration policy providers available in the specified realm."
    },
    {
      "path": "/{realm}/groups/{id}/role-mappings/clients/{client}",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the role mappings for a specific group and client."
    },
    {
      "path": "/{realm}/groups/{id}/role-mappings/clients/{client}",
      "method": "POST",
      "operationId": "postGroupRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Assign role mappings to a specific group for a given client."
    },
    {
      "path": "/{realm}/groups/{id}/role-mappings/clients/{client}",
      "method": "DELETE",
      "operationId": "deleteGroupRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove role mappings from a specific group for a given client."
    },
    {
      "path": "/{realm}/groups/{id}/role-mappings/clients/{client}/available",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Get available role mappings for a specific group and client."
    },
    {
      "path": "/{realm}/groups/{id}/role-mappings/clients/{client}/composite",
      "method": "GET",
      "operationId": "getGroupRoleMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve composite role mappings for a specific group and client."
    },
    {
      "path": "/{realm}/users/{id}/role-mappings/clients/{client}",
      "method": "GET",
      "operationId": "getUserRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the role mappings for a specific user and client."
    },
    {
      "path": "/{realm}/users/{id}/role-mappings/clients/{client}",
      "method": "POST",
      "operationId": "postUserRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Assign role mappings to a specific user for a given client."
    },
    {
      "path": "/{realm}/users/{id}/role-mappings/clients/{client}",
      "method": "DELETE",
      "operationId": "deleteUserRoleMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove role mappings from a specific user for a given client."
    },
    {
      "path": "/{realm}/users/{id}/role-mappings/clients/{client}/available",
      "method": "GET",
      "operationId": "getUserRoleMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Get available role mappings for a specific user and client."
    },
    {
      "path": "/{realm}/users/{id}/role-mappings/clients/{client}/composite",
      "method": "GET",
      "operationId": "getUserRoleMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve composite role mappings for a specific user and client."
    },
    {
      "path": "/myrealm/client-scopes",
      "method": "GET",
      "operationId": "getClientScopes",
      "summary": "",
      "user": "Admin user requesting all client scopes for the realm.",
      "ideal": "Returns a list of all client scopes available in the specified realm."
    },
    {
      "path": "/myrealm/client-scopes",
      "method": "POST",
      "operationId": "postClientScopes",
      "summary": "",
      "user": "Admin user creating a new client scope with specific attributes.",
      "ideal": "Creates a new client scope in the specified realm and returns the created scope details."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "GET",
      "operationId": "getClientScope",
      "summary": "",
      "user": "Admin user retrieving details for a specific client scope by ID.",
      "ideal": "Returns the details of the client scope with the specified ID."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "PUT",
      "operationId": "putClientScope",
      "summary": "",
      "user": "Admin user updating the attributes of an existing client scope.",
      "ideal": "Updates the client scope with the specified ID and returns the updated scope details."
    },
    {
      "path": "/myrealm/client-scopes/12345",
      "method": "DELETE",
      "operationId": "deleteClientScope",
      "summary": "",
      "user": "Admin user deleting a specific client scope by ID.",
      "ideal": "Deletes the client scope with the specified ID and returns a success message."
    },
    {
      "path": "/myrealm/client-templates",
      "method": "GET",
      "operationId": "getClientTemplates",
      "summary": "",
      "user": "Admin user requesting all client templates for the realm.",
      "ideal": "Returns a list of all client templates available in the specified realm."
    },
    {
      "path": "/myrealm/client-templates",
      "method": "POST",
      "operationId": "postClientTemplates",
      "summary": "",
      "user": "Admin user creating a new client template with specific configurations.",
      "ideal": "Creates a new client template in the specified realm and returns the created template details."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "GET",
      "operationId": "getClientTemplate",
      "summary": "",
      "user": "Admin user retrieving details for a specific client template by ID.",
      "ideal": "Returns the details of the client template with the specified ID."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "PUT",
      "operationId": "putClientTemplate",
      "summary": "",
      "user": "Admin user updating the attributes of an existing client template.",
      "ideal": "Updates the client template with the specified ID and returns the updated template details."
    },
    {
      "path": "/myrealm/client-templates/67890",
      "method": "DELETE",
      "operationId": "deleteClientTemplate",
      "summary": "",
      "user": "Admin user deleting a specific client template by ID.",
      "ideal": "Deletes the client template with the specified ID and returns a success message."
    },
    {
      "path": "/{realm}/clients",
      "method": "GET",
      "operationId": "getClients",
      "summary": "",
      "user": "Admin user requesting a list of all clients in the specified realm.",
      "ideal": "Returns a list of clients with their details."
    },
    {
      "path": "/{realm}/clients",
      "method": "POST",
      "operationId": "postClients",
      "summary": "",
      "user": "Admin user creating a new client in the specified realm.",
      "ideal": "Successfully creates a new client and returns its details."
    },
    {
      "path": "/{realm}/clients/{id}",
      "method": "GET",
      "operationId": "getClientByRealmById",
      "summary": "",
      "user": "Admin user retrieving details of a specific client by ID.",
      "ideal": "Returns the details of the specified client."
    },
    {
      "path": "/{realm}/clients/{id}",
      "method": "PUT",
      "operationId": "putClient",
      "summary": "",
      "user": "Admin user updating the details of a specific client.",
      "ideal": "Successfully updates the client and returns the updated details."
    },
    {
      "path": "/{realm}/clients/{id}",
      "method": "DELETE",
      "operationId": "deleteClientByRealmById",
      "summary": "",
      "user": "Admin user deleting a specific client by ID.",
      "ideal": "Successfully deletes the client and returns a confirmation message."
    },
    {
      "path": "/{realm}/clients/{id}/client-secret",
      "method": "GET",
      "operationId": "getClientSecret",
      "summary": "",
      "user": "Admin user retrieving the client secret for a specific client.",
      "ideal": "Returns the client secret for the specified client."
    },
    {
      "path": "/{realm}/clients/{id}/client-secret",
      "method": "POST",
      "operationId": "postClientSecret",
      "summary": "",
      "user": "Admin user generating a new client secret for a specific client.",
      "ideal": "Successfully generates a new client secret and returns it."
    },
    {
      "path": "/{realm}/clients/{id}/client-secret/rotated",
      "method": "GET",
      "operationId": "getRotated",
      "summary": "",
      "user": "Admin user checking if the client secret has been rotated.",
      "ideal": "Returns the status of the client secret rotation."
    },
    {
      "path": "/{realm}/clients/{id}/client-secret/rotated",
      "method": "DELETE",
      "operationId": "deleteRotated",
      "summary": "",
      "user": "Admin user deleting the rotated client secret.",
      "ideal": "Successfully deletes the rotated client secret."
    },
    {
      "path": "/{realm}/clients/{id}/default-client-scopes",
      "method": "GET",
      "operationId": "getDefaultClientScopes",
      "summary": "",
      "user": "Admin user retrieving default client scopes for a specific client.",
      "ideal": "Returns a list of default client scopes."
    },
    {
      "path": "/{realm}/clients/{id}/default-client-scopes/{clientScopeId}",
      "method": "PUT",
      "operationId": "putDefaultClientScope",
      "summary": "",
      "user": "Admin user updating a default client scope for a specific client.",
      "ideal": "Successfully updates the default client scope."
    },
    {
      "path": "/{realm}/clients/{id}/default-client-scopes/{clientScopeId}",
      "method": "DELETE",
      "operationId": "deleteDefaultClientScope",
      "summary": "",
      "user": "Admin user deleting a default client scope for a specific client.",
      "ideal": "Successfully deletes the default client scope."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/generate-example-access-token",
      "method": "GET",
      "operationId": "getGenerateExampleAccessToken",
      "summary": "",
      "user": "Admin user generating an example access token for testing.",
      "ideal": "Returns an example access token."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/generate-example-id-token",
      "method": "GET",
      "operationId": "getGenerateExampleIdToken",
      "summary": "",
      "user": "Admin user generating an example ID token for testing.",
      "ideal": "Returns an example ID token."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/generate-example-userinfo",
      "method": "GET",
      "operationId": "getGenerateExampleUserinfo",
      "summary": "",
      "user": "Admin user generating example user info for testing.",
      "ideal": "Returns example user info."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/protocol-mappers",
      "method": "GET",
      "operationId": "getProtocolMappers",
      "summary": "",
      "user": "Admin user retrieving protocol mappers for a specific client.",
      "ideal": "Returns a list of protocol mappers."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/scope-mappings/{roleContainerId}/granted",
      "method": "GET",
      "operationId": "getGranted",
      "summary": "",
      "user": "Admin user checking granted scope mappings for a specific role container.",
      "ideal": "Returns granted scope mappings."
    },
    {
      "path": "/{realm}/clients/{id}/evaluate-scopes/scope-mappings/{roleContainerId}/not-granted",
      "method": "GET",
      "operationId": "getNotGranted",
      "summary": "",
      "user": "Admin user checking not granted scope mappings for a specific role container.",
      "ideal": "Returns not granted scope mappings."
    },
    {
      "path": "/{realm}/clients/{id}/installation/providers/{providerId}",
      "method": "GET",
      "operationId": "getInstallationProvider",
      "summary": "",
      "user": "Admin user retrieving installation provider details for a specific client.",
      "ideal": "Returns installation provider details."
    },
    {
      "path": "/{realm}/clients/{id}/management/permissions",
      "method": "GET",
      "operationId": "getClientManagementPermissions",
      "summary": "",
      "user": "Admin user retrieving management permissions for a specific client.",
      "ideal": "Returns management permissions."
    },
    {
      "path": "/{realm}/clients/{id}/management/permissions",
      "method": "PUT",
      "operationId": "putClientManagementPermissions",
      "summary": "",
      "user": "Admin user updating management permissions for a specific client.",
      "ideal": "Successfully updates management permissions."
    },
    {
      "path": "/{realm}/clients/{id}/nodes",
      "method": "POST",
      "operationId": "postNodes",
      "summary": "",
      "user": "Admin user adding nodes to a specific client.",
      "ideal": "Successfully adds nodes and returns updated node list."
    },
    {
      "path": "/{realm}/clients/{id}/nodes/{node}",
      "method": "DELETE",
      "operationId": "deleteNode",
      "summary": "",
      "user": "Admin user deleting a specific node from a client.",
      "ideal": "Successfully deletes the node."
    },
    {
      "path": "/{realm}/clients/{id}/offline-session-count",
      "method": "GET",
      "operationId": "getOfflineSessionCount",
      "summary": "",
      "user": "Admin user retrieving the count of offline sessions for a specific client.",
      "ideal": "Returns the count of offline sessions."
    },
    {
      "path": "/{realm}/clients/{id}/offline-sessions",
      "method": "GET",
      "operationId": "getOfflineSessions",
      "summary": "",
      "user": "Admin user retrieving offline sessions for a specific client.",
      "ideal": "Returns a list of offline sessions."
    },
    {
      "path": "/{realm}/clients/{id}/optional-client-scopes",
      "method": "GET",
      "operationId": "getOptionalClientScopes",
      "summary": "",
      "user": "Admin user retrieving optional client scopes for a specific client.",
      "ideal": "Returns a list of optional client scopes."
    },
    {
      "path": "/{realm}/clients/{id}/optional-client-scopes/{clientScopeId}",
      "method": "PUT",
      "operationId": "putOptionalClientScope",
      "summary": "",
      "user": "Admin user updating an optional client scope for a specific client.",
      "ideal": "Successfully updates the optional client scope."
    },
    {
      "path": "/{realm}/clients/{id}/optional-client-scopes/{clientScopeId}",
      "method": "DELETE",
      "operationId": "deleteOptionalClientScope",
      "summary": "",
      "user": "Admin user deleting an optional client scope for a specific client.",
      "ideal": "Successfully deletes the optional client scope."
    },
    {
      "path": "/{realm}/clients/{id}/push-revocation",
      "method": "POST",
      "operationId": "postClientPushRevocation",
      "summary": "",
      "user": "Admin user pushing revocation for a specific client.",
      "ideal": "Successfully pushes revocation."
    },
    {
      "path": "/{realm}/clients/{id}/registration-access-token",
      "method": "POST",
      "operationId": "postRegistrationAccessToken",
      "summary": "",
      "user": "Admin user generating a registration access token for a specific client.",
      "ideal": "Successfully generates a registration access token."
    },
    {
      "path": "/{realm}/clients/{id}/service-account-user",
      "method": "GET",
      "operationId": "getServiceAccountUser",
      "summary": "",
      "user": "Admin user retrieving the service account user for a specific client.",
      "ideal": "Returns the service account user details."
    },
    {
      "path": "/{realm}/clients/{id}/session-count",
      "method": "GET",
      "operationId": "getSessionCount",
      "summary": "",
      "user": "Admin user retrieving the session count for a specific client.",
      "ideal": "Returns the count of active sessions."
    },
    {
      "path": "/{realm}/clients/{id}/test-nodes-available",
      "method": "GET",
      "operationId": "getTestNodesAvailable",
      "summary": "",
      "user": "Admin user checking available nodes for a specific client.",
      "ideal": "Returns a list of available nodes."
    },
    {
      "path": "/{realm}/clients/{id}/user-sessions",
      "method": "GET",
      "operationId": "getClientUserSessions",
      "summary": "",
      "user": "Admin user retrieving user sessions for a specific client.",
      "ideal": "Returns a list of user sessions."
    },
    {
      "path": "/myrealm/components",
      "method": "GET",
      "operationId": "getComponents",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of all components in the specified realm."
    },
    {
      "path": "/myrealm/components",
      "method": "POST",
      "operationId": "postComponents",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new component in the specified realm with the provided configuration."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "GET",
      "operationId": "getComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch the details of the component with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "PUT",
      "operationId": "putComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Update the configuration of the component with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/components/12345",
      "method": "DELETE",
      "operationId": "deleteComponent",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the component with ID 12345 from the specified realm."
    },
    {
      "path": "/myrealm/components/12345/sub-component-types",
      "method": "GET",
      "operationId": "getSubComponentTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of sub-component types for the component with ID 12345 in the specified realm."
    },
    {
      "path": "/v1/{realm}/groups",
      "method": "GET",
      "operationId": "getGroupsByRealm",
      "summary": "",
      "user": "Admin user requesting all groups in the specified realm to manage user roles and permissions.",
      "ideal": "Returns a list of groups within the specified realm."
    },
    {
      "path": "/v1/{realm}/groups",
      "method": "POST",
      "operationId": "postGroups",
      "summary": "",
      "user": "Admin user creating a new group in the realm to organize users based on their roles.",
      "ideal": "Creates a new group in the specified realm and returns the created group's details."
    },
    {
      "path": "/v1/{realm}/groups/count",
      "method": "GET",
      "operationId": "getGroupsCountByRealm",
      "summary": "",
      "user": "Admin user checking the total number of groups in the realm for reporting purposes.",
      "ideal": "Returns the count of groups in the specified realm."
    },
    {
      "path": "/v1/{realm}/groups/{id}",
      "method": "GET",
      "operationId": "getGroup",
      "summary": "",
      "user": "Admin user retrieving details of a specific group to review its configuration and members.",
      "ideal": "Returns the details of the specified group."
    },
    {
      "path": "/v1/{realm}/groups/{id}",
      "method": "PUT",
      "operationId": "putGroupByRealmById",
      "summary": "",
      "user": "Admin user updating the group's information to reflect changes in the organization.",
      "ideal": "Updates the specified group's details and returns the updated group."
    },
    {
      "path": "/v1/{realm}/groups/{id}",
      "method": "DELETE",
      "operationId": "deleteGroupByRealmById",
      "summary": "",
      "user": "Admin user deleting a group that is no longer needed to maintain a clean structure.",
      "ideal": "Deletes the specified group and returns a confirmation of the deletion."
    },
    {
      "path": "/v1/{realm}/groups/{id}/children",
      "method": "POST",
      "operationId": "postChildren",
      "summary": "",
      "user": "Admin user adding a child group to an existing group to create a hierarchy.",
      "ideal": "Adds a child group to the specified group and returns the updated group structure."
    },
    {
      "path": "/v1/{realm}/groups/{id}/management/permissions",
      "method": "GET",
      "operationId": "getGroupManagementPermissions",
      "summary": "",
      "user": "Admin user checking the management permissions of a group to ensure proper access control.",
      "ideal": "Returns the management permissions associated with the specified group."
    },
    {
      "path": "/v1/{realm}/groups/{id}/management/permissions",
      "method": "PUT",
      "operationId": "putGroupManagementPermissions",
      "summary": "",
      "user": "Admin user updating the management permissions of a group to adjust access levels.",
      "ideal": "Updates the management permissions for the specified group and returns the updated permissions."
    },
    {
      "path": "/v1/{realm}/groups/{id}/members",
      "method": "GET",
      "operationId": "getMembers",
      "summary": "",
      "user": "Admin user retrieving the list of members in a group to manage user assignments.",
      "ideal": "Returns a list of members belonging to the specified group."
    },
    {
      "path": "/myrealm/identity-provider/instances",
      "method": "GET",
      "operationId": "getInstances",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve a list of identity provider instances for the specified realm."
    },
    {
      "path": "/myrealm/identity-provider/instances",
      "method": "POST",
      "operationId": "postInstances",
      "summary": "",
      "user": "admin_user",
      "ideal": "Create a new identity provider instance in the specified realm."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider",
      "method": "GET",
      "operationId": "getInstance",
      "summary": "",
      "user": "admin_user",
      "ideal": "Fetch details of the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider",
      "method": "PUT",
      "operationId": "putInstance",
      "summary": "",
      "user": "admin_user",
      "ideal": "Update the configuration of the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider",
      "method": "DELETE",
      "operationId": "deleteInstance",
      "summary": "",
      "user": "admin_user",
      "ideal": "Delete the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/export",
      "method": "GET",
      "operationId": "getExport",
      "summary": "",
      "user": "admin_user",
      "ideal": "Export the configuration of the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/management/permissions",
      "method": "GET",
      "operationId": "getInstanceManagementPermissions",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve management permissions for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/management/permissions",
      "method": "PUT",
      "operationId": "putInstanceManagementPermissions",
      "summary": "",
      "user": "admin_user",
      "ideal": "Update management permissions for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mapper-types",
      "method": "GET",
      "operationId": "getMapperTypes",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve available mapper types for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mappers",
      "method": "GET",
      "operationId": "getMappers",
      "summary": "",
      "user": "admin_user",
      "ideal": "Get a list of mappers for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mappers",
      "method": "POST",
      "operationId": "postMappers",
      "summary": "",
      "user": "admin_user",
      "ideal": "Create a new mapper for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mappers/mapper1",
      "method": "GET",
      "operationId": "getMapper",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve details of the mapper with ID 'mapper1' for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mappers/mapper1",
      "method": "PUT",
      "operationId": "putMapper",
      "summary": "",
      "user": "admin_user",
      "ideal": "Update the mapper with ID 'mapper1' for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/instances/myprovider/mappers/mapper1",
      "method": "DELETE",
      "operationId": "deleteMapper",
      "summary": "",
      "user": "admin_user",
      "ideal": "Delete the mapper with ID 'mapper1' for the identity provider instance with alias 'myprovider'."
    },
    {
      "path": "/myrealm/identity-provider/providers/some_provider",
      "method": "GET",
      "operationId": "getIdentityProviderProvider",
      "summary": "",
      "user": "admin_user",
      "ideal": "Retrieve details of the identity provider with ID 'some_provider'."
    },
    {
      "path": "/myrealm/keys",
      "method": "GET",
      "operationId": "getKeys",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the public and private keys used for signing and encrypting tokens in the specified realm."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id1}/protocol-mappers/models/{id2}",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user requesting details of a specific protocol mapper model for a client scope.",
      "ideal": "Returns the details of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id1}/protocol-mappers/models/{id2}",
      "method": "PUT",
      "operationId": "putClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating the configuration of a specific protocol mapper model.",
      "ideal": "Successfully updates the protocol mapper model and returns the updated details."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id1}/protocol-mappers/models/{id2}",
      "method": "DELETE",
      "operationId": "deleteClientScopeProtocolMappersModel",
      "summary": "",
      "user": "Admin user removing a specific protocol mapper model from a client scope.",
      "ideal": "Confirms the deletion of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id}/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientScopeProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to a client scope.",
      "ideal": "Successfully adds the new protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id}/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a specific client scope.",
      "ideal": "Returns a list of all protocol mapper models associated with the client scope."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id}/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientScopeProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating multiple protocol mapper models for a client scope.",
      "ideal": "Successfully creates the protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/client-scopes/{id}/protocol-mappers/protocol/{protocol}",
      "method": "GET",
      "operationId": "getClientScopeProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol in a client scope.",
      "ideal": "Returns the protocol mappers associated with the specified protocol."
    },
    {
      "path": "/v1/{realm}/client-templates/{id1}/protocol-mappers/models/{id2}",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user requesting details of a specific protocol mapper model for a client template.",
      "ideal": "Returns the details of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/client-templates/{id1}/protocol-mappers/models/{id2}",
      "method": "PUT",
      "operationId": "putClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating the configuration of a specific protocol mapper model for a client template.",
      "ideal": "Successfully updates the protocol mapper model and returns the updated details."
    },
    {
      "path": "/v1/{realm}/client-templates/{id1}/protocol-mappers/models/{id2}",
      "method": "DELETE",
      "operationId": "deleteClientTemplateProtocolMappersModel",
      "summary": "",
      "user": "Admin user removing a specific protocol mapper model from a client template.",
      "ideal": "Confirms the deletion of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/client-templates/{id}/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientTemplateProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to a client template.",
      "ideal": "Successfully adds the new protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/client-templates/{id}/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a specific client template.",
      "ideal": "Returns a list of all protocol mapper models associated with the client template."
    },
    {
      "path": "/v1/{realm}/client-templates/{id}/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientTemplateProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating multiple protocol mapper models for a client template.",
      "ideal": "Successfully creates the protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/client-templates/{id}/protocol-mappers/protocol/{protocol}",
      "method": "GET",
      "operationId": "getClientTemplateProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol in a client template.",
      "ideal": "Returns the protocol mappers associated with the specified protocol."
    },
    {
      "path": "/v1/{realm}/clients/{id1}/protocol-mappers/models/{id2}",
      "method": "GET",
      "operationId": "getClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user requesting details of a specific protocol mapper model for a client.",
      "ideal": "Returns the details of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/clients/{id1}/protocol-mappers/models/{id2}",
      "method": "PUT",
      "operationId": "putClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user updating the configuration of a specific protocol mapper model for a client.",
      "ideal": "Successfully updates the protocol mapper model and returns the updated details."
    },
    {
      "path": "/v1/{realm}/clients/{id1}/protocol-mappers/models/{id2}",
      "method": "DELETE",
      "operationId": "deleteClientProtocolMappersModel",
      "summary": "",
      "user": "Admin user removing a specific protocol mapper model from a client.",
      "ideal": "Confirms the deletion of the specified protocol mapper model."
    },
    {
      "path": "/v1/{realm}/clients/{id}/protocol-mappers/add-models",
      "method": "POST",
      "operationId": "postClientProtocolMappersAddModels",
      "summary": "",
      "user": "Admin user adding new protocol mapper models to a client.",
      "ideal": "Successfully adds the new protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/clients/{id}/protocol-mappers/models",
      "method": "GET",
      "operationId": "getClientProtocolMappersModels",
      "summary": "",
      "user": "Admin user retrieving all protocol mapper models for a specific client.",
      "ideal": "Returns a list of all protocol mapper models associated with the client."
    },
    {
      "path": "/v1/{realm}/clients/{id}/protocol-mappers/models",
      "method": "POST",
      "operationId": "postClientProtocolMappersModels",
      "summary": "",
      "user": "Admin user creating multiple protocol mapper models for a client.",
      "ideal": "Successfully creates the protocol mapper models and returns their details."
    },
    {
      "path": "/v1/{realm}/clients/{id}/protocol-mappers/protocol/{protocol}",
      "method": "GET",
      "operationId": "getClientProtocolMappersProtocol",
      "summary": "",
      "user": "Admin user checking protocol mappers for a specific protocol in a client.",
      "ideal": "Returns the protocol mappers associated with the specified protocol."
    },
    {
      "path": "/v1/",
      "method": "GET",
      "operationId": "get",
      "summary": "",
      "user": "Admin user retrieves the API root to check available endpoints.",
      "ideal": "Returns a list of available operations in the Keycloak Admin REST API."
    },
    {
      "path": "/v1/{realm}",
      "method": "GET",
      "operationId": "getByRealm",
      "summary": "",
      "user": "An admin user wants to fetch details about a specific realm.",
      "ideal": "Returns the details of the specified realm."
    },
    {
      "path": "/v1/{realm}",
      "method": "PUT",
      "operationId": "putByRealm",
      "summary": "",
      "user": "An admin user updates the configuration of a specific realm.",
      "ideal": "Successfully updates the realm configuration and returns the updated details."
    },
    {
      "path": "/v1/{realm}",
      "method": "DELETE",
      "operationId": "deleteByRealm",
      "summary": "",
      "user": "An admin user deletes a specific realm that is no longer needed.",
      "ideal": "Successfully deletes the realm and returns a confirmation message."
    },
    {
      "path": "/v1/{realm}/admin-events",
      "method": "GET",
      "operationId": "getAdminEvents",
      "summary": "",
      "user": "An admin user wants to retrieve all admin events for auditing purposes.",
      "ideal": "Returns a list of admin events associated with the specified realm."
    },
    {
      "path": "/v1/{realm}/client-policies/policies",
      "method": "GET",
      "operationId": "getPolicies",
      "summary": "",
      "user": "A security officer needs to review the client policies in a realm.",
      "ideal": "Returns the list of client policies defined in the specified realm."
    },
    {
      "path": "/v1/{realm}/localization/en",
      "method": "GET",
      "operationId": "getLocalizationByRealmByLocale",
      "summary": "",
      "user": "A developer wants to fetch localization settings for English in a specific realm.",
      "ideal": "Returns localization settings for the specified locale in the realm."
    },
    {
      "path": "/v1/{realm}/localization/en/welcome",
      "method": "GET",
      "operationId": "getLocalizationByRealmByLocaleByKey",
      "summary": "",
      "user": "A developer retrieves the localized welcome message for English.",
      "ideal": "Returns the localized string for the key 'welcome' in English."
    },
    {
      "path": "/v1/{realm}/logout-all",
      "method": "POST",
      "operationId": "postLogoutAll",
      "summary": "",
      "user": "An admin user wants to log out all users from a specific realm.",
      "ideal": "Successfully logs out all users and returns a confirmation message."
    },
    {
      "path": "/v1/{realm}/partial-export",
      "method": "POST",
      "operationId": "postPartialExport",
      "summary": "",
      "user": "An admin user needs to export specific data from a realm for backup.",
      "ideal": "Returns the exported data in the specified format."
    },
    {
      "path": "/myrealm/groups/123/role-mappings",
      "method": "GET",
      "operationId": "getGroupRoleMappings",
      "summary": "",
      "user": "Admin user requesting role mappings for group 123.",
      "ideal": "Returns the role mappings associated with the specified group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user checking realm-specific role mappings for group 123.",
      "ideal": "Returns the realm-specific role mappings for the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "POST",
      "operationId": "postGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user adding role mappings to group 123.",
      "ideal": "Successfully adds the specified role mappings to the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteGroupRoleMappingsRealm",
      "summary": "",
      "user": "Admin user removing role mappings from group 123.",
      "ideal": "Successfully removes the specified role mappings from the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm/available",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealmAvailable",
      "summary": "",
      "user": "Admin user checking available role mappings for group 123.",
      "ideal": "Returns a list of available role mappings for the group."
    },
    {
      "path": "/myrealm/groups/123/role-mappings/realm/composite",
      "method": "GET",
      "operationId": "getGroupRoleMappingsRealmComposite",
      "summary": "",
      "user": "Admin user retrieving composite role mappings for group 123.",
      "ideal": "Returns the composite role mappings for the group."
    },
    {
      "path": "/myrealm/users/456/role-mappings",
      "method": "GET",
      "operationId": "getUserRoleMappings",
      "summary": "",
      "user": "Admin user requesting role mappings for user 456.",
      "ideal": "Returns the role mappings associated with the specified user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user checking realm-specific role mappings for user 456.",
      "ideal": "Returns the realm-specific role mappings for the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "POST",
      "operationId": "postUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user adding role mappings to user 456.",
      "ideal": "Successfully adds the specified role mappings to the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteUserRoleMappingsRealm",
      "summary": "",
      "user": "Admin user removing role mappings from user 456.",
      "ideal": "Successfully removes the specified role mappings from the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm/available",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealmAvailable",
      "summary": "",
      "user": "Admin user checking available role mappings for user 456.",
      "ideal": "Returns a list of available role mappings for the user."
    },
    {
      "path": "/myrealm/users/456/role-mappings/realm/composite",
      "method": "GET",
      "operationId": "getUserRoleMappingsRealmComposite",
      "summary": "",
      "user": "Admin user retrieving composite role mappings for user 456.",
      "ideal": "Returns the composite role mappings for the user."
    },
    {
      "path": "/myrealm/clients/123/roles",
      "method": "GET",
      "operationId": "getClientRoles",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all roles associated with the client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles",
      "method": "POST",
      "operationId": "postClientRoles",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new role for the client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "GET",
      "operationId": "getClientRole",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch details of the role 'myrole' for the client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "PUT",
      "operationId": "putClientRole",
      "summary": "",
      "user": "admin",
      "ideal": "Update the role 'myrole' for the client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole",
      "method": "DELETE",
      "operationId": "deleteClientRole",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the role 'myrole' for the client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "GET",
      "operationId": "getClientRoleComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve composite roles for the role 'myrole' of client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "POST",
      "operationId": "postClientRoleComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Add composite roles to the role 'myrole' for client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites",
      "method": "DELETE",
      "operationId": "deleteClientRoleComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Remove composite roles from the role 'myrole' for client ID 123 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/clients/123/roles/myrole/composites/clients/456",
      "method": "GET",
      "operationId": "getClientRoleCompositesClient",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite roles for 'myrole' of client ID 123 specific to client UUID 456 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles",
      "method": "GET",
      "operationId": "getRolesByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "List all roles available in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles",
      "method": "POST",
      "operationId": "postRolesByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new role in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "GET",
      "operationId": "getRoleByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve details of the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "PUT",
      "operationId": "putRoleByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Update the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole",
      "method": "DELETE",
      "operationId": "deleteRoleByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the role 'myrole' from the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/composites",
      "method": "GET",
      "operationId": "getRoleCompositesByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch composite roles for 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/composites",
      "method": "POST",
      "operationId": "postRoleCompositesByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Add composite roles to 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/composites",
      "method": "DELETE",
      "operationId": "deleteRoleCompositesByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Remove composite roles from 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/composites/clients/456",
      "method": "GET",
      "operationId": "getRoleCompositesClientByRealmByRoleNameByClientUuid",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite roles for 'myrole' specific to client UUID 456 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/groups",
      "method": "GET",
      "operationId": "getRoleGroupsByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve groups associated with the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles/myrole/users",
      "method": "GET",
      "operationId": "getRoleUsersByRealmByRoleName",
      "summary": "",
      "user": "admin",
      "ideal": "List users assigned to the role 'myrole' in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345",
      "method": "GET",
      "operationId": "getRolesById",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the role details for the role with ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345",
      "method": "PUT",
      "operationId": "putRolesById",
      "summary": "",
      "user": "admin",
      "ideal": "Update the role with ID 12345 in the realm 'myrealm' with new details."
    },
    {
      "path": "/myrealm/roles-by-id/12345",
      "method": "DELETE",
      "operationId": "deleteRolesById",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the role with ID 12345 from the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/composites",
      "method": "GET",
      "operationId": "getRolesByIdComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch the composite roles associated with the role ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/composites",
      "method": "POST",
      "operationId": "postRolesByIdComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Add composite roles to the role with ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/composites",
      "method": "DELETE",
      "operationId": "deleteRolesByIdComposites",
      "summary": "",
      "user": "admin",
      "ideal": "Remove composite roles from the role with ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/composites/clients/67890",
      "method": "GET",
      "operationId": "getRolesByIdCompositesClient",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve composite roles for the role ID 12345 specific to the client with UUID 67890 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/composites/realm",
      "method": "GET",
      "operationId": "getRolesByIdCompositesRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Get the composite roles for the role ID 12345 at the realm level in 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/management/permissions",
      "method": "GET",
      "operationId": "getRolesByIdManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch management permissions for the role with ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/roles-by-id/12345/management/permissions",
      "method": "PUT",
      "operationId": "putRolesByIdManagementPermissions",
      "summary": "",
      "user": "admin",
      "ideal": "Update management permissions for the role with ID 12345 in the realm 'myrealm'."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings",
      "method": "GET",
      "operationId": "getClientScopeScopeMappings",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Get scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Add scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteClientScopeScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove scope mappings for a specific client within the client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available scope mappings for a specific client."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite scope mappings for a specific client."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "POST",
      "operationId": "postClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Add realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteClientScopeScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Remove realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm/available",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealmAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-scopes/123/scope-mappings/realm/composite",
      "method": "GET",
      "operationId": "getClientScopeScopeMappingsRealmComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite realm scope mappings for the specified client scope."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappings",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Get scope mappings for a specific client within the client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postClientTemplateScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Add scope mappings for a specific client within the client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteClientTemplateScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove scope mappings for a specific client within the client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available scope mappings for a specific client in the template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite scope mappings for a specific client in the template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/realm",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all realm scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/realm",
      "method": "POST",
      "operationId": "postClientTemplateScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Add realm scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteClientTemplateScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Remove realm scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/realm/available",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsRealmAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available realm scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/client-templates/456/scope-mappings/realm/composite",
      "method": "GET",
      "operationId": "getClientTemplateScopeMappingsRealmComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite realm scope mappings for the specified client template."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings",
      "method": "GET",
      "operationId": "getClientScopeMappings",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all scope mappings for the specified client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/clients/myclient",
      "method": "GET",
      "operationId": "getClientScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Get scope mappings for a specific client within the client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/clients/myclient",
      "method": "POST",
      "operationId": "postClientScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Add scope mappings for a specific client within the client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/clients/myclient",
      "method": "DELETE",
      "operationId": "deleteClientScopeMappingsClient",
      "summary": "",
      "user": "admin",
      "ideal": "Remove scope mappings for a specific client within the client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/clients/myclient/available",
      "method": "GET",
      "operationId": "getClientScopeMappingsClientAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available scope mappings for a specific client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/clients/myclient/composite",
      "method": "GET",
      "operationId": "getClientScopeMappingsClientComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite scope mappings for a specific client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/realm",
      "method": "GET",
      "operationId": "getClientScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all realm scope mappings for the specified client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/realm",
      "method": "POST",
      "operationId": "postClientScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Add realm scope mappings for the specified client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/realm",
      "method": "DELETE",
      "operationId": "deleteClientScopeMappingsRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Remove realm scope mappings for the specified client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/realm/available",
      "method": "GET",
      "operationId": "getClientScopeMappingsRealmAvailable",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve available realm scope mappings for the specified client."
    },
    {
      "path": "/myrealm/clients/789/scope-mappings/realm/composite",
      "method": "GET",
      "operationId": "getClientScopeMappingsRealmComposite",
      "summary": "",
      "user": "admin",
      "ideal": "Get composite realm scope mappings for the specified client."
    },
    {
      "path": "/myrealm/users",
      "method": "GET",
      "operationId": "getUsersByRealm",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve a list of users in the specified realm."
    },
    {
      "path": "/myrealm/users",
      "method": "POST",
      "operationId": "postUsers",
      "summary": "",
      "user": "admin",
      "ideal": "Create a new user in the specified realm with the provided details."
    },
    {
      "path": "/myrealm/users/count",
      "method": "GET",
      "operationId": "getUsersCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the total count of users in the specified realm."
    },
    {
      "path": "/myrealm/users/profile",
      "method": "GET",
      "operationId": "getProfile",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve the profile information for the realm."
    },
    {
      "path": "/myrealm/users/profile",
      "method": "PUT",
      "operationId": "putProfile",
      "summary": "",
      "user": "admin",
      "ideal": "Update the profile information for the realm."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "GET",
      "operationId": "getUserByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Fetch details of the user with ID 12345 in the specified realm."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "PUT",
      "operationId": "putUser",
      "summary": "",
      "user": "admin",
      "ideal": "Update the user information for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345",
      "method": "DELETE",
      "operationId": "deleteUserByRealmById",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the user with ID 12345 from the specified realm."
    },
    {
      "path": "/myrealm/users/12345/configured-user-storage-credential-types",
      "method": "GET",
      "operationId": "getConfiguredUserStorageCredentialTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve configured credential types for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/consents",
      "method": "GET",
      "operationId": "getConsents",
      "summary": "",
      "user": "admin",
      "ideal": "Get the consents granted by the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/consents/myclient",
      "method": "DELETE",
      "operationId": "deleteConsent",
      "summary": "",
      "user": "admin",
      "ideal": "Remove consent for the client 'myclient' for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/credentials",
      "method": "GET",
      "operationId": "getCredentials",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all credentials for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1",
      "method": "DELETE",
      "operationId": "deleteCredential",
      "summary": "",
      "user": "admin",
      "ideal": "Delete the credential with ID 'cred1' for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/moveAfter/cred2",
      "method": "POST",
      "operationId": "postMoveAfter",
      "summary": "",
      "user": "admin",
      "ideal": "Move the credential 'cred1' after 'cred2' for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/moveToFirst",
      "method": "POST",
      "operationId": "postMoveToFirst",
      "summary": "",
      "user": "admin",
      "ideal": "Move the credential 'cred1' to the first position for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/credentials/cred1/userLabel",
      "method": "PUT",
      "operationId": "putUserLabel",
      "summary": "",
      "user": "admin",
      "ideal": "Update the user label for credential 'cred1' of the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/disable-credential-types",
      "method": "PUT",
      "operationId": "putDisableCredentialTypes",
      "summary": "",
      "user": "admin",
      "ideal": "Disable specified credential types for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/execute-actions-email",
      "method": "PUT",
      "operationId": "putExecuteActionsEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Send an email to the user with ID 12345 to execute specified actions."
    },
    {
      "path": "/myrealm/users/12345/federated-identity",
      "method": "GET",
      "operationId": "getFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve federated identity information for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/federated-identity/myprovider",
      "method": "POST",
      "operationId": "postFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Link a federated identity from 'myprovider' to the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/federated-identity/myprovider",
      "method": "DELETE",
      "operationId": "deleteFederatedIdentity",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the federated identity from 'myprovider' for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/groups",
      "method": "GET",
      "operationId": "getUserGroups",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all groups the user with ID 12345 belongs to."
    },
    {
      "path": "/myrealm/users/12345/groups/count",
      "method": "GET",
      "operationId": "getUserGroupsCount",
      "summary": "",
      "user": "admin",
      "ideal": "Get the count of groups the user with ID 12345 is a member of."
    },
    {
      "path": "/myrealm/users/12345/groups/67890",
      "method": "PUT",
      "operationId": "putUserGroup",
      "summary": "",
      "user": "admin",
      "ideal": "Add the user with ID 12345 to the group with ID 67890."
    },
    {
      "path": "/myrealm/users/12345/groups/67890",
      "method": "DELETE",
      "operationId": "deleteUserGroup",
      "summary": "",
      "user": "admin",
      "ideal": "Remove the user with ID 12345 from the group with ID 67890."
    },
    {
      "path": "/myrealm/users/12345/impersonation",
      "method": "POST",
      "operationId": "postImpersonation",
      "summary": "",
      "user": "admin",
      "ideal": "Impersonate the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/logout",
      "method": "POST",
      "operationId": "postLogout",
      "summary": "",
      "user": "admin",
      "ideal": "Log out the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/offline-sessions/myclientuuid",
      "method": "GET",
      "operationId": "getOfflineSession",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve offline session details for the user with ID 12345 and client UUID 'myclientuuid'."
    },
    {
      "path": "/myrealm/users/12345/reset-password",
      "method": "PUT",
      "operationId": "putResetPassword",
      "summary": "",
      "user": "admin",
      "ideal": "Reset the password for the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/reset-password-email",
      "method": "PUT",
      "operationId": "putResetPasswordEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Send a password reset email to the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/send-verify-email",
      "method": "PUT",
      "operationId": "putSendVerifyEmail",
      "summary": "",
      "user": "admin",
      "ideal": "Send a verification email to the user with ID 12345."
    },
    {
      "path": "/myrealm/users/12345/sessions",
      "method": "GET",
      "operationId": "getSessions",
      "summary": "",
      "user": "admin",
      "ideal": "Retrieve all active sessions for the user with ID 12345."
    }
  ]
}