{
  "gold": [
    {
      "path": "/enterprises/my-enterprise/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-enterprise",
      "summary": "",
      "user": "User requests to list all Dependabot alerts for the specified enterprise to monitor security vulnerabilities.",
      "ideal": "Returns a list of alerts with details such as alert number, package name, and severity."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access",
      "method": "GET",
      "operationId": "dependabot/repository-access-for-org",
      "summary": "",
      "user": "User wants to check which repositories have Dependabot access in their organization.",
      "ideal": "Returns a list of repositories along with their access levels."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access",
      "method": "PATCH",
      "operationId": "dependabot/update-repository-access-for-org",
      "summary": "",
      "user": "User updates the repository access settings for Dependabot in their organization.",
      "ideal": "Successfully updates the access levels for the specified repositories."
    },
    {
      "path": "/organizations/my-org/dependabot/repository-access/default-level",
      "method": "PUT",
      "operationId": "dependabot/set-repository-access-default-level",
      "summary": "",
      "user": "User sets the default access level for new repositories in their organization.",
      "ideal": "Successfully sets the default access level for future repositories."
    },
    {
      "path": "/orgs/my-org/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-org",
      "summary": "",
      "user": "User retrieves all Dependabot alerts for their organization to ensure security compliance.",
      "ideal": "Returns a comprehensive list of alerts with relevant details."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets",
      "method": "GET",
      "operationId": "dependabot/list-org-secrets",
      "summary": "",
      "user": "User wants to view all secrets configured for Dependabot in their organization.",
      "ideal": "Returns a list of secrets with their names and creation dates."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/public-key",
      "method": "GET",
      "operationId": "dependabot/get-org-public-key",
      "summary": "",
      "user": "User requests the public key for encrypting secrets for their organization.",
      "ideal": "Returns the public key for the organization."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "GET",
      "operationId": "dependabot/get-org-secret",
      "summary": "",
      "user": "User retrieves the details of a specific secret in their organization.",
      "ideal": "Returns the secret details including its value and visibility."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "PUT",
      "operationId": "dependabot/create-or-update-org-secret",
      "summary": "",
      "user": "User creates or updates a secret for Dependabot in their organization.",
      "ideal": "Successfully creates or updates the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret",
      "method": "DELETE",
      "operationId": "dependabot/delete-org-secret",
      "summary": "",
      "user": "User deletes a specific secret from their organization's Dependabot configuration.",
      "ideal": "Successfully deletes the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories",
      "method": "GET",
      "operationId": "dependabot/list-selected-repos-for-org-secret",
      "summary": "",
      "user": "User checks which repositories are using a specific secret in their organization.",
      "ideal": "Returns a list of repositories associated with the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories",
      "method": "PUT",
      "operationId": "dependabot/set-selected-repos-for-org-secret",
      "summary": "",
      "user": "User updates the list of repositories that can access a specific secret.",
      "ideal": "Successfully updates the selected repositories for the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories/my-repo-id",
      "method": "PUT",
      "operationId": "dependabot/add-selected-repo-to-org-secret",
      "summary": "",
      "user": "User adds a repository to the list of those that can access a specific secret.",
      "ideal": "Successfully adds the repository to the specified secret."
    },
    {
      "path": "/orgs/my-org/dependabot/secrets/my-secret/repositories/my-repo-id",
      "method": "DELETE",
      "operationId": "dependabot/remove-selected-repo-from-org-secret",
      "summary": "",
      "user": "User removes a repository from the list of those that can access a specific secret.",
      "ideal": "Successfully removes the repository from the specified secret."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts",
      "method": "GET",
      "operationId": "dependabot/list-alerts-for-repo",
      "summary": "",
      "user": "User retrieves all Dependabot alerts for a specific repository to address vulnerabilities.",
      "ideal": "Returns a list of alerts with detailed information for the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts/1",
      "method": "GET",
      "operationId": "dependabot/get-alert",
      "summary": "",
      "user": "User wants to view the details of a specific Dependabot alert.",
      "ideal": "Returns detailed information about the specified alert."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/alerts/1",
      "method": "PATCH",
      "operationId": "dependabot/update-alert",
      "summary": "",
      "user": "User updates the status of a specific Dependabot alert after addressing the issue.",
      "ideal": "Successfully updates the alert status."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets",
      "method": "GET",
      "operationId": "dependabot/list-repo-secrets",
      "summary": "",
      "user": "User checks all secrets configured for Dependabot in a specific repository.",
      "ideal": "Returns a list of secrets with their names and visibility."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/public-key",
      "method": "GET",
      "operationId": "dependabot/get-repo-public-key",
      "summary": "",
      "user": "User requests the public key for encrypting secrets for their repository.",
      "ideal": "Returns the public key for the repository."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "GET",
      "operationId": "dependabot/get-repo-secret",
      "summary": "",
      "user": "User retrieves the details of a specific secret in their repository.",
      "ideal": "Returns the secret details including its value and visibility."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "PUT",
      "operationId": "dependabot/create-or-update-repo-secret",
      "summary": "",
      "user": "User creates or updates a secret for Dependabot in their repository.",
      "ideal": "Successfully creates or updates the specified secret."
    },
    {
      "path": "/repos/my-owner/my-repo/dependabot/secrets/my-secret",
      "method": "DELETE",
      "operationId": "dependabot/delete-repo-secret",
      "summary": "",
      "user": "User deletes a specific secret from their repository's Dependabot configuration.",
      "ideal": "Successfully deletes the specified secret."
    }
  ]
}